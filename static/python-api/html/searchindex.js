Search.setIndex({"docnames": ["autoapi/bittensor/axon/index", "autoapi/bittensor/btlogging/defines/index", "autoapi/bittensor/btlogging/format/index", "autoapi/bittensor/btlogging/helpers/index", "autoapi/bittensor/btlogging/index", "autoapi/bittensor/btlogging/loggingmachine/index", "autoapi/bittensor/chain_data/index", "autoapi/bittensor/cli/index", "autoapi/bittensor/commands/delegates/index", "autoapi/bittensor/commands/identity/index", "autoapi/bittensor/commands/index", "autoapi/bittensor/commands/inspect/index", "autoapi/bittensor/commands/list/index", "autoapi/bittensor/commands/metagraph/index", "autoapi/bittensor/commands/misc/index", "autoapi/bittensor/commands/network/index", "autoapi/bittensor/commands/overview/index", "autoapi/bittensor/commands/register/index", "autoapi/bittensor/commands/root/index", "autoapi/bittensor/commands/senate/index", "autoapi/bittensor/commands/stake/index", "autoapi/bittensor/commands/transfer/index", "autoapi/bittensor/commands/unstake/index", "autoapi/bittensor/commands/wallets/index", "autoapi/bittensor/config/index", "autoapi/bittensor/dendrite/index", "autoapi/bittensor/errors/index", "autoapi/bittensor/extrinsics/delegation/index", "autoapi/bittensor/extrinsics/index", "autoapi/bittensor/extrinsics/network/index", "autoapi/bittensor/extrinsics/prometheus/index", "autoapi/bittensor/extrinsics/registration/index", "autoapi/bittensor/extrinsics/root/index", "autoapi/bittensor/extrinsics/senate/index", "autoapi/bittensor/extrinsics/serving/index", "autoapi/bittensor/extrinsics/set_weights/index", "autoapi/bittensor/extrinsics/staking/index", "autoapi/bittensor/extrinsics/transfer/index", "autoapi/bittensor/extrinsics/unstaking/index", "autoapi/bittensor/index", "autoapi/bittensor/keyfile/index", "autoapi/bittensor/metagraph/index", "autoapi/bittensor/stream/index", "autoapi/bittensor/subnets/index", "autoapi/bittensor/subtensor/index", "autoapi/bittensor/synapse/index", "autoapi/bittensor/tensor/index", "autoapi/bittensor/threadpool/index", "autoapi/bittensor/types/index", "autoapi/bittensor/wallet/index", "autoapi/index", "index"], "filenames": ["autoapi/bittensor/axon/index.rst", "autoapi/bittensor/btlogging/defines/index.rst", "autoapi/bittensor/btlogging/format/index.rst", "autoapi/bittensor/btlogging/helpers/index.rst", "autoapi/bittensor/btlogging/index.rst", "autoapi/bittensor/btlogging/loggingmachine/index.rst", "autoapi/bittensor/chain_data/index.rst", "autoapi/bittensor/cli/index.rst", "autoapi/bittensor/commands/delegates/index.rst", "autoapi/bittensor/commands/identity/index.rst", "autoapi/bittensor/commands/index.rst", "autoapi/bittensor/commands/inspect/index.rst", "autoapi/bittensor/commands/list/index.rst", "autoapi/bittensor/commands/metagraph/index.rst", "autoapi/bittensor/commands/misc/index.rst", "autoapi/bittensor/commands/network/index.rst", "autoapi/bittensor/commands/overview/index.rst", "autoapi/bittensor/commands/register/index.rst", "autoapi/bittensor/commands/root/index.rst", "autoapi/bittensor/commands/senate/index.rst", "autoapi/bittensor/commands/stake/index.rst", "autoapi/bittensor/commands/transfer/index.rst", "autoapi/bittensor/commands/unstake/index.rst", "autoapi/bittensor/commands/wallets/index.rst", "autoapi/bittensor/config/index.rst", "autoapi/bittensor/dendrite/index.rst", "autoapi/bittensor/errors/index.rst", "autoapi/bittensor/extrinsics/delegation/index.rst", "autoapi/bittensor/extrinsics/index.rst", "autoapi/bittensor/extrinsics/network/index.rst", "autoapi/bittensor/extrinsics/prometheus/index.rst", "autoapi/bittensor/extrinsics/registration/index.rst", "autoapi/bittensor/extrinsics/root/index.rst", "autoapi/bittensor/extrinsics/senate/index.rst", "autoapi/bittensor/extrinsics/serving/index.rst", "autoapi/bittensor/extrinsics/set_weights/index.rst", "autoapi/bittensor/extrinsics/staking/index.rst", "autoapi/bittensor/extrinsics/transfer/index.rst", "autoapi/bittensor/extrinsics/unstaking/index.rst", "autoapi/bittensor/index.rst", "autoapi/bittensor/keyfile/index.rst", "autoapi/bittensor/metagraph/index.rst", "autoapi/bittensor/stream/index.rst", "autoapi/bittensor/subnets/index.rst", "autoapi/bittensor/subtensor/index.rst", "autoapi/bittensor/synapse/index.rst", "autoapi/bittensor/tensor/index.rst", "autoapi/bittensor/threadpool/index.rst", "autoapi/bittensor/types/index.rst", "autoapi/bittensor/wallet/index.rst", "autoapi/index.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.axon</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.btlogging.defines</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.btlogging.format</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.btlogging.helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.btlogging</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.btlogging.loggingmachine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.chain_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.cli</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.delegates</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.identity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.inspect</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.list</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.metagraph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.misc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.network</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.overview</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.register</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.root</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.senate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.stake</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.transfer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.unstake</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.commands.wallets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.dendrite</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.errors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.extrinsics.delegation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.extrinsics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.extrinsics.network</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.extrinsics.prometheus</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.extrinsics.registration</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.extrinsics.root</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.extrinsics.senate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.extrinsics.serving</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.extrinsics.set_weights</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.extrinsics.staking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.extrinsics.transfer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.extrinsics.unstaking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.keyfile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.metagraph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.stream</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.subnets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.subtensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.synapse</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.threadpool</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.wallet</span></code>", "API Reference", "Welcome to Bittensor API Documentation"], "terms": {"creat": [0, 6, 7, 9, 10, 15, 23, 24, 25, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50], "initi": [0, 2, 4, 5, 6, 7, 8, 10, 15, 17, 18, 24, 25, 26, 31, 39, 40, 41, 42, 44, 47, 48, 49], "which": [0, 6, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 23, 24, 25, 34, 39, 41, 42, 44, 45, 49], "servic": [0, 39, 44], "forward": [0, 10, 14, 25, 39], "backward": 0, "request": [0, 10, 19, 25, 26, 39, 42, 44, 45], "from": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49], "other": [0, 3, 6, 9, 10, 13, 15, 18, 19, 21, 25, 39, 41, 44, 45, 47], "neuron": [0, 6, 10, 11, 13, 15, 16, 17, 18, 20, 22, 23, 25, 26, 35, 39, 41, 44, 45], "axonmiddlewar": 0, "app": 0, "base": [0, 2, 4, 5, 6, 7, 8, 10, 15, 17, 18, 23, 24, 25, 26, 31, 39, 41, 42, 43, 44, 45, 46, 47, 48], "starlett": [0, 39, 42], "middlewar": [0, 39], "basehttpmiddlewar": 0, "The": [0, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49], "i": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49], "kei": [0, 6, 7, 9, 10, 12, 13, 15, 19, 21, 23, 25, 32, 35, 37, 39, 40, 41, 44, 45, 49], "compon": [0, 39, 41, 44, 49], "server": [0, 25, 26, 39, 42], "respons": [0, 10, 17, 18, 19, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45], "process": [0, 4, 5, 8, 10, 15, 17, 18, 19, 20, 22, 23, 25, 31, 39, 41, 42, 43, 44, 45, 46], "all": [0, 3, 4, 5, 8, 10, 11, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 31, 36, 38, 39, 41, 44, 47], "incom": [0, 25, 39, 44], "It": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 34, 39, 40, 41, 42, 44, 45, 47, 49], "handl": [0, 4, 5, 7, 8, 9, 10, 25, 39, 41, 42, 44, 45, 49], "essenti": [0, 7, 10, 15, 18, 19, 20, 23, 25, 39, 41, 44, 45], "task": [0, 39, 44, 45, 49], "verifi": [0, 8, 10, 17, 21, 26, 39, 40, 44, 45], "execut": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 36, 38, 39, 41, 44, 47], "blacklist": [0, 26, 39, 45], "check": [0, 4, 5, 7, 8, 10, 14, 15, 17, 19, 20, 21, 22, 23, 25, 38, 39, 40, 44, 45, 49], "run": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 39, 44, 45, 47, 49], "prioriti": [0, 26, 39, 47, 49], "manag": [0, 3, 5, 7, 10, 16, 22, 23, 24, 25, 39, 41, 42, 44, 45, 49], "log": [0, 1, 2, 3, 4, 5, 10, 17, 25, 31, 39, 41, 44], "messag": [0, 1, 2, 4, 5, 7, 10, 17, 25, 26, 39, 44, 45, 49], "error": [0, 4, 5, 7, 10, 15, 17, 21, 25, 34, 36, 38, 39, 44, 45, 46, 49, 50], "addition": [0, 39, 44, 45], "updat": [0, 8, 9, 10, 13, 14, 15, 16, 17, 23, 25, 26, 31, 39, 40, 41, 44, 49], "header": [0, 25, 26, 39, 42, 45], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 34, 37, 39, 40, 41, 42, 44, 45, 47, 49, 50, 51], "act": [0, 25, 39, 41, 44], "an": [0, 2, 3, 4, 5, 6, 7, 9, 10, 13, 15, 16, 17, 18, 19, 21, 23, 25, 26, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49], "intermediari": 0, "layer": [0, 10, 18, 39, 41, 44], "ensur": [0, 4, 5, 8, 10, 14, 15, 17, 21, 23, 25, 39, 41, 42, 44, 45], "each": [0, 4, 5, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 22, 24, 25, 36, 38, 39, 41, 44, 45, 49], "accord": [0, 10, 17, 34, 39, 41, 42, 45], "defin": [0, 2, 4, 15, 39, 40, 44, 45, 50], "rule": [0, 39, 44], "protocol": [0, 6, 7, 10, 19, 23, 34, 39, 44, 45], "network": [0, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 30, 32, 34, 39, 41, 42, 43, 44, 45, 49, 50], "plai": [0, 10, 19, 39, 41, 44, 45], "pivot": [0, 39, 41, 44, 45], "role": [0, 10, 15, 19, 23, 39, 41, 44, 45], "maintain": [0, 10, 23, 39, 41, 44, 45], "integr": [0, 39, 41, 44, 45], "secur": [0, 10, 15, 17, 20, 23, 39, 41, 44, 45, 49], "commun": [0, 10, 19, 39, 41, 44, 45], "paramet": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "fastapi": [0, 39], "instanc": [0, 3, 25, 34, 39, 41, 42, 44, 45, 47], "applic": [0, 3, 8, 9, 10, 25, 39, 41, 42, 45], "attach": [0, 39, 45], "oper": [0, 7, 8, 10, 14, 15, 17, 18, 20, 22, 23, 25, 39, 40, 41, 44, 45, 49], "intercept": 0, "perform": [0, 4, 5, 8, 9, 10, 11, 14, 15, 17, 23, 25, 39, 41, 42, 44, 45], "necessari": [0, 10, 15, 17, 25, 39, 41, 44, 45], "preprocess": [0, 25, 39], "like": [0, 2, 7, 15, 24, 25, 39, 41, 44, 45, 49], "verif": [0, 8, 10, 17, 39, 45], "assess": [0, 39, 41, 44], "through": [0, 3, 25, 39, 44, 49], "": [0, 1, 2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 31, 32, 35, 36, 39, 41, 42, 43, 44, 45, 49], "endpoint": [0, 6, 10, 13, 25, 30, 34, 35, 39, 44, 45], "ani": [0, 6, 8, 10, 11, 12, 14, 15, 20, 22, 23, 24, 25, 26, 29, 36, 38, 39, 41, 42, 43, 44, 45, 46], "postprocess": 0, "step": [0, 10, 15, 18, 19, 23, 39, 41, 44], "arg": [0, 2, 4, 5, 6, 7, 24, 25, 39, 43, 47], "object": [0, 4, 5, 6, 7, 8, 15, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49], "where": [0, 8, 10, 11, 15, 17, 25, 39, 40, 41, 44, 49], "processor": [0, 10, 17], "us": [0, 2, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49], "async": [0, 25, 39, 42, 43], "synaps": [0, 25, 26, 39, 42, 43, 50], "should": [0, 8, 9, 10, 14, 15, 17, 19, 21, 23, 25, 31, 34, 39, 41, 42, 44, 45, 49], "method": [0, 2, 4, 5, 6, 7, 8, 10, 15, 17, 25, 39, 41, 42, 44, 45, 47, 49], "disallow": 0, "sourc": [0, 39, 44, 49], "malici": [0, 39, 45], "intent": 0, "ar": [0, 3, 4, 5, 8, 10, 12, 14, 15, 17, 18, 19, 23, 24, 25, 26, 39, 40, 41, 44, 45, 46, 47, 49], "block": [0, 6, 10, 13, 17, 19, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44], "can": [0, 6, 8, 10, 11, 16, 17, 20, 21, 22, 23, 25, 39, 41, 42, 44, 45, 47, 49], "extrem": 0, "prevent": [0, 8, 10, 25, 39, 44], "spam": 0, "form": [0, 10, 21, 24, 39, 41, 42, 44, 45, 46], "abus": 0, "list": [0, 4, 5, 6, 7, 8, 10, 11, 15, 16, 18, 19, 20, 22, 23, 24, 25, 29, 31, 32, 35, 36, 38, 39, 41, 43, 44, 45, 46, 49, 50], "identifi": [0, 10, 11, 13, 15, 16, 18, 20, 34, 39, 41, 44, 45, 49], "prohibit": 0, "access": [0, 6, 10, 15, 23, 25, 39, 41, 44, 45, 49], "certain": [0, 39, 44], "resourc": [0, 10, 15, 17, 25, 39, 41, 44, 47], "repres": [0, 10, 13, 25, 34, 39, 40, 41, 44, 45, 46, 47], "rais": [0, 25, 26, 27, 34, 36, 38, 39, 40, 42, 44, 45, 46, 47, 49], "except": [0, 4, 5, 9, 10, 15, 24, 25, 26, 31, 39, 40, 46, 47], "If": [0, 2, 8, 9, 10, 11, 13, 14, 15, 17, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47], "found": [0, 26, 39, 40, 44], "involv": [0, 10, 14, 15, 19, 39, 41, 44, 45, 49], "retriev": [0, 8, 9, 10, 13, 15, 18, 19, 39, 40, 41, 42, 44, 49], "type": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 16, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50], "case": [0, 15, 25, 39, 44], "halt": 0, "further": [0, 10, 17], "dispatch": 0, "call_next": 0, "requestresponseendpoint": 0, "asynchron": [0, 25, 39, 42], "http": [0, 23, 25, 39, 44, 45], "return": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 15, 16, 19, 20, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49], "correspond": [0, 9, 10, 18, 25, 32, 35, 39, 41, 44], "central": [0, 41], "unit": [0, 39, 44], "lifecycl": 0, "A": [0, 2, 4, 5, 8, 10, 17, 18, 23, 24, 25, 34, 39, 41, 42, 44, 45, 47], "callabl": [0, 39, 42, 47], "gener": [0, 3, 10, 23, 25, 39, 42, 44, 49, 50], "after": [0, 4, 5, 23, 25, 39, 41, 42, 45, 47], "sever": [0, 8, 10, 15, 39, 47], "set": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 49], "up": [0, 4, 5, 8, 10, 14, 23, 25, 39, 41, 44, 47], "fill": [0, 25, 39], "inform": [0, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 25, 31, 34, 39, 41, 42, 44, 45], "start": [0, 4, 5, 10, 17, 23, 39, 44, 45], "authent": [0, 15, 34, 39, 41, 45], "evalu": [0, 39, 44], "assign": [0, 10, 13, 18, 39, 41, 44, 45], "call": [0, 4, 5, 7, 8, 9, 10, 13, 15, 19, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48], "next": [0, 10, 17], "chain": [0, 8, 9, 10, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 48], "end": [0, 6, 10, 19, 39, 45], "also": [0, 4, 5, 8, 9, 10, 13, 15, 17, 23, 25, 39, 42, 44, 45, 49], "might": [0, 39], "occur": [0, 7, 25], "dure": [0, 10, 15, 17, 23, 25, 39, 41, 44, 45, 49], "stage": [0, 39, 44], "appropri": [0, 10, 17, 25, 39, 41, 42, 44], "client": [0, 25, 39, 42], "extract": [0, 25, 39, 42], "relev": [0, 10, 19, 41], "state": [0, 2, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 25, 39, 41, 44, 45], "context": [0, 15, 25, 39, 40, 41, 44, 45], "within": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45], "name": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 18, 19, 20, 22, 23, 25, 26, 29, 39, 40, 41, 44, 45, 47, 49], "url": [0, 8, 9, 10, 25, 26, 39, 44], "path": [0, 8, 10, 11, 12, 20, 23, 39, 40, 41, 49], "dendrit": [0, 26, 39, 45, 50], "sign": [0, 25, 39, 41, 44], "side": [0, 8, 9, 10, 39], "wallet": [0, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 50], "hotkei": [0, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 22, 23, 25, 26, 27, 32, 34, 35, 36, 38, 39, 41, 44, 45, 49], "foundat": [0, 10, 18, 23, 39, 44], "subsequ": [0, 4, 5, 24, 25, 39, 44], "encapsul": [0, 25, 39, 41, 42, 45], "level": [0, 2, 4, 5, 9, 10, 15, 19, 39, 41, 44], "determin": [0, 3, 8, 10, 15, 17, 25, 39, 41, 44, 45, 49], "its": [0, 4, 5, 6, 8, 10, 14, 15, 25, 39, 41, 44, 45], "urgenc": 0, "import": [0, 10, 14, 17, 18, 19, 22, 23, 25, 39, 41, 44, 45], "queue": [0, 4, 5, 39, 47], "encount": [0, 15, 39, 46], "issu": [0, 15, 25, 39, 44], "timeout": [0, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 45], "crucial": [0, 10, 15, 18, 19, 21, 23, 25, 39, 41, 44, 45, 49], "load": [0, 39, 40, 41, 44, 49], "critic": [0, 4, 5, 10, 15, 17, 20, 23, 39, 41, 44, 45, 49], "promptli": 0, "part": [0, 8, 9, 10, 11, 13, 18, 23, 39, 41, 42, 44, 45], "pipelin": 0, "origin": [0, 2, 39, 45], "actual": [0, 34, 39, 40, 42, 44, 49], "take": [0, 6, 8, 10, 24, 26, 27, 39, 42, 44], "place": [0, 10, 17, 24, 25, 39, 41, 44], "lead": 0, "classmethod": [0, 4, 5, 6, 10, 15, 19, 20, 22, 24, 39, 44, 45, 47, 49], "synapse_to_respons": 0, "start_tim": [0, 47], "float": [0, 6, 10, 18, 20, 21, 22, 25, 27, 32, 35, 36, 37, 38, 39, 44, 45], "jsonrespons": [0, 39], "convert": [0, 6, 9, 10, 39, 41, 45], "json": [0, 6, 10, 23, 25, 39, 42, 45, 49], "timestamp": [0, 39, 41, 45], "when": [0, 4, 5, 7, 10, 14, 17, 19, 20, 22, 23, 25, 26, 39, 41, 44, 45, 47], "final": [0, 10, 18, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 45], "readi": [0, 39, 41, 42], "sent": [0, 25, 39, 42, 45], "back": [0, 8, 10, 14, 15, 22, 25, 39, 42, 45], "last": [0, 8, 10, 13, 16, 24, 39, 41, 44], "properli": [0, 25, 39, 41], "format": [0, 4, 8, 9, 10, 12, 15, 16, 18, 23, 25, 34, 39, 41, 42, 44, 45, 50], "contain": [0, 8, 10, 13, 23, 25, 39, 41, 42, 44, 45, 49, 50], "meet": [0, 10, 17, 39, 40], "predefin": [0, 39, 44], "valid": [0, 2, 6, 8, 9, 10, 13, 16, 17, 32, 35, 39, 40, 41, 42, 44, 45, 46], "criteria": [0, 10, 16, 39, 44], "fail": [0, 15, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 45, 47], "due": [0, 8, 10, 23], "unmet": 0, "concern": 0, "specif": [0, 4, 5, 8, 10, 15, 16, 17, 18, 19, 23, 25, 29, 39, 41, 42, 43, 44, 45, 47, 49], "aris": 0, "success": [0, 4, 5, 8, 9, 10, 17, 18, 19, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 45], "allow": [0, 2, 6, 8, 9, 10, 15, 17, 18, 19, 20, 22, 23, 39, 40, 41, 42, 44, 45], "proce": [0, 10, 14, 17], "while": [0, 39, 41, 44], "failur": [0, 8, 10, 34, 39, 44, 45], "result": [0, 2, 8, 10, 11, 16, 39, 40, 43, 44, 45], "being": [0, 4, 5, 6, 10, 19, 25, 34, 39, 42, 44], "fastapithreadedserv": 0, "config": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 41, 44, 47, 49, 50], "uvicorn": 0, "special": [0, 2, 39, 41, 42, 44], "implement": [0, 7, 15, 24, 25, 39, 42, 44, 45, 47, 49], "extend": 0, "separ": [0, 4, 5, 10, 18, 23, 39, 45, 49], "thread": [0, 10, 17, 31, 39, 44, 47], "concurr": [0, 25, 39, 47], "non": [0, 26, 31, 39, 40, 45, 49], "design": [0, 8, 9, 10, 15, 25, 39, 40, 42, 44, 45], "facilit": [0, 8, 10, 14, 15, 23, 39, 41, 44, 45, 49], "architectur": [0, 39, 41, 44], "effici": [0, 10, 17, 25, 39, 41, 44, 45], "scalabl": [0, 39, 44], "enabl": [0, 4, 5, 10, 17, 21, 23, 25, 39, 41, 44, 45], "seamless": 0, "By": [0, 38, 39, 44, 45], "manner": [0, 15, 41], "capabl": [0, 10, 17, 39, 44], "multi": [0, 10, 17], "control": [0, 39, 44, 45], "stop": [0, 4, 5, 39], "provid": [0, 3, 4, 5, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 39, 40, 41, 42, 43, 44, 45, 49, 51], "need": [0, 10, 15, 17, 18, 19, 23, 39, 40, 41, 44, 45], "vital": [0, 10, 19, 25, 39, 41, 44, 45], "reliabl": [0, 39, 41, 44, 45], "avail": [0, 8, 10, 12, 15, 20, 39, 41, 44], "signal": [0, 25, 39], "overrid": [0, 2, 39, 44, 45], "default": [0, 2, 4, 5, 8, 9, 10, 12, 13, 17, 24, 25, 27, 34, 36, 38, 39, 40, 41, 43, 44, 45, 49], "handler": [0, 4, 5], "potenti": [0, 8, 10, 15, 23, 39, 41, 44], "conflict": [0, 24, 39], "main": [0, 4, 5, 39, 44], "flow": [0, 39, 45], "stabl": 0, "variou": [0, 8, 9, 10, 15, 16, 18, 19, 20, 39, 41, 44], "condit": [0, 39, 44], "begin": [0, 39, 44], "immedi": [0, 39, 44], "shutdown": [0, 39, 47], "mainten": [0, 39, 44], "gracefulli": [0, 39], "releas": [0, 25, 39, 41, 44], "should_exit": 0, "bool": [0, 2, 4, 5, 6, 10, 17, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 49], "flag": [0, 2, 6, 8, 10, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44], "indic": [0, 4, 5, 8, 10, 12, 13, 15, 16, 24, 25, 26, 34, 39, 40, 41, 44, 45], "whether": [0, 10, 12, 17, 18, 20, 22, 24, 39, 41, 43, 44, 49], "is_run": 0, "current": [0, 4, 5, 8, 10, 14, 15, 17, 18, 19, 21, 24, 25, 39, 40, 41, 44, 45], "interfer": 0, "fals": [0, 4, 5, 6, 10, 11, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49], "_wrapper_run": 0, "wrapper": [0, 39, 45], "run_in_thread": 0, "intern": [0, 25, 39, 41, 42, 44, 49], "install_signal_handl": 0, "doe": [0, 8, 9, 10, 11, 12, 15, 16, 17, 39, 40, 44, 45, 49], "especi": [0, 10, 16, 17, 25, 39, 45], "complex": [0, 39, 41, 44, 45], "environ": [0, 8, 10, 17, 25, 39, 40, 41, 44, 45], "without": [0, 6, 10, 17, 23, 25, 39, 40, 44, 45], "yield": [0, 3, 25, 39], "none": [0, 2, 3, 4, 5, 6, 7, 8, 10, 16, 18, 23, 24, 25, 26, 27, 30, 31, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49], "caller": 0, "background": 0, "alreadi": [0, 8, 10, 19], "continu": [0, 10, 23, 31, 41], "seamlessli": 0, "true": [0, 2, 4, 5, 6, 7, 10, 11, 14, 15, 18, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 49], "ceas": [0, 39], "exit": [0, 10, 17, 25, 26, 31, 39], "redeploi": 0, "configur": [0, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 23, 24, 39, 41, 44, 45, 49], "port": [0, 6, 10, 16, 25, 30, 34, 39, 44, 45, 48], "int": [0, 2, 3, 4, 5, 6, 8, 10, 16, 17, 18, 20, 23, 27, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 44, 45, 46, 48, 49], "ip": [0, 6, 10, 16, 25, 30, 34, 39, 41, 44, 45, 48], "str": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 49], "external_ip": [0, 25, 39], "external_port": [0, 39], "max_work": [0, 39, 47], "fundament": [0, 39, 41, 44, 45, 49], "serv": [0, 6, 10, 17, 28, 30, 39, 41, 44, 45, 48, 49, 50], "interfac": [0, 7, 8, 39, 40, 41, 42, 44], "mechan": [0, 10, 17, 18, 39, 41, 44, 45], "interact": [0, 8, 9, 10, 15, 25, 39, 41, 44, 45, 49], "reli": [0, 8, 25, 39], "router": [0, 39], "differ": [0, 5, 7, 9, 10, 15, 16, 18, 20, 21, 22, 23, 24, 25, 39, 41, 44, 45, 49], "These": [0, 8, 10, 15, 17, 32, 35, 39, 41, 44, 45], "receiv": [0, 4, 5, 10, 13, 16, 25, 39, 41, 42, 44, 45], "flexibl": [0, 10, 17, 22, 39, 44], "customiz": [0, 39], "user": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 49], "specifi": [0, 2, 8, 10, 11, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 27, 34, 36, 38, 39, 41, 44, 45], "custom": [0, 2, 4, 7, 10, 16, 17, 39, 41, 45], "priorit": [0, 39], "includ": [0, 2, 4, 8, 9, 10, 11, 13, 15, 16, 17, 19, 23, 25, 29, 33, 34, 36, 38, 39, 41, 42, 44, 45], "pool": [0, 39], "support": [0, 8, 10, 17, 23, 39, 40, 44], "equip": [0, 39], "deal": [0, 39], "scenario": [0, 25, 39, 40], "face": [0, 39, 44], "accept": [0, 4, 5, 39, 47, 49], "multipl": [0, 8, 10, 16, 17, 23, 25, 39, 41, 44, 49], "argument": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 39, 41, 42, 43, 44, 45, 46, 47, 49], "address": [0, 8, 9, 10, 12, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 36, 37, 38, 39, 41, 44, 45, 49], "bind": [0, 39], "extern": [0, 25, 39], "max": [0, 34, 39], "worker": [0, 39, 47], "featur": [0, 39, 44, 45], "creation": [0, 9, 10, 15, 23, 39, 44, 45, 49], "against": [0, 10, 17, 39, 40], "command": [0, 7, 24, 39, 44, 50], "line": [0, 7, 8, 9, 10, 24, 39, 44], "friendli": [0, 15, 39], "program": [0, 39], "exampl": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 39, 41, 44, 45, 49], "usag": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 39, 41, 44, 45, 49], "your": [0, 2, 10, 17, 23, 25, 39, 44, 45, 49], "mysyanps": [0, 39], "input": [0, 6, 9, 10, 25, 39, 40, 42, 44, 45, 46], "1": [0, 4, 5, 6, 9, 10, 13, 15, 17, 18, 24, 25, 39, 41, 44, 45, 47, 50], "output": [0, 4, 5, 8, 10, 12, 16, 17, 18, 23, 39, 41], "def": [0, 39, 45], "appli": [0, 2, 39, 41, 44, 45], "logic": [0, 39, 42, 45], "2": [0, 2, 4, 5, 6, 10, 15, 18, 24, 39, 44], "verify_my_synaps": [0, 39], "option": [0, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 34, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49], "assert": [0, 39], "fucntion": [0, 39], "blacklist_my_synaps": [0, 39], "prioritize_my_synap": [0, 39], "0": [0, 6, 8, 10, 13, 15, 18, 25, 27, 31, 32, 34, 35, 38, 39, 44, 45], "my_axon": [0, 39], "my_config": [0, 39], "my_wallet": [0, 8, 10, 20, 39, 49], "9090": [0, 39], "192": [0, 30, 34, 39], "203": [0, 39], "113": [0, 39], "7070": [0, 39], "forward_fn": [0, 26, 39], "forward_my_synaps": [0, 39], "verify_fn": [0, 39], "blacklist_fn": [0, 39], "priority_fn": [0, 39], "netuid": [0, 6, 10, 11, 13, 15, 16, 17, 18, 29, 30, 31, 32, 34, 35, 39, 41, 44, 48], "subtensor": [0, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 50], "you": [0, 2, 10, 18, 23, 25, 26, 39, 41, 44, 45], "have": [0, 6, 8, 9, 10, 15, 17, 18, 20, 39, 41, 44, 45, 47], "them": [0, 6, 10, 17, 19, 22, 25, 39, 42, 44, 45, 49], "forward_my_synapse_2": [0, 39], "verify_my_synapse_2": [0, 39], "blacklist_my_synapse_2": [0, 39], "prioritize_my_synape_2": [0, 39], "coldkeypub": [0, 10, 23, 39, 49], "broadcast": [0, 39], "number": [0, 8, 10, 13, 15, 17, 19, 23, 30, 31, 34, 39, 41, 44, 45, 47, 49], "activ": [0, 3, 6, 8, 10, 11, 13, 16, 17, 19, 20, 25, 39, 41, 44], "per": [0, 6, 8, 10, 11, 17, 20, 31, 39, 41, 44], "core": [0, 39, 41], "decentr": [0, 10, 17, 39, 41, 44, 45], "machin": [0, 39, 41, 44, 45], "intellig": [0, 39, 41, 44], "effect": [0, 8, 9, 10, 19, 23, 39, 44], "registr": [0, 6, 10, 15, 17, 20, 25, 26, 28, 32, 35, 39, 41, 44, 46, 50], "dynam": [0, 10, 17, 18, 39, 41, 44], "regist": [0, 4, 5, 6, 8, 10, 15, 16, 18, 19, 26, 27, 29, 31, 32, 33, 36, 38, 39, 44, 50], "api": [0, 23, 39, 43, 44], "respond": [0, 39, 40], "how": [0, 6, 10, 14, 18, 39, 41, 44], "make": [0, 8, 9, 10, 15, 16, 18, 19, 25, 37, 39, 41, 44, 45], "adapt": [0, 39, 41, 44], "contribut": [0, 10, 15, 16, 17, 19, 39, 41, 44], "both": [0, 5, 8, 10, 11, 15, 16, 20, 23, 39, 44, 49], "via": [0, 6, 39, 44], "abil": [0, 39, 41], "aspect": [0, 10, 18, 39, 41, 44, 45], "great": [0, 39], "tailor": [0, 39, 41, 45], "requir": [0, 8, 10, 15, 17, 18, 21, 23, 26, 39, 40, 41, 42, 44, 45, 49], "signatur": [0, 6, 24, 26, 31, 39, 42, 44, 45, 47, 48], "runtim": [0, 39, 41, 44], "new": [0, 6, 8, 9, 10, 15, 17, 23, 24, 25, 29, 39, 41, 42, 44, 45, 46, 47, 49], "pass": [0, 15, 24, 25, 27, 32, 35, 36, 39, 40, 42, 44, 47, 49], "param": [0, 15, 24, 39, 40, 41, 44], "threadpool": [0, 39, 50], "__del__": [0, 25, 39], "magic": [0, 39], "about": [0, 10, 13, 15, 16, 25, 39, 41, 42, 44, 45], "destroi": [0, 25, 39], "shut": [0, 39], "down": [0, 10, 19, 39], "__repr__": [0, 6, 24, 25, 39, 40, 41, 44, 49], "readabl": [0, 10, 15, 16, 26, 39, 40, 41], "unambigu": [0, 39, 41], "represent": [0, 6, 10, 16, 25, 34, 39, 40, 41, 45, 49], "made": [0, 25, 39, 44], "ident": [0, 10, 26, 39, 44, 45, 50], "__str__": [0, 6, 24, 25, 39, 40, 41, 44, 49], "human": [0, 10, 16, 39, 41], "add_arg": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 44, 47, 49], "parser": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 39, 44, 47, 49], "argpars": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 39, 44, 47, 49], "argumentpars": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 39, 44, 47, 49], "prefix": [0, 4, 5, 39, 44, 45, 47, 49], "add": [0, 2, 4, 5, 7, 10, 17, 20, 24, 36, 39, 44, 45], "axonserv": [0, 39], "ad": [0, 2, 4, 5, 6, 10, 15, 20, 39, 44], "variabl": [0, 25, 39, 40, 45], "valu": [0, 6, 8, 9, 10, 15, 17, 18, 23, 24, 29, 32, 35, 39, 41, 44, 45, 46, 49], "behavior": [0, 10, 15, 19, 39, 41, 44, 45], "therebi": [0, 39, 44, 49], "first": [0, 10, 14, 15, 23, 24, 25, 36, 39, 41, 45], "framework": [0, 5, 25, 39, 45, 49], "least": [0, 39], "one": [0, 2, 6, 9, 10, 20, 21, 22, 23, 24, 25, 34, 39, 41, 44, 47], "filter": [0, 10, 16, 23, 39], "out": [0, 10, 14, 23, 39], "undesir": [0, 39], "same": [0, 24, 39, 40, 41, 44, 45, 49], "boolean": [0, 24, 39, 41, 44], "mean": [0, 39, 44, 45], "rank": [0, 6, 9, 10, 13, 16, 39, 41, 44], "numer": [0, 8, 39, 41], "sort": [0, 8, 10, 16, 39], "self": [0, 2, 6, 8, 10, 24, 25, 26, 31, 34, 39, 40, 41, 44, 45, 47, 48], "default_verifi": [0, 39], "assertionerror": [0, 39], "yoursynaps": [0, 39], "forward_custom": [0, 39], "mycustomsynaps": [0, 39], "blacklist_custom": [0, 39], "tupl": [0, 5, 6, 10, 16, 23, 31, 35, 39, 41, 44, 45, 47, 49], "priority_custom": [0, 39], "verify_custom": [0, 39], "particip": [0, 10, 11, 13, 17, 18, 19, 20, 21, 23, 39, 41, 44, 49], "offer": [0, 10, 16, 18, 25, 39, 44, 49], "develop": [0, 39, 42, 45], "check_config": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39], "hold": [0, 5, 10, 18, 19, 23, 39, 41, 44, 49], "rang": [0, 8, 10, 39, 44], "1024": [0, 39], "65535": [0, 6, 39], "pars": [0, 24, 25, 26, 39, 42, 44, 45, 46], "digit": [0, 39, 41, 44, 45], "wa": [0, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45], "tamper": [0, 39, 45], "expect": [0, 25, 39, 41, 42], "sender": [0, 39], "confirm": [0, 8, 10, 14, 17, 20, 21, 22, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44], "inde": [0, 39], "claim": [0, 39, 44], "trustworthi": [0, 39, 41, 44], "assur": [0, 39], "guard": [0, 39], "unauthor": [0, 39, 45], "data": [0, 8, 10, 11, 14, 15, 16, 18, 19, 23, 25, 34, 39, 40, 41, 42, 44, 45, 46], "manipul": [0, 39], "replai": [0, 39], "attack": [0, 39], "increas": [0, 8, 10, 17, 18, 26, 27, 39, 44, 45], "nonc": [0, 10, 17, 31, 39, 44, 45], "adversari": [0, 39], "reus": [0, 25, 39], "delai": [0, 39], "transmiss": [0, 39, 45], "deceiv": [0, 39], "match": [0, 39], "come": [0, 39, 41], "hasn": [0, 39], "t": [0, 4, 5, 24, 39, 40, 41], "been": [0, 24, 25, 39, 42, 44, 45, 47], "alter": [0, 15, 39], "trust": [0, 6, 9, 10, 13, 16, 39, 41, 44], "foster": [0, 39], "node": [0, 10, 12, 13, 23, 39, 41, 43, 44, 45], "confid": [0, 39], "know": [0, 6, 39, 44], "thei": [0, 6, 10, 15, 18, 19, 39, 40, 41, 44, 45], "genuin": [0, 39], "cryptograph": [0, 39, 41, 44], "techniqu": [0, 39], "relianc": [0, 39], "asymmetr": [0, 39], "encrypt": [0, 10, 12, 23, 39, 40, 49], "cornerston": [0, 39, 45], "modern": [0, 10, 23, 39], "onli": [0, 4, 5, 9, 10, 11, 12, 14, 15, 16, 25, 39, 41, 44, 45, 49], "entiti": [0, 39, 41, 44], "correct": [0, 8, 10, 39, 41, 45], "receiver_hotkei": [0, 39], "doesn": [0, 4, 5, 39], "larger": [0, 39], "than": [0, 39], "previou": [0, 8, 10, 39, 41], "given": [0, 32, 35, 39, 41, 42, 43, 44, 45, 46, 47], "assum": [0, 39, 41, 44], "algorithm": [0, 34, 39, 41, 44], "privat": [0, 39], "public": [0, 10, 12, 13, 21, 23, 37, 39, 41, 44, 49], "help": [0, 4, 5, 6, 8, 10, 19, 23, 24, 26, 31, 39, 44, 45, 47, 48, 49], "print": [0, 7, 8, 10, 12, 13, 16, 24, 25, 39, 40, 41, 44, 45, 49], "text": [0, 2, 39], "descript": [0, 7, 8, 10, 39, 41, 44, 45], "stdout": [0, 39, 44, 49], "info": [0, 4, 5, 6, 9, 10, 23, 39], "axoninfo": [0, 6, 25, 39, 41, 44], "associ": [0, 4, 5, 6, 9, 10, 11, 12, 16, 19, 20, 22, 23, 25, 39, 41, 44, 45, 47], "connect": [0, 9, 10, 15, 25, 26, 34, 39, 41, 44, 45], "subnet": [0, 6, 8, 9, 10, 11, 13, 15, 17, 18, 31, 32, 35, 36, 38, 39, 44, 50], "link": [0, 10, 20, 39, 44, 49], "broader": [0, 39, 44], "exchang": [0, 39, 41, 45], "uniqu": [0, 8, 10, 11, 13, 15, 16, 18, 20, 39, 41, 44, 45], "id": [0, 10, 17, 23, 31, 39, 44, 45], "correctli": [0, 39, 41, 44], "posit": [0, 10, 20, 39], "itself": [0, 39, 42, 45], "topologi": [0, 39, 44], "establish": [0, 10, 23, 25, 39, 44, 45], "now": [0, 39, 41, 45], "bt": [0, 25, 39, 41, 43], "local": [0, 7, 8, 10, 14, 25, 39, 41, 44], "underli": [0, 25, 39, 41, 44], "transit": [0, 4, 5, 39], "trigger": [0, 39], "listen": [0, 4, 5, 39], "setup": [0, 10, 17, 23, 39], "etc": [0, 39, 41, 45], "invok": [0, 10, 23, 25, 39, 41], "grpc": [0, 39, 44], "remov": [0, 4, 5, 10, 19, 22, 33, 38, 39, 44], "presenc": [0, 10, 16, 23, 39, 44], "exist": [0, 7, 9, 10, 12, 17, 23, 25, 39, 40, 44, 49], "termin": [0, 9, 10, 17, 39, 45], "typic": [0, 8, 10, 17, 20, 39, 41, 42, 44, 45], "temporarili": [0, 39], "go": [0, 39], "offlin": [0, 39, 41], "advis": [0, 25, 39], "ongo": [0, 10, 19, 39], "complet": [0, 10, 23, 25, 39, 41, 47], "befor": [0, 4, 5, 8, 10, 14, 17, 19, 20, 21, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44], "to_str": [0, 6, 24, 39], "verify_body_integr": [0, 39], "bodi": [0, 10, 18, 19, 25, 39, 42, 44, 45], "compar": [0, 39], "hash": [0, 10, 19, 34, 39, 44, 45], "field": [0, 9, 10, 39, 45], "payload": [0, 39, 43, 45], "ha": [0, 6, 8, 9, 10, 11, 15, 16, 24, 25, 39, 41, 42, 44], "between": [0, 5, 10, 21, 25, 31, 39, 41, 44, 45], "dictionari": [0, 3, 6, 26, 39, 41, 44, 45], "comparison": [0, 39], "intact": [0, 39], "dict": [0, 2, 6, 10, 16, 23, 24, 25, 39, 41, 42, 44, 45, 49], "400": [0, 39], "statu": [0, 4, 5, 8, 10, 13, 16, 19, 23, 25, 39, 41, 44, 45], "code": [0, 8, 10, 11, 13, 25, 39, 45], "detail": [0, 6, 8, 9, 10, 11, 13, 15, 16, 17, 19, 20, 23, 25, 39, 41, 44, 45, 49], "mismatch": [0, 39], "decod": [0, 6, 39, 44, 45], "inspect": [0, 10, 39, 50], "gather": [0, 10, 11, 39], "reconstruct": [0, 39, 45], "recomput": [0, 39], "create_error_respons": 0, "log_and_handle_error": 0, "status_cod": [0, 39, 45], "constant": [1, 39, 44], "definit": 1, "base_log_format": 1, "asctim": 1, "levelnam": 1, "bittensor_logger_nam": [1, 4, 5], "date_format": 1, "y": [1, 10, 14, 18], "m": 1, "d": [1, 6, 24, 25, 39, 41, 44], "h": 1, "default_log_backup_count": 1, "10": [1, 10, 15, 18, 25, 39, 45], "default_log_file_nam": 1, "default_max_rotating_log_file_s": 1, "trace_log_format": 1, "formatt": [2, 4, 5], "project": [2, 4], "btfileformatt": 2, "fmt": 2, "datefmt": 2, "style": 2, "time": [2, 10, 13, 16, 23, 39, 41, 44, 45, 47], "millisecond": 2, "center": 2, "string": [2, 6, 9, 10, 23, 24, 25, 39, 40, 41, 44, 45, 46, 49], "either": [2, 10, 20, 22, 23, 39, 44, 49], "describ": [2, 39, 44], "abov": [2, 25, 37, 38], "date": [2, 10, 23], "omit": 2, "get": [2, 4, 5, 10, 15, 18, 23, 24, 25, 31, 39, 41, 44, 45, 47, 49], "iso8601": 2, "rfc": 2, "3339": 2, "want": [2, 10, 15, 18, 19], "templat": 2, "chang": [2, 8, 9, 10, 11, 14, 15, 39, 44], "version": [2, 6, 8, 10, 14, 32, 35, 39, 40, 41, 44, 45, 48], "3": [2, 4, 5, 6, 10, 18, 31, 39, 44], "record": [2, 4, 5, 41], "logrecord": 2, "formattim": 2, "btstreamformatt": 2, "kwarg": [2, 4, 5, 6, 24, 25, 39, 42, 43, 44, 47], "emoji": 2, "color": [2, 6], "save": [2, 39, 41, 49], "trace": [2, 4, 5, 39], "replac": 2, "set_trac": [2, 4, 5], "default_log_format": 2, "default_trace_format": 2, "log_format": 2, "log_trace_format": 2, "success_level_num": 2, "21": [2, 10, 18, 23], "trace_level_num": 2, "5": [2, 6, 10, 15, 18, 24, 39, 44], "_success": 2, "kw": 2, "_trace": 2, "color_map": 2, "emoji_map": 2, "log_level_color_prefix": 2, "system": [3, 4, 5, 10, 17, 25, 39, 40, 41, 44, 49], "all_logger_nam": 3, "logger": [3, 4, 5, 27, 32, 35, 47], "iter": [3, 6, 25, 39, 41, 44, 45], "root": [3, 8, 10, 12, 13, 19, 28, 39, 41, 44, 45, 50], "skip": [3, 39, 40], "placehold": [3, 34, 39, 44], "all_logg": 3, "get_max_logger_name_length": 3, "calcul": [3, 8, 10, 15, 17, 39, 41, 44, 45], "length": [3, 34, 39, 45], "longest": 3, "max_length": 3, "sub": 4, "standard": [4, 10, 23, 39, 41, 43, 44, 45], "modul": [4, 39], "function": [4, 5, 9, 10, 13, 15, 18, 26, 42, 43, 44], "consist": [4, 39, 41, 44, 45], "throughout": 4, "helper": [4, 8, 39, 43, 45, 50], "loggingmachin": [4, 39, 50], "statemachin": [4, 5], "3rd": [4, 5], "parti": [4, 5], "librari": [4, 5, 8], "properti": [4, 5, 6, 25, 39, 40, 41, 44, 45, 47, 49], "__trace_on__": [4, 5], "mode": [4, 5], "otherwis": [4, 5, 25, 34, 39, 44, 45, 47], "debug": [4, 5, 25, 39, 41, 45], "disabl": [4, 5, 10, 17, 23, 39, 44], "disable_debug": [4, 5], "disable_log": [4, 5], "disable_trac": [4, 5], "enable_debug": [4, 5], "enable_default": [4, 5], "enable_trac": [4, 5], "__call__": [4, 5, 39, 42, 43], "record_log": [4, 5], "logging_dir": [4, 5], "_configure_handl": [4, 5], "_create_and_start_listen": [4, 5], "publish": [4, 5, 34, 39, 44], "popul": [4, 5, 39, 44], "well": [4, 5, 41], "_create_file_handl": [4, 5], "logfil": [4, 5], "_deinitialize_bt_logg": [4, 5], "find": [4, 5, 45], "_enable_file_log": [4, 5], "_initialize_bt_logg": [4, 5], "sinc": [4, 5, 10, 13, 16, 39, 40, 44], "third": [4, 5], "silenc": [4, 5], "fro": [4, 5], "after_disable_debug": [4, 5], "after_disable_trac": [4, 5], "after_enable_debug": [4, 5], "after_enable_default": [4, 5], "after_enable_trac": [4, 5], "after_transit": [4, 5], "event": [4, 5, 25, 39, 42], "before_disable_debug": [4, 5], "before_disable_log": [4, 5], "prepar": [4, 5, 15, 39, 43], "follow": [4, 5, 8, 9, 10, 13, 14, 15, 16, 18, 34, 39, 44, 45], "action": [4, 5, 8, 9, 10, 15, 39, 44], "stream": [4, 5, 25, 39, 50], "before_disable_trac": [4, 5], "before_enable_debug": [4, 5], "before_enable_default": [4, 5], "before_enable_trac": [4, 5], "before_transit": [4, 5], "msg": [4, 5, 39, 44], "suffix": [4, 5], "wrap": [4, 5], "deregister_primary_logg": [4, 5], "de": [4, 5], "primari": [4, 5, 39, 45, 49], "_primary_logg": [4, 5], "deiniti": [4, 5], "disable_third_party_logg": [4, 5], "enable_third_party_logg": [4, 5], "get_config": [4, 5], "get_level": [4, 5], "get_queu": [4, 5], "queuelisten": [4, 5], "To": [4, 5, 8, 10, 23, 25], "queuehandl": [4, 5], "must": [4, 5, 8, 9, 10, 13, 15, 32, 35, 39, 41, 42, 44, 49], "desir": [4, 5, 10, 19, 39, 44, 45], "off": [4, 5, 25], "register_primary_logg": [4, 5], "set_config": [4, 5], "set_debug": [4, 5], "warn": [4, 5, 39, 49], "leverag": [5, 10, 17, 39, 41, 44], "packag": [5, 14, 45, 51], "loggingconfig": 5, "namedtupl": 5, "is_serv": [6, 39], "coldkei": [6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 22, 23, 36, 38, 39, 41, 44, 49], "ip_typ": [6, 39, 48], "placeholder1": [6, 34, 39, 44], "placeholder2": [6, 34, 39, 44], "4": [6, 8, 10, 17, 18, 30, 34, 39, 44], "__eq__": [6, 39], "repr": [6, 24, 39, 40, 41, 44], "_from_parameter_dict": [6, 39], "parameter_dict": [6, 39], "util": [6, 10, 23, 25, 27, 32, 35, 36, 37, 38, 39, 41, 44, 46, 49], "torch": [6, 25, 32, 35, 39, 41, 44, 46], "nn": [6, 25, 39, 41], "parameterdict": [6, 39], "return_typ": [6, 39], "union": [6, 25, 27, 31, 32, 35, 36, 37, 38, 39, 41, 43, 44, 46, 49], "_to_parameter_dict": [6, 39], "from_neuron_info": [6, 39], "neuron_info": [6, 39], "axon_info": [6, 39], "from_parameter_dict": [6, 39], "from_str": [6, 39], "ip_str": [6, 39], "whole": [6, 39], "to_parameter_dict": [6, 39], "tensor": [6, 10, 18, 39, 41, 45, 50], "depend": [6, 39], "use_torch": [6, 39], "chaindatatyp": 6, "kwd": 6, "enum": 6, "collect": [6, 24, 39, 41, 44], "pair": [6, 10, 11, 39, 44, 45], "enumer": [6, 10, 12], "red": [6, 8, 10], "blue": 6, "green": [6, 8, 10], "lookup": 6, "over": [6, 8, 10, 15, 25, 39, 41, 45], "mani": 6, "member": [6, 10, 18, 19, 39, 44], "len": 6, "own": [6, 8, 10, 39, 41, 44, 45], "see": [6, 10, 15, 19, 24, 26, 31, 39, 44, 47, 48], "document": [6, 39, 44, 50], "delegateinfo": [6, 8, 19, 39, 44], "delegatedinfo": 6, "ipinfo": [6, 39, 44], "7": [6, 10, 18, 39], "neuroninfo": [6, 39, 44], "neuroninfolit": [6, 10, 16, 39, 44], "stakeinfo": [6, 39, 44], "6": [6, 10, 18], "subnethyperparamet": [6, 39, 44], "8": [6, 10, 15, 18, 39, 45], "subnetinfo": [6, 39, 44], "dataclass": [6, 39], "deleg": [6, 9, 10, 11, 15, 19, 20, 26, 28, 36, 39, 41, 42, 44, 50], "For": [6, 8, 10, 17, 25, 39, 41, 44, 45], "lighter": [6, 8, 10, 39, 44], "delegateinfolit": [6, 8, 39, 44], "hotkey_ss58": [6, 10, 16, 27, 36, 38, 39, 44], "fetch": [6, 10, 11, 15, 18, 23, 39, 41], "total_stak": [6, 39, 41, 44], "total": [6, 8, 10, 13, 15, 39, 41, 44, 45], "stake": [6, 8, 9, 10, 11, 13, 16, 18, 22, 23, 26, 27, 28, 37, 38, 39, 41, 44, 49, 50], "nomin": [6, 8, 10, 26, 39, 44], "percentag": [6, 8, 10, 39, 44], "owner_ss58": [6, 39], "owner": [6, 8, 10, 15, 17, 39, 44], "validator_permit": [6, 39, 41], "return_per_1000": [6, 39], "1000": [6, 8, 10, 23, 39], "tao": [6, 8, 9, 10, 15, 16, 17, 20, 21, 22, 27, 31, 36, 37, 38, 39, 44, 49], "dai": [6, 10, 15, 20, 39, 44], "total_daily_return": [6, 39], "daili": [6, 39], "balanc": [6, 8, 10, 11, 16, 17, 20, 21, 23, 27, 36, 37, 38, 39, 44, 49], "delegated_list_from_vec_u8": [6, 39], "vec_u8": [6, 39], "amount": [6, 8, 10, 11, 15, 16, 17, 18, 20, 21, 22, 23, 27, 36, 37, 38, 39, 41, 44], "fix_decoded_valu": [6, 39], "fix": [6, 39, 44], "from_vec_u8": [6, 39], "list_from_vec_u8": [6, 39], "delegateliteinfo": [6, 39], "delegate_ss58": [6, 27, 39, 44], "count": [6, 8, 10, 23, 39], "_from_parameter_dict_numpi": [6, 39], "_from_parameter_dict_torch": [6, 39], "encod": [6, 39, 44, 45], "metadata": [6, 26, 34, 39, 41, 44, 45], "bond": [6, 39, 41, 44], "consensu": [6, 10, 13, 16, 19, 39, 41, 44], "dividend": [6, 10, 13, 16, 39, 41], "emiss": [6, 10, 11, 13, 15, 16, 39, 41, 44], "incent": [6, 10, 13, 16, 39, 41, 44], "is_nul": [6, 39], "last_upd": [6, 39, 41], "prometheus_info": [6, 39], "prometheusinfo": [6, 39, 44], "pruning_scor": [6, 39], "stake_dict": [6, 39], "uid": [6, 10, 13, 16, 18, 20, 29, 30, 34, 35, 36, 38, 39, 41, 44], "validator_trust": [6, 39, 41], "weight": [6, 10, 18, 32, 35, 39, 41, 44, 49], "static": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 39, 41, 44, 46], "_neuron_dict_to_namespac": [6, 39], "neuron_dict": [6, 39], "_null_neuron": [6, 39, 44], "neuron_info_decod": [6, 39], "from_weights_bonds_and_neuron_lit": [6, 39], "neuron_lit": [6, 39], "weights_as_dict": [6, 39], "bonds_as_dict": [6, 39], "prometheu": [6, 28, 39, 44, 48, 50], "prometheus_info_decod": [6, 39], "proposalcalldata": [6, 19, 39, 44], "proposalvotedata": [6, 19, 39, 44], "typeddict": [6, 39, 44, 48], "empti": [6, 39, 40, 44], "map": [6, 39, 44], "k": [6, 39, 44], "v": [6, 39, 44], "keyword": [6, 39, 42, 43, 44, 45, 46], "two": [6, 15, 24, 39, 44, 49], "accur": [6, 24, 26, 31, 39, 41, 44, 45, 47, 48], "ay": [6, 10, 19, 33, 39], "index": [6, 8, 10, 23, 39, 44], "nai": [6, 10, 19, 33, 39], "threshold": [6, 10, 19, 38, 39, 44], "raopertao": 6, "1000000000": [6, 15], "coldkey_ss58": [6, 39, 44], "list_of_tuple_from_vec_u8": [6, 39], "hyperparamet": [6, 15, 29, 39, 44], "activity_cutoff": [6, 15, 39], "adjustment_alpha": [6, 39, 44], "adjustment_interv": [6, 15, 39], "bonds_moving_avg": [6, 15, 39, 44], "difficulti": [6, 10, 13, 15, 39, 44], "immunity_period": [6, 15, 39, 44], "kappa": [6, 15, 39, 44], "max_burn": [6, 15, 39], "max_difficulti": [6, 15, 39], "max_regs_per_block": [6, 15, 39], "max_valid": [6, 39], "max_weight_limit": [6, 15, 39, 44], "min_allowed_weight": [6, 15, 39, 44], "min_burn": [6, 15, 39], "min_difficulti": [6, 15, 39], "registration_allow": [6, 15, 39], "rho": [6, 10, 13, 15, 16, 39, 44], "serving_rate_limit": [6, 39, 44], "target_regs_per_interv": [6, 15, 39], "tempo": [6, 15, 39, 44], "weights_rate_limit": [6, 15, 39, 44], "weights_vers": [6, 15, 39], "_to_parameter_dict_torch": [6, 39], "blocks_since_epoch": [6, 39, 44], "burn": [6, 15, 39, 44], "connection_requir": [6, 39], "emission_valu": [6, 39], "max_allowed_valid": [6, 39, 44], "max_n": [6, 15, 39, 44], "modal": [6, 39], "scaling_law_pow": [6, 39, 44], "subnetwork_n": [6, 39, 44], "u16_max": 6, "u64_max": 6, "18446744073709551615": 6, "custom_rpc_type_registri": 6, "from_scale_encod": 6, "byte": [6, 9, 10, 34, 39, 40, 44, 45, 49], "scalecodec": [6, 39, 44], "scalebyt": 6, "type_nam": 6, "is_vec": 6, "is_opt": 6, "from_scale_encoding_using_type_str": 6, "type_str": 6, "alias_to_command": 7, "clierrorpars": 7, "prog": 7, "epilog": 7, "parent": [7, 39, 42], "formatter_class": 7, "helpformatt": 7, "prefix_char": 7, "fromfile_prefix_char": 7, "argument_default": 7, "conflict_handl": 7, "add_help": 7, "allow_abbrev": 7, "exit_on_error": 7, "better": 7, "token": [7, 8, 10, 17, 20, 21, 22, 39, 42, 44, 49], "transfer": [7, 10, 22, 23, 26, 28, 39, 44, 49, 50], "__create_parser__": [7, 39], "under": [7, 10, 23, 39, 40, 44, 49], "create_config": [7, 39], "executor": [7, 39, 47], "consol": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 39, 44], "delegatestakecommand": [8, 10], "alloc": [8, 10, 18, 20, 39, 41, 44], "earn": [8, 10, 11, 13, 16, 39, 41, 44], "reward": [8, 10, 11, 17, 18, 39, 41, 44], "delegate_ss58kei": [8, 10], "ss58": [8, 9, 10, 12, 15, 16, 20, 21, 22, 23, 27, 36, 38, 39, 44, 49], "entir": [8, 10, 13, 25], "send": [8, 10, 15, 21, 25, 39, 41, 42, 44, 45], "transact": [8, 9, 10, 11, 17, 21, 23, 26, 27, 34, 39, 41, 44, 45, 49], "chosen": [8, 10], "prompt": [8, 9, 10, 14, 15, 17, 20, 21, 22, 23, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44], "btcli": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "ss58_address": [8, 10, 23, 37, 39, 44, 49], "modifi": [8, 10, 12, 15, 16, 39, 42, 44], "blockchain": [8, 9, 10, 34, 39, 41, 44], "mai": [8, 10, 15, 17, 23, 41], "incur": [8, 9, 10], "fee": [8, 9, 10, 39, 44], "cli": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 44, 50], "delegateunstakecommand": [8, 10], "undeleg": [8, 10, 39, 44], "withdraw": [8, 10, 22, 39, 44], "known": [8, 10, 19, 39, 44], "revers": [8, 10], "free": [8, 10, 23], "attempt": [8, 10, 17, 31, 39, 41, 44, 45], "proceed": [8, 10, 17, 20, 21, 22, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44], "care": [8, 10, 17], "affect": [8, 10, 14, 17, 39, 44], "_run": [8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23], "listdelegatescommand": [8, 10], "displai": [8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 39, 41, 49], "tabl": [8, 9, 10, 11, 13, 15, 18, 20, 23], "comprehens": [8, 10, 11, 15, 16, 18, 20, 23, 39, 44], "overview": [8, 10, 11, 12, 15, 18, 20, 39, 44, 50], "statist": [8, 10, 13, 17], "listdelegateslitecommand": [8, 10], "decis": [8, 10, 15, 18, 19, 39, 41, 44], "column": [8, 10, 11, 13, 15, 16, 17], "truncat": [8, 10], "\u03c4": [8, 10, 13, 16, 18], "cumul": [8, 10, 39, 41, 44], "4h": [8, 10], "four": [8, 10], "hour": [8, 10], "vpermit": [8, 10, 16], "permit": [8, 10, 16, 39, 44], "24h": [8, 10], "k\u03c4": [8, 10], "24": [8, 10, 18, 23, 39, 49], "brief": [8, 10], "purpos": [8, 9, 10, 15, 23, 25, 39, 41, 44, 49], "done": [8, 10], "descend": [8, 10, 16], "order": [8, 10, 23, 39, 44, 45, 49], "highlight": [8, 10], "decreas": [8, 10, 18, 26, 27], "entri": [8, 10, 25, 39, 41, 44], "mark": [8, 10], "na": [8, 10], "hyperlink": [8, 10], "respect": [8, 10, 12, 19, 23, 39, 41, 49], "list_deleg": [8, 10], "finnei": [8, 10, 15, 39, 41, 44], "test": [8, 10, 13, 17, 18, 31, 39, 40, 41, 44], "tool": [8, 10, 18, 39, 44, 45], "intend": [8, 10, 11, 12, 13, 14, 15, 19, 39, 41, 42, 44, 45], "directli": [8, 10, 14, 18, 25, 39, 42, 44, 45, 49], "lite": [8, 10, 39, 41, 44], "more": [8, 10, 13, 20, 22, 31, 39, 41, 44], "view": [8, 10, 15, 16, 19, 20, 23, 39, 44], "taken": [8, 10, 39, 45], "list_delegates_lit": [8, 10], "mydelegatescommand": [8, 10], "my_deleg": [8, 10], "insight": [8, 10, 18, 19, 39, 44], "aggreg": [8, 10, 39, 44], "across": [8, 10, 15, 18, 20, 22, 39, 41, 44, 45, 49], "past": [8, 10, 41], "nom": [8, 10], "held": [8, 10, 11, 39, 41, 44], "desc": [8, 10], "sum": [8, 10, 39, 44, 45], "suit": [8, 10, 17], "singl": [8, 10, 11, 18, 23, 25, 39, 44], "present": [8, 10, 12, 16, 39, 44, 45], "nominatecommand": [8, 10], "becom": [8, 10, 27, 39, 44], "unlock": [8, 10, 39, 49], "redund": [8, 10], "tri": [8, 10], "report": [8, 10, 11], "upon": [8, 9, 10, 12, 14, 15, 18, 25, 39, 41, 44], "my_hotkei": [8, 10, 20], "outcom": [8, 10, 39, 45], "programmat": [8, 9, 10], "natur": [8, 10, 25, 39, 41, 44], "settakecommand": [8, 10], "set_tak": [8, 10, 39, 44], "18": [8, 10, 18], "individu": [8, 10, 25, 39, 44], "everi": [8, 10, 45], "_get_coldkey_wallets_for_path": [8, 11, 20, 23], "show_deleg": 8, "prev_deleg": 8, "width": 8, "snapshot": [8, 10, 13, 39, 41, 44], "unless": [8, 25], "expand": [8, 15], "maximum": [8, 9, 10, 15, 20, 22, 25, 31, 39, 44, 45, 47], "show": [8, 10, 14, 18, 19, 20, 23], "who": [8, 10, 15, 17, 19, 20, 22, 23, 39, 44, 45], "consid": [8, 10, 15, 19], "current_deleg": 8, "previous_deleg": 8, "80": 8, "primarili": [8, 9, 10, 14, 18, 39, 41, 44], "rich": 8, "python": [8, 51], "render": 8, "show_delegates_lit": 8, "delegates_lit": 8, "getidentitycommand": [9, 10], "get_ident": [9, 10], "queri": [9, 10, 13, 15, 23, 25, 26, 39, 41, 43, 44, 45], "structur": [9, 10, 12, 14, 15, 17, 18, 19, 39, 41, 42, 44, 45], "item": [9, 10, 24, 39, 45, 47], "attribut": [9, 45], "enter": [9, 10, 15, 18, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49], "s58_address": [9, 10], "setidentitycommand": [9, 10], "set_ident": [9, 10], "legal": [9, 10], "web": [9, 10], "pgp": [9, 10], "fingerprint": [9, 10, 39, 45], "contact": [9, 10], "among": [9, 10, 18, 20, 39, 41, 44, 49], "riot": [9, 10], "email": [9, 10], "pgp_fingerprint": [9, 10], "imag": [9, 10], "twitter": [9, 10], "x": [9, 10], "size": [9, 10, 25, 39, 41, 45], "consent": [9, 10], "cost": [9, 10, 15, 17, 39, 44], "64": [9, 10], "20": [9, 10, 18, 39, 44], "hex": [9, 10, 23, 39, 44, 49], "willing": [9, 10], "high": [9, 10, 23, 39, 44], "script": [9, 10], "metagraph": [10, 25, 39, 44, 49, 50], "misc": [10, 39, 50], "senat": [10, 18, 28, 39, 44, 50], "unstak": [10, 26, 27, 28, 39, 44, 49, 50], "autocompletecommand": [10, 14], "instal": [10, 14], "autocomplet": [10, 14], "getwallethistorycommand": [10, 23], "histori": [10, 23], "latest": [10, 14, 23, 39, 41, 44], "carri": [10, 23], "extrins": [10, 23, 39, 44, 50], "monitor": [10, 16, 19, 20, 23, 25, 39, 44, 45], "financi": [10, 23, 39, 44, 49], "so": [10, 23, 24, 25, 39, 45], "easili": [10, 23], "talli": [10, 23], "cross": [10, 23], "inspectcommand": [10, 11], "compil": [10, 11, 15, 16, 20], "locat": [10, 11, 41], "fund": [10, 11, 17, 21, 37, 39, 44], "standalon": [10, 11, 13], "cold": [10, 11, 23, 39, 40], "hot": [10, 11, 39, 49], "listcommand": [10, 12], "directori": [10, 12, 14, 16, 20, 23, 39, 40, 41], "organ": [10, 12], "tree": [10, 12], "along": [10, 12, 15, 19, 25, 39, 44], "p": [10, 12, 13, 16, 39, 44], "hierarch": [10, 12], "child": [10, 12], "devic": [10, 12, 17, 31, 39, 40, 44, 49], "invoc": [10, 12, 14, 15], "scan": [10, 12], "denot": [10, 12, 41], "unavail": [10, 12], "read": [10, 12, 15, 16, 39, 40, 45], "filesystem": [10, 12, 39, 40], "quick": [10, 12, 16, 39, 44, 45], "metagraphcommand": [10, 13], "score": [10, 13, 16, 41], "tau": [10, 13], "align": [10, 13, 39, 41, 44], "vtrust": [10, 13, 16], "val": [10, 13, 39, 44], "axon": [10, 13, 16, 17, 25, 26, 34, 39, 41, 43, 44, 45, 48, 50], "partial": [10, 13], "wide": [10, 13, 39, 41, 44], "issuanc": [10, 13, 39, 44], "analysi": [10, 13, 39, 41, 44, 45], "diagnost": [10, 13], "newcoldkeycommand": [10, 23], "new_coldkei": [10, 23, 39, 49], "word": [10, 23, 39, 49], "mnemon": [10, 23, 39, 49], "password": [10, 23, 26, 39, 40, 49], "protect": [10, 23, 39, 41, 44, 49], "overwrit": [10, 23, 39, 40, 49], "n_word": [10, 23, 39, 49], "phrase": [10, 23], "use_password": [10, 23, 39, 49], "overwrite_coldkei": [10, 23], "15": [10, 18, 23, 39, 45], "enhanc": [10, 20, 23, 39, 41, 44, 45], "newhotkeycommand": [10, 23], "new_hotkei": [10, 23, 39, 49], "overwrite_hotkei": [10, 23], "wish": [10, 15, 17, 18, 19, 20, 22, 23], "addit": [10, 15, 17, 23, 39, 41, 42, 45], "miner": [10, 23, 39, 41, 44, 49], "hotk": [10, 23], "overviewcommand": [10, 16], "account": [10, 16, 20, 21, 27, 32, 35, 36, 37, 39, 44], "seek": [10, 15, 16, 18, 19], "summari": [10, 16], "distribut": [10, 15, 16, 18, 20, 39, 41, 44, 45], "choos": [10, 16], "tabular": [10, 16], "sort_bi": [10, 16], "sort_ord": [10, 16], "ideal": [10, 16, 23], "overal": [10, 16, 39, 44], "_get_de_registered_stake_for_coldkey_wallet": [10, 16], "args_tupl": [10, 16], "_get_hotkei": [10, 16], "all_hotkei": [10, 16, 20, 22], "_get_key_address": [10, 16], "_get_neurons_for_netuid": [10, 16], "_get_total_bal": [10, 16], "total_bal": [10, 16], "_process_neuron_result": [10, 16], "colkei": [10, 16], "powregistercommand": [10, 17], "pow_regist": [10, 17], "proof": [10, 15, 17, 39, 44], "work": [10, 15, 17, 25, 39, 44, 47], "pow": [10, 15, 17, 31, 39, 44], "altern": [10, 17, 23], "comput": [10, 17, 39, 41, 44, 45], "On": [10, 17, 39, 44], "solv": [10, 17, 31, 39, 44], "puzzl": [10, 17], "mandatori": [10, 17], "target": [10, 17, 25, 39, 44], "num_process": [10, 17, 31, 39, 44], "update_interv": [10, 17, 31, 39, 44], "frequenc": [10, 17], "no_output_in_plac": [10, 17], "cleaner": [10, 17], "verbos": [10, 17], "cuda": [10, 17, 31, 39, 44], "use_cuda": [10, 17], "gpu": [10, 17], "acceler": [10, 17], "compat": [10, 17, 39, 41, 44, 45], "no_cuda": [10, 17], "cpu": [10, 17], "dev_id": [10, 17, 31, 39, 44], "tpb": [10, 17, 31, 39, 44], "adequ": [10, 17], "sound": [10, 17], "understand": [10, 15, 17, 18, 19, 25, 39, 41, 44], "hardwar": [10, 17], "softwar": [10, 17, 41], "particularli": [10, 15, 17, 18, 19, 23, 39, 41, 44, 45], "opt": [10, 17], "direct": [10, 17, 39, 41, 44], "perman": [10, 17], "proposalscommand": [10, 19], "propos": [10, 19, 33, 39, 44], "govern": [10, 18, 19, 39, 41, 44], "vote": [10, 19, 33, 39, 44], "regencoldkeycommand": [10, 23], "regen_coldkei": [10, 23, 39, 49], "regener": [10, 23, 39, 49], "seed": [10, 23, 39, 49], "file": [10, 23, 39, 40, 41, 49], "backup": [10, 23, 39, 49], "json_password": [10, 23], "decrypt": [10, 23, 26, 39, 40, 49], "word1": [10, 23], "word2": [10, 23], "word12": [10, 23], "possibli": [10, 23, 39, 49], "recoveri": [10, 23], "reason": [10, 23], "caution": [10, 14, 23], "avoid": [10, 21, 23], "unintention": [10, 23], "regencoldkeypubcommand": [10, 23], "regen_coldkeypub": [10, 23, 39, 49], "recreat": [10, 23, 39, 49], "hexadecim": [10, 23, 39, 45], "public_key_hex": [10, 23], "overwrite_coldkeypub": [10, 23], "5dkq4": [10, 23], "perhap": [10, 23], "corrupt": [10, 23, 26, 39, 40, 49], "loss": [10, 21, 23], "focus": [10, 23, 39, 44], "regenhotkeycommand": [10, 23], "regen_hotkei": [10, 23, 39, 49], "similar": [10, 15, 23, 25, 41], "0x1234": [10, 23], "upgrad": [10, 23], "cautious": [10, 23], "accident": [10, 23], "registercommand": [10, 17], "recycl": [10, 15, 17, 31, 39, 44], "some": [10, 17, 25], "nativ": [10, 17, 39, 44, 45], "robust": [10, 17, 39, 45], "suffici": [10, 17, 20, 21, 22, 39, 44], "cover": [10, 17, 25, 39, 41, 44], "insuffici": [10, 17, 39, 44], "precondit": [10, 17], "met": [10, 17, 26, 39, 44], "no_prompt": [10, 14, 15, 17, 23, 39, 40], "consider": [10, 17], "select": [10, 17, 39, 44], "rootgetweightscommand": [10, 18], "get_weight": [10, 18], "visibl": [10, 17, 18], "influenc": [10, 18, 20, 39, 41, 44], "9": [10, 18, 24, 39], "11": [10, 18], "13": [10, 18], "19": [10, 18], "100": [10, 15, 18, 20, 21, 22, 41], "00": [10, 18], "40": [10, 18], "25": [10, 18], "30": [10, 18, 39, 45], "60": [10, 18], "49": [10, 18], "35": [10, 18], "59": [10, 18], "14": [10, 18], "53": [10, 18], "12": [10, 18, 25, 39, 43, 49], "06": [10, 18], "03": [10, 18], "interest": [10, 18, 19, 39, 44], "transpar": [10, 18, 19, 21, 39, 45], "rootlist": [10, 18], "constitut": [10, 18], "5cacupsssdkwcmjbmdmjdnwva15fjquz5hssggvdzffphaua": [10, 18], "27086": [10, 18], "37070": [10, 18], "ye": [10, 18, 39, 44], "raok9": [10, 18], "5gmaak7frpxnaxjbqvxcoezmgzfkrdee76egmkob3wxubur": [10, 18], "520": [10, 18], "24199": [10, 18], "No": [10, 18, 39, 40], "open\u03c4ensor": [10, 18], "founda\u03c4ion": [10, 18], "5f4tqywrhfgvcnhoqeinsr6kjd4wmz2kfhlj4ohyuyhbzac3": [10, 18], "1275437": [10, 18], "45895": [10, 18], "roundtable21": [10, 18], "5ffapas75bv5pjhfap2fvlbj9zaxufdjeypsabnc1wcfe52v": [10, 18], "84718": [10, 18], "42095": [10, 18], "5hk5tp6t2s59dywmhrwpbvjej86t61kjuryqeooqj8srepen": [10, 18], "168897": [10, 18], "40859": [10, 18], "rizzo": [10, 18], "5cxrfp2ekfhe62r7q3vpprajjmghti7vwvb2yr79jvez282w": [10, 18], "53383": [10, 18], "34400": [10, 18], "\u03c4aos\u03c4a\u03c4": [10, 18], "bitapai": [10, 18], "5hddm3ibfd2glt5ik7lznt3xjunrnn8poecfggqgawuvknm8": [10, 18], "646944": [10, 18], "73569": [10, 18], "composit": [10, 18, 39, 44], "signific": [10, 18, 19, 39, 41, 44], "rootregistercommand": [10, 18], "formal": [10, 18, 41], "acknowledg": [10, 18], "advanc": [10, 15, 18, 39, 44], "engag": [10, 18, 19, 39, 44], "deepli": [10, 18], "relat": [10, 18, 26, 39, 44], "straightforward": [10, 18], "rootsetboostcommand": [10, 18], "boost": [10, 18], "coorespond": [10, 18], "01": [10, 18], "e": [10, 15, 18, 30, 34, 39, 41, 44, 45, 49], "g": [10, 15, 18, 39, 44, 45], "normal": [10, 18, 39, 44], "0000": [10, 18], "5455": [10, 18], "4545": [10, 18], "do": [10, 18, 39, 40], "16": [10, 18], "17": [10, 18], "22": [10, 18], "23": [10, 18, 39, 45], "26": [10, 18], "27": [10, 18], "28": [10, 18], "29": [10, 18], "31": [10, 18, 30, 34], "32": [10, 18], "33": [10, 18], "34": [10, 18], "36": [10, 18], "37": [10, 18], "38": [10, 18], "39": [10, 18], "n": [10, 15, 18, 41], "2023": [10, 18], "09": [10, 18], "001": [10, 18], "rootsetslashcommand": [10, 18], "slash": [10, 18], "4318": [10, 18], "5682": [10, 18], "rootsetweightscommand": [10, 18], "comma": [10, 18], "power": [10, 18, 39, 44], "impact": [10, 15, 17, 18, 39, 41, 44], "runfaucetcommand": [10, 17], "faucet": [10, 17, 31, 39, 44], "obtain": [10, 17, 41], "testnet": [10, 17, 39, 44], "effort": [10, 17, 39, 44], "real": [10, 17, 39, 44], "higher": [10, 17, 39, 41, 44], "chanc": [10, 17], "suitabl": [10, 17, 39, 41, 45], "prefer": [10, 17, 23], "meant": [10, 17], "experi": [10, 17], "senatecommand": [10, 19], "senateleavecommand": [10, 19], "senate_leav": [10, 19], "discard": [10, 19], "membership": [10, 19, 39, 44], "voluntarili": [10, 19], "leav": [10, 19], "futur": [10, 19, 34, 39, 41, 44, 47], "longer": [10, 19, 25], "senateregistercommand": [10, 19], "senate_regist": [10, 19], "toward": [10, 19, 39, 41, 44], "showvotescommand": [10, 19], "proposal_vot": [10, 19], "deprec": [10, 19], "breakdown": [10, 19], "cast": [10, 19, 39, 44, 46], "particular": [10, 15, 19, 39, 44], "proposal_hash": [10, 19, 33, 39, 44], "disagr": [10, 19], "stakecommand": [10, 20], "max_stak": [10, 20, 22], "exclud": [10, 20, 22], "strateg": [10, 20, 39, 44], "stakeshow": [10, 20], "rate": [10, 15, 20, 39, 41, 44], "instead": [10, 20, 39, 42], "just": [10, 20, 41], "shown": [10, 20], "clear": [10, 15, 20, 41, 42], "swaphotkeycommand": [10, 17], "swap": [10, 17, 39, 44], "transfercommand": [10, 21], "anoth": [10, 21, 24, 39, 41, 44], "destin": [10, 21, 35, 37, 39, 44], "dest": [10, 21, 37, 39, 44], "ed2519": [10, 21], "accuraci": [10, 21, 39, 44], "5dp8": [10, 21], "unstakecommand": [10, 22], "previous": [10, 22], "hotkey_ss58address": [10, 22], "remain": [10, 22, 25, 41], "hk1": [10, 22], "hk2": [10, 22], "realloc": [10, 22, 39, 44], "command_pars": [10, 22], "updatecommand": [10, 14], "seri": [10, 14], "master": [10, 14], "branch": [10, 14], "github": [10, 14], "repositori": [10, 14], "pull": [10, 14], "reinstal": [10, 14], "explicitli": [10, 14, 25, 41], "pip": [10, 14], "ff": [10, 14], "fast": [10, 14], "legaci": [10, 14, 23, 39, 40], "easi": [10, 14, 39, 45], "recommend": [10, 14, 23, 25, 39, 45, 49], "updatewalletcommand": [10, 23], "choic": [10, 23, 39, 44], "highest": [10, 23, 39, 44], "period": [10, 15, 23, 39, 44], "practic": [10, 23, 41], "votecommand": [10, 19], "senate_vot": [10, 19], "shape": [10, 19, 39, 44, 46], "exercis": [10, 19], "right": [10, 19], "evolut": [10, 19, 41], "walletbalancecommand": [10, 23], "w": [10, 23, 39, 41, 44], "interchang": [10, 23], "breviti": [10, 23], "clariti": [10, 23], "keep": [10, 23, 37, 39, 45, 49], "track": [10, 23, 39, 41, 44, 45], "asset": [10, 23, 41], "health": [10, 23, 39, 44], "walletcreatecommand": [10, 23], "those": [10, 23, 24, 25, 39], "renew": [10, 23], "fresh": [10, 23], "munch": [10, 24, 39], "_get_hotkey_wallets_for_wallet": [11, 20], "hyperparam": 15, "registersubnetworkcommand": 15, "register_subnetwork": [15, 39, 44], "subnetwork": [15, 29, 39, 44], "credenti": 15, "successfulli": [15, 34], "copi": [15, 24, 39, 41], "awar": 15, "implic": 15, "ecosystem": [15, 39, 41, 44, 45], "subnetgethyperparamscommand": 15, "sudo": 15, "32767": 15, "7200": [15, 39, 44], "455": 15, "99": 15, "1000000000000000000": 15, "2013": 15, "112": 15, "5000": 15, "100000000000": 15, "900000": 15, "whose": [15, 39, 44], "subnethyperparamscommand": 15, "subnetlistcommand": 15, "capac": [15, 39, 44], "In": [15, 24, 25, 39, 41, 44, 45], "basic": [15, 39, 41, 45], "construct": [15, 24, 25, 39, 40, 41, 44, 45], "footer": 15, "summar": 15, "ownership": 15, "subnetlockcostcommand": 15, "lock_cost": 15, "lock": [15, 39, 44], "piec": [15, 25], "anyon": 15, "infrastructur": [15, 39, 41, 44], "anneal": 15, "unapp": 15, "reach": 15, "amenbl": 15, "get_subnet_burn_cost": [15, 39, 44], "problem": 15, "catch": 15, "plan": [15, 39, 44], "invest": [15, 39, 41, 44], "subnetsudocommand": 15, "theirs": 15, "familiar": 15, "display_vot": 19, "vote_data": 19, "delegate_info": 19, "format_call_data": 19, "call_data": 19, "api_url": 23, "subqueri": 23, "sq": 23, "taostat": 23, "graphql_queri": 23, "multilin": 23, "cursor": 23, "transferfilt": 23, "transfersorderbi": 23, "orderbi": 23, "extrinsicid": 23, "blocknumb": 23, "pageinfo": 23, "endcursor": 23, "hasnextpag": 23, "haspreviouspag": 23, "totalcount": 23, "max_txn": 23, "_get_coldkey_ss58_addresses_for_path": 23, "create_transfer_history_t": 23, "get_wallet_transf": 23, "wallet_address": 23, "defaultconfig": [24, 39], "strict": [24, 39], "defaultmunch": [24, 39], "defaultdict": [24, 39], "abstract": [24, 25, 39, 41, 42, 43], "invalidconfigfil": [24, 39], "yamlerror": [24, 39], "__is_set": [24, 39], "translat": [24, 39], "nest": [24, 39], "strictli": [24, 39], "undefin": [24, 39], "__check_for_missing_required_arg": [24, 39], "__deepcopy__": [24, 39], "memo": [24, 39], "__get_required_args_from_pars": [24, 39], "__parse_args__": [24, 39], "namespac": [24, 39], "invert": [24, 39], "b": [24, 39, 40, 41, 44], "foo": [24, 39], "lol": [24, 39], "hello": [24, 39, 45], "42": [24, 39], "poni": [24, 39], "pretti": [24, 39], "eval": [24, 39], "with_spac": [24, 39], "c": [24, 39, 41], "simpl": [24, 39, 41, 45], "long": [24, 39, 44], "__split_params__": [24, 39], "_config": [24, 39], "_merg": [24, 39], "merg": [24, 25, 39], "recurs": [24, 39, 45], "second": [24, 25, 39, 43], "preced": [24, 39, 44], "_remove_private_kei": [24, 39], "shallow": [24, 39], "is_set": [24, 39], "param_nam": [24, 39, 44], "still": [24, 39], "merge_al": [24, 39], "update_with_kwarg": [24, 39], "basemodel": [25, 39, 42, 45, 46], "dendritemixin": [25, 39], "keypair": [25, 39, 40, 49], "brain": [25, 39], "analogi": [25, 39], "here": [25, 39, 41, 44], "reciev": [25, 37, 39], "synapse_histori": [25, 39], "histor": [25, 39, 41], "fallback": [25, 39, 44], "synchron": [25, 39, 41, 44], "asyncgener": [25, 39], "streamingsynaps": [25, 39, 42], "deseri": [25, 39, 40, 42, 43, 45, 46], "run_async": [25, 39], "collat": [25, 39], "target_axon": [25, 39], "call_stream": [25, 39], "chunk": [25, 39, 42], "element": [25, 39, 41, 46], "preprocess_synapse_for_request": [25, 39], "target_axon_info": [25, 39], "build": [25, 39, 44], "process_server_respons": [25, 39], "server_respons": [25, 39], "json_respons": [25, 39], "local_synaps": [25, 39], "aiohttp": [25, 39, 42], "clientrespons": [25, 39, 42], "close_sess": [25, 39], "close": [25, 39, 44], "session": [25, 39, 41], "aclose_sess": [25, 39], "aysnc": [25, 39], "ping": [25, 39], "howev": [25, 39, 41], "abl": [25, 39], "safe": [25, 39, 45, 47, 49], "clientsess": 25, "wai": [25, 39, 43, 44, 45, 49], "lazili": 25, "benefit": [25, 41], "absolut": 25, "adher": 25, "await": [25, 39, 42], "post": 25, "durat": [25, 39, 44, 45], "__aenter__": 25, "statement": 25, "some_async_method": 25, "__aexit__": 25, "exc_typ": 25, "exc_valu": 25, "traceback": 25, "proper": [25, 39, 41, 45], "cleanup": 25, "ti": 25, "baseexcept": [25, 26, 39], "tracebacktyp": 25, "stack": 25, "point": [25, 39, 41, 44], "automat": [25, 39, 41, 45], "destructor": 25, "fulli": 25, "unpredict": 25, "del": 25, "implicitli": 25, "user_wallet_address": 25, "_get_endpoint_url": 25, "request_nam": 25, "full": [25, 41], "differenti": 25, "_handle_request_error": 25, "interpret": [25, 27, 36, 37, 38, 39, 45], "common": [25, 26, 31, 36, 38, 39], "caught": 25, "_log_incoming_respons": 25, "_log_outgoing_request": 25, "troubleshoot": 25, "outgo": 25, "turn": 25, "bittensor_debug": 25, "counterpart": 25, "open": 25, "buffer": [25, 39, 46], "finish": [25, 39, 47], "dendrite_inst": 25, "wait": [25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 47], "larg": 25, "transmit": [25, 39, 45], "arbitrari": [25, 39, 44], "exhaust": 25, "closur": 25, "leakag": 25, "asyncio": 25, "loop": 25, "feasibl": 25, "bridg": 25, "sequenti": 25, "unifi": 25, "dendrt": 25, "But": 25, "silent": 25, "ignor": [25, 39, 40], "blacklistedexcept": [26, 39], "synapseexcept": [26, 39], "chainconnectionerror": [26, 39], "chainerror": [26, 39], "chainqueryerror": [26, 39], "chaintransactionerror": [26, 39], "identityerror": [26, 39], "internalservererror": [26, 39], "invalidrequestnameerror": [26, 39], "invalid": [26, 39, 46], "usus": [26, 39], "broken": [26, 39], "keyfileerror": [26, 39, 40, 49], "thrown": [26, 39], "keyfil": [26, 39, 49, 50], "writabl": [26, 39, 40], "metadataerror": [26, 34, 39], "commit": [26, 39, 44], "nominationerror": [26, 39], "notdelegateerror": [26, 27, 36, 39], "stakeerror": [26, 36, 38, 39, 44], "try": [26, 39], "notregisterederror": [26, 27, 36, 38, 39], "notverifiedexcept": [26, 39], "postprocessexcept": [26, 39], "cannot": [26, 39, 40, 42, 45, 46], "priorityexcept": [26, 39], "registrationerror": [26, 39], "runexcept": [26, 39], "synapsedendritenoneexcept": [26, 39], "class": [26, 31], "synapseparsingerror": [26, 39], "unabl": [26, 39], "takeerror": 26, "transfererror": [26, 39], "unknownsynapseerror": [26, 39], "unstakeerror": [26, 39], "decrease_take_extrins": 27, "wait_for_fin": [27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44], "wait_for_inclus": [27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44], "delegate_extrins": 27, "unclud": [27, 30, 31, 32, 34, 35, 36, 37, 38], "we": [27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44], "did": [27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "inclus": [27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44], "increase_take_extrins": 27, "nominate_extrins": 27, "undelegate_extrins": 27, "un": 27, "set_weight": [28, 39, 44, 50], "find_event_attributes_in_extrinsic_receipt": 29, "event_nam": 29, "register_subnetwork_extrins": 29, "set_hyperparameter_extrins": 29, "prometheus_extrins": 30, "subscrib": [30, 34, 39, 49], "substensor": 30, "host": [30, 34], "122": [30, 34], "9221": [30, 34], "maxattemptsexcept": 31, "maxsuccessexcept": 31, "burned_register_extrins": 31, "register_extrins": 31, "max_allowed_attempt": [31, 39, 44], "output_in_plac": [31, 39, 44], "256": [31, 39, 44, 45], "log_verbos": [31, 39, 44], "run_faucet_extrins": 31, "net": 31, "swap_hotkey_extrins": 31, "new_wallet": [31, 39, 44], "root_register_extrins": 32, "set_root_weights_extrins": 32, "numpi": [32, 35, 39, 41, 44, 46], "ndarrai": [32, 35, 39, 41, 44, 46], "int64": [32, 35, 39, 41, 44], "longtensor": [32, 35, 39, 44], "float32": [32, 35, 39, 41, 44], "floattensor": [32, 35, 39, 44], "version_kei": [32, 35, 39, 44], "np": [32, 35, 39, 41, 44, 46], "leave_senate_extrins": 33, "register_senate_extrins": 33, "vote_senate_extrins": 33, "proposal_idx": [33, 39, 44], "get_metadata": 34, "publish_metadata": 34, "submit": [34, 39, 44, 47], "sha256": 34, "blake256": 34, "keccak256": 34, "raw0": 34, "128": 34, "note": 34, "serve_axon_extrins": 34, "serve_extrins": 34, "set_weights_extrins": 35, "subtensor_endpoint": 35, "uint64": 35, "__do_add_stake_singl": 36, "add_stake_extrins": 36, "add_stake_multiple_extrins": 36, "transfer_extrins": [37, 39, 44], "keep_al": 37, "ed25519": 37, "aliv": 37, "existenti": [37, 39, 44], "deposit": [37, 39, 44], "__do_remove_stake_singl": 38, "check_threshold_amount": 38, "unstaking_bal": 38, "limit": [38, 39, 44], "below": [38, 39, 44], "unstake_extrins": 38, "unstake_multiple_extrins": 38, "btlog": [39, 50], "chain_data": [39, 41, 44, 50], "all_command": 39, "mockkeyfil": [39, 40], "mock": [39, 40, 44], "simul": [39, 40, 44], "store": [39, 40, 41, 45, 49], "treat": [39, 40], "serial": [39, 40, 45, 46], "check_and_update_encrypt": [39, 40], "print_result": [39, 40], "anyth": [39, 40], "valueerror": [39, 40], "alwai": [39, 40], "exists_on_devic": [39, 40], "although": [39, 40], "get_keypair": [39, 40], "is_encrypt": [39, 40], "is_read": [39, 40], "is_writ": [39, 40], "written": [39, 40], "make_dir": [39, 40], "noth": [39, 40], "set_keypair": [39, 40], "prioritythreadpoolexecutor": [39, 47], "maxsiz": [39, 47], "thread_name_prefix": [39, 47], "initarg": [39, 47], "_base": [39, 47], "threadpoolexecutor": [39, 47], "give": [39, 47], "our": [39, 47], "is_empti": [39, 47], "_counter": [39, 47], "_adjust_thread_count": [39, 47], "_initializer_fail": [39, 47], "clean": [39, 44, 47], "until": [39, 44, 47], "reclaim": [39, 47], "cancel_futur": [39, 47], "cancel": [39, 47], "pend": [39, 47], "fn": [39, 47], "schedul": [39, 47], "abc": [39, 41, 42, 43], "subclass": [39, 42, 45], "model": [39, 41, 42, 44, 45, 46], "validationerror": [39, 42, 45, 46], "btstreamingrespons": [39, 42], "btstreamingresponsemodel": [39, 42], "streamingrespons": [39, 42], "streamer": [39, 42], "instanti": [39, 42], "create_streaming_respons": [39, 42], "scope": [39, 42], "stream_respons": [39, 42], "asgi": [39, 42], "model_config": [39, 42, 45, 46], "token_stream": [39, 42], "extract_response_json": [39, 42], "process_streaming_respons": [39, 42], "accumul": [39, 41, 42, 44], "subnetsapi": [39, 43], "inherit": [39, 43, 45], "prepare_synaps": [39, 43], "process_respons": [39, 43], "query_api": [39, 43], "bespok": [39, 43], "prepare_synapse_fn": [39, 43], "process_responses_fn": [39, 43], "pydant": [39, 42, 45, 46], "schema": [39, 45], "learn": [39, 41, 44, 45], "ml": [39, 45], "compress": [39, 45], "sanit": [39, 45], "encompass": [39, 45], "rout": [39, 45], "enforc": [39, 45], "is_success": [39, 45], "is_failur": [39, 45], "is_timeout": [39, 45], "conveni": [39, 45], "think": [39, 45], "glorifi": [39, 45], "identif": [39, 41, 44, 45], "latenc": [39, 45], "sensit": [39, 41, 44, 45], "total_s": [39, 45], "header_s": [39, 45], "overload": [39, 45], "optim": [39, 45], "bandwidth": [39, 45], "constrain": [39, 45], "aid": [39, 44, 45], "computed_body_hash": [39, 45], "required_hash_field": [39, 45], "detect": [39, 45], "convers": [39, 45], "improv": [39, 45], "mysynaps": [39, 45], "Not": [39, 45], "dummy_input": [39, 45], "becaus": [39, 45], "synapse_dict": [39, 45], "model_dump_json": [39, 45], "to_head": [39, 45], "from_head": [39, 45], "deserialized_synaps": [39, 45], "succeed": [39, 45], "408": [39, 45], "terminalinfo": [39, 45], "__setattr__": [39, 45], "get_total_s": [39, 45], "body_hash": [39, 45], "sha3": [39, 45], "parse_headers_to_input": [39, 45], "concaten": [39, 45], "produc": [39, 45], "examplerout": [39, 45], "hash_valu": [39, 45], "failed_verif": [39, 45], "401": [39, 45], "is_blacklist": [39, 45], "403": [39, 45], "forbidden": [39, 45], "200": [39, 45], "would": [39, 45], "_extract_header_s": [39, 45], "_extract_timeout": [39, 45], "_extract_total_s": [39, 45], "classvar": [39, 45], "ellipsi": [39, 45], "overridden": [39, 45], "superclass": [39, 45], "simpli": [39, 41, 45], "modif": [39, 45], "customsynaps": [39, 45], "additional_data": [39, 45], "base64": [39, 45], "b64decod": [39, 45], "utf": [39, 45], "serialized_data": [39, 45], "sgvsbg8gv29ybgq": [39, 45], "world": [39, 45], "custom_synaps": [39, 45], "model_validate_json": [39, 45], "re": [39, 44, 45, 49], "prior": [39, 45], "received_head": [39, 45], "bt_header_axon_address": [39, 45], "127": [39, 45], "bt_header_dendrite_port": [39, 45], "8080": [39, 45], "replic": [39, 45], "get_required_field": [39, 45], "transform": [39, 41, 45], "categori": [39, 45], "input_obj": [39, 45], "set_name_typ": [39, 45], "lifespan": [39, 45], "preserv": [39, 45], "transport": [39, 45], "metric": [39, 41, 44, 45], "valuabl": [39, 41, 44, 45], "examplesynaps": [39, 45], "dtype": [39, 41, 46], "_extract_dtyp": [39, 46], "_extract_shap": [39, 46], "arrai": [39, 41, 46], "tolist": [39, 46], "carrier": [39, 45], "rather": [39, 45], "status_messag": [39, 45], "process_tim": [39, 45], "unix": [39, 45], "linearli": [39, 45], "duplic": [39, 45], "repeat": [39, 45], "uuid": [39, 45], "axon_hotkei": [39, 45], "dendrite_hotkei": [39, 45], "terminal_info": [39, 45], "198": [39, 45], "123": [39, 41, 45], "9282": [39, 45], "111": [39, 45], "111111": [39, 45], "5ecbd69c": [39, 45], "1cec": [39, 45], "11ee": [39, 45], "b0dc": [39, 45], "e29ce36fec1a": [39, 45], "5enjdgnqqwnul2hcadxeetn2oqtxzw6bmbe936kfy2pfz1j1": [39, 45], "0x0813029319030129u4120u10841824y0182u091u230912u": [39, 45], "ip_address": [39, 45], "processing_dur": [39, 45], "indispens": [39, 45], "_extract_nonc": [39, 45], "_extract_port": [39, 45], "_extract_process_tim": [39, 45], "_extract_status_cod": [39, 45], "_extract_vers": [39, 45], "__archive_entrypoint__": 39, "wss": [39, 44], "archiv": [39, 41, 44], "opentensor": [39, 44], "ai": [39, 41, 44], "443": [39, 44], "__bellagene_entrypoint__": 39, "parachain": 39, "__blocktime__": 39, "__console__": 39, "__delegates_details_url__": 39, "raw": [39, 41, 45, 46], "githubusercont": 39, "com": [39, 47], "__finney_entrypoint__": 39, "entrypoint": [39, 44], "__finney_test_entrypoint__": 39, "__local_entrypoint__": 39, "9944": 39, "__network_explorer_map__": 39, "__networks__": 39, "__new_signature_version__": 39, "360": 39, "__pipaddress__": 39, "pypi": 39, "org": 39, "__rao_symbol__": 39, "__ss58_address_length__": 39, "48": 39, "__ss58_format__": 39, "__tao_symbol__": 39, "__type_registry__": 39, "__use_console__": 39, "__version__": 39, "__version_as_int__": [39, 44], "ask_password_to_encrypt": [39, 40], "decrypt_keyfile_data": [39, 40], "keyfile_data": [39, 40], "coldkey_nam": [39, 40], "ansibl": [39, 40], "vault": [39, 40], "ask": [39, 40], "decrypted_data": [39, 40], "incorrect": [39, 40, 49], "deserialize_keypair_from_keyfile_data": [39, 40], "display_mnemonic_msg": [39, 49], "substrateinterfac": [39, 44, 49], "key_typ": [39, 49], "encrypt_keyfile_data": [39, 40], "encrypted_data": [39, 40], "get_coldkey_password_from_environ": [39, 40], "substrat": [39, 40, 44], "_may_overwrit": [39, 40], "okai": [39, 40], "may_overwrit": [39, 40], "_read_keyfile_data_from_fil": [39, 40], "_write_keyfile_data_to_fil": [39, 40], "write": [39, 40], "permiss": [39, 40], "most": [39, 40, 41, 44], "nacl": [39, 40], "els": [39, 40], "on_devic": [39, 40], "forc": [39, 40], "keyfile_data_encryption_method": [39, 40], "encryption_method": [39, 40], "keyfile_data_is_encrypt": [39, 40], "keyfile_data_is_encrypted_ans": [39, 40], "is_ans": [39, 40], "keyfile_data_is_encrypted_legaci": [39, 40], "is_legaci": [39, 40], "keyfile_data_is_encrypted_nacl": [39, 40], "is_nacl": [39, 40], "legacy_encrypt_keyfile_data": [39, 40], "serialized_keypair_to_keyfile_data": [39, 40], "_mock": [39, 44], "inter": [39, 41, 44], "ledger": [39, 41, 44], "peer": [39, 41, 44], "themselv": [39, 44], "gatewai": [39, 44], "fair": [39, 44], "major": [39, 41, 44], "introduc": [39, 44], "specul": [39, 41, 44], "market": [39, 44], "incentiv": [39, 41, 44], "judici": [39, 44], "finney_subtensor": [39, 44], "websocket": [39, 44], "connect_websocket": [39, 44], "collabor": [39, 41, 44], "promis": [39, 44], "other_neuron_ss58": [39, 44], "bond_amount": [39, 44], "instrument": [39, 41, 44], "envis": [39, 44], "principl": [39, 41, 44], "neurip": [39, 41, 44], "paper": [39, 41, 44], "strongli": [39, 44], "encourag": [39, 41, 44], "whenev": [39, 44], "possibl": [39, 44], "resili": [39, 44], "pleas": [39, 44], "ahead": [39, 44], "instruct": [39, 44], "rtype": [39, 44], "get_proposal_vote_data": [39, 44], "_do_associate_ip": [39, 44], "ip_info_list": [39, 44], "_do_burned_regist": [39, 44], "retri": [39, 44], "three": [39, 44], "exponenti": [39, 44], "backoff": [39, 44], "_do_decrease_tak": [39, 44], "_do_deleg": [39, 44], "_do_increase_tak": [39, 44], "_do_nomin": [39, 44], "_do_pow_regist": [39, 44], "pow_result": [39, 44], "powsolut": [39, 44], "_do_root_regist": [39, 44], "_do_serve_axon": [39, 44], "call_param": [39, 44], "axonservecallparam": [39, 44, 48], "announc": [39, 44], "_do_serve_prometheu": [39, 44], "prometheusservecallparam": [39, 44, 48], "_do_set_weight": [39, 44], "adjust": [39, 44], "observ": [39, 44], "_do_stak": [39, 44], "_do_swap_hotkei": [39, 44], "_do_transf": [39, 44], "transfer_bal": [39, 44], "block_hash": [39, 44], "wait_for_": [39, 44], "_do_undeleg": [39, 44], "_do_unstak": [39, 44], "_encode_param": [39, 44], "call_definit": [39, 44], "paramwithtyp": [39, 44], "_get_hyperparamet": [39, 44], "prepend": [39, 44], "chain_endpoint": [39, 44], "add_stak": [39, 44], "add_stake_multipl": [39, 44], "bulk": [39, 44], "reflect": [39, 41, 44], "adjustmentalpha": [39, 44], "associated_validator_ip_info": [39, 44], "blockssinceepoch": [39, 44], "blocks_since_last_upd": [39, 44], "perceiv": [39, 44], "approach": [39, 44], "measur": [39, 41, 44], "analyz": [39, 41, 44], "recogn": [39, 44], "divers": [39, 44], "nich": [39, 44], "bondsmovingaverag": [39, 44], "burned_regist": [39, 44], "mine": [39, 44], "extens": [39, 44], "determine_chain_endpoint_and_network": [39, 44], "300": [39, 41, 44], "challeng": [39, 44], "does_hotkey_exist": [39, 44], "get_all_neurons_for_pubkei": [39, 44], "get_all_subnet_netuid": [39, 44], "scale": [39, 44], "get_all_subnets_info": [39, 44], "characterist": [39, 44], "gain": [39, 44], "assist": [39, 44, 49], "get_all_uids_for_hotkei": [39, 44], "get_axon_info": [39, 44], "get_bal": [39, 44], "econom": [39, 44], "landscap": [39, 44], "get_block_hash": [39, 44], "block_id": [39, 44], "immut": [39, 44], "technologi": [39, 44], "refer": [39, 41, 44], "get_commit": [39, 44], "get_current_block": [39, 44], "recent": [39, 44], "get_delegate_by_hotkei": [39, 44], "get_delegate_tak": [39, 44], "get_deleg": [39, 44], "holder": [39, 44], "get_delegates_lit": [39, 44], "get_emission_value_by_subnet": [39, 44], "emit": [39, 44], "get_error_info_by_index": [39, 44], "error_index": [39, 44], "get_existential_deposit": [39, 44], "minimum": [39, 44], "reap": [39, 44], "conserv": [39, 44], "storag": [39, 44], "prolifer": [39, 44], "dust": [39, 44], "get_hotkey_own": [39, 44], "get_minimum_required_stak": [39, 44], "get_netuids_for_hotkei": [39, 44], "get_neuron_for_pubkey_and_subnet": [39, 44], "get_nominators_for_hotkei": [39, 44], "relationship": [39, 41, 44], "get_prometheus_info": [39, 44], "get_proposal_call_data": [39, 44], "genericcal": [39, 44], "get_proposal_hash": [39, 44], "review": [39, 44], "get_propos": [39, 44], "thorough": [39, 44], "recept": [39, 44], "holist": [39, 44], "get_senate_memb": [39, 44], "grasp": [39, 44], "author": [39, 41, 44], "get_stak": [39, 44], "get_stake_for_coldkey_and_hotkei": [39, 44], "get_stake_info_for_coldkei": [39, 44], "coldkey_ss58_list": [39, 44], "pattern": [39, 44], "simultan": [39, 44], "perspect": [39, 44], "strategi": [39, 44], "term": [39, 44], "viabil": [39, 44], "get_subnet_connection_requir": [39, 44], "netuid_0": [39, 44], "netuid_1": [39, 44], "look": [39, 44], "complianc": [39, 44], "get_subnet_hyperparamet": [39, 44], "comprehend": [39, 44], "get_subnet_info": [39, 44], "stakehold": [39, 44], "get_subnet_mod": [39, 44], "get_subnet_own": [39, 44], "get_subnet": [39, 44], "get_total_stake_for_coldkei": [39, 44], "get_total_stake_for_hotkei": [39, 44], "get_total_subnet": [39, 44], "growth": [39, 44], "extent": [39, 44], "get_transfer_fe": [39, 44], "estim": [39, 44], "rao": [39, 44], "get_uid_for_hotkey_on_subnet": [39, 44], "get_vote_data": [39, 44], "immunityperiod": [39, 44], "penalti": [39, 44], "restrict": [39, 44], "grace": [39, 44], "punit": [39, 44], "motiv": [39, 44], "driver": [39, 44], "is_hotkey_deleg": [39, 44], "Being": [39, 44], "is_hotkey_regist": [39, 44], "global": [39, 44], "elig": [39, 44], "is_hotkey_registered_ani": [39, 44], "is_hotkey_registered_on_subnet": [39, 44], "area": [39, 44], "is_senate_memb": [39, 44], "overse": [39, 44], "approv": [39, 44], "mathemat": [39, 44], "\u03ba": [39, 44], "share": [39, 41, 44], "deriv": [39, 44], "softmax": [39, 44], "formula": [39, 44], "\u03ba_i": [39, 44], "exp": [39, 44], "w_i": [39, 44], "\u03c3": [39, 44], "w_j": [39, 44], "denomin": [39, 44], "probabilist": [39, 44], "rel": [39, 44], "leave_sen": [39, 44], "accrual": [39, 44], "validatorexcludequantil": [39, 44], "maxalloweduid": [39, 44], "maxweightslimit": [39, 44], "sync": [39, 41, 44], "lightweight": [39, 44], "interconnect": [39, 44], "minallowedweight": [39, 44], "neuron_for_uid": [39, 44], "neuron_for_uid_lit": [39, 44], "simplifi": [39, 41, 44], "analys": [39, 41, 44], "neuron_for_wallet": [39, 44], "neuron_has_validator_permit": [39, 44], "regard": [39, 44], "neurons_lit": [39, 44], "streamlin": [39, 44], "query_const": [39, 44], "module_nam": [39, 44], "constant_nam": [39, 44], "scaletyp": [39, 44], "inflat": [39, 44], "deeper": [39, 44], "query_ident": [39, 44], "query_map": [39, 44], "querymapresult": [39, 44], "query_map_subtensor": [39, 44], "query_modul": [39, 44], "versatil": [39, 44], "query_runtime_api": [39, 44], "runtime_api": [39, 44], "query_subtensor": [39, 44], "query_respons": [39, 44], "correl": [39, 44], "progress": [39, 44], "zero": [39, 44], "register_sen": [39, 44], "segment": [39, 44], "expans": [39, 44], "diversif": [39, 44], "emmit": [39, 44], "economi": [39, 44], "staking_target": [39, 44], "staking_actu": [39, 44], "inflation_target": [39, 44], "goal": [39, 44], "root_regist": [39, 44], "influenti": [39, 44], "signifi": [39, 41, 44], "root_set_weight": [39, 44], "run_faucet": [39, 44], "newcom": [39, 44], "small": [39, 44], "onboard": [39, 44], "journei": [39, 44], "scalinglawpow": [39, 44], "hyper": [39, 44], "send_extrins": [39, 44], "max_retri": [39, 44], "wait_tim": [39, 44], "max_wait": [39, 44], "extrinsicreceipt": [39, 44], "live": [39, 41, 44], "mempool": [39, 44], "receipt": [39, 44], "serve_axon": [39, 44], "serve_prometheu": [39, 44], "often": [39, 41, 44], "express": [39, 44], "move": [39, 44], "overus": [39, 44], "set_hyperparamet": [39, 44], "fine": [39, 44], "tune": [39, 44], "And": [39, 44], "81": [39, 44], "setup_config": [39, 44], "state_cal": [39, 44], "rpc": [39, 44], "subnet_exist": [39, 44], "subnetworkn": [39, 44], "swap_hotkei": [39, 44], "old": [39, 44], "synergy_scaling_law_pow": [39, 44], "total_issu": [39, 44], "currenc": [39, 44], "suppli": [39, 41, 44], "inflationari": [39, 44], "trend": [39, 44], "factor": [39, 44], "fluid": [39, 44], "movement": [39, 44], "tx_rate_limit": [39, 44], "frame": [39, 44], "stabil": [39, 41, 44], "congest": [39, 44], "reduc": [39, 41, 44], "percept": [39, 44], "unstake_multipl": [39, 44], "batch": [39, 44], "withdrawn": [39, 44], "update_ident": [39, 44], "validator_batch_s": [39, 44], "validatorbatchs": [39, 44], "validator_epoch_length": [39, 44], "validatorepochlen": [39, 44], "validator_epochs_per_reset": [39, 44], "validatorepochsperreset": [39, 44], "validator_exclude_quantil": [39, 44], "validator_logits_diverg": [39, 44], "validatorlogitsdiverg": [39, 44], "validator_prune_len": [39, 44], "validatorprunelen": [39, 44], "validator_sequence_length": [39, 44], "validatorsequencelength": [39, 44], "vote_sen": [39, 44], "weightssetratelimit": [39, 44], "turn_console_off": 39, "turn_console_on": 39, "validate_password": [39, 40], "polici": [39, 40], "version_split": 39, "contrast": [39, 49], "safer": [39, 49], "regular": [39, 49], "hotkey_str": [39, 49], "_hotkei": [39, 49], "_coldkei": [39, 49], "_coldkeypub": [39, 49], "create_if_non_exist": [39, 49], "get_coldkei": [39, 49], "get_hotkei": [39, 49], "get_coldkeypub": [39, 49], "set_coldkei": [39, 49], "set_hotkei": [39, 49], "set_coldkeypub": [39, 49], "hotkey_fil": [39, 49], "coldkey_fil": [39, 49], "coldkeypub_fil": [39, 49], "regenerate_coldkei": [39, 49], "regenerate_hotkei": [39, 49], "regenerate_coldkeypub": [39, 49], "cryptokeyerror": [39, 49], "incorrec": [39, 49], "txt": [39, 49], "coldkey_use_password": [39, 49], "hotkey_use_password": [39, 49], "create_coldkey_from_uri": [39, 49], "uri": [39, 49], "suppress": [39, 49], "suri": [39, 49], "alic": [39, 49], "bob": [39, 49], "newli": [39, 49], "create_hotkey_from_uri": [39, 49], "create_new_coldkei": [39, 49], "disk": [39, 41, 49], "create_new_hotkei": [39, 49], "Will": [39, 49], "space": [39, 49], "restor": [39, 41, 49], "json_data": [39, 49], "passphras": [39, 49], "public_kei": [39, 49], "determi": [39, 49], "nacl_salt": 40, "x13q": 40, "x83": 40, "xdf": 40, "xf1z": 40, "xbc": 40, "x9c": 40, "x90": 40, "xb5q": 40, "x879": 40, "xe9": 40, "xb1": 40, "baseclass": 41, "metagraph_state_dict_ndarray_kei": 41, "metagraphmixin": 41, "neural": 41, "graph": 41, "backbon": 41, "captur": 41, "interconnected": 41, "constantli": 41, "akin": 41, "yuma": 41, "outlin": 41, "distinguish": 41, "cryptocurr": 41, "mainli": 41, "everyth": 41, "propag": 41, "embodi": 41, "neuron_rank": 41, "r": 41, "neuron_incent": 41, "deepcopi": 41, "less": 41, "quicker": 41, "belief": 41, "proport": 41, "much": 41, "agre": 41, "judgment": 41, "agreement": 41, "achiev": 41, "benefici": 41, "emploi": 41, "accru": 41, "greater": 41, "concept": 41, "reput": 41, "matrix": 41, "infer": 41, "suggest": 41, "stronger": 41, "tv": 41, "w_": 41, "ij": 41, "th": 41, "row": 41, "impli": 41, "j": 41, "concis": 41, "metagraph_repr": 41, "mirror": 41, "easier": 41, "quickli": 41, "succinctli": 41, "500": 41, "_assign_neuron": 41, "_create_tensor": 41, "could": 41, "neuron_stak": 41, "_initialize_subtensor": 41, "_process_root_weight": 41, "_process_weights_or_bond": 41, "root_weight": 41, "raw_root_weights_data": 41, "unstructur": 41, "raw_weights_data": 41, "_set_metagraph_attribut": 41, "_set_weights_and_bond": 41, "restart": 41, "exact": 41, "load_from_path": 41, "dir_path": 41, "reconstitut": 41, "persist": 41, "later": 41, "reload": 41, "state_dict": 41, "examin": 41, "overhead": 41, "12345": 41, "beyond": 41, "light": 41, "nontorchmetagraph": 41, "torchmetagraph": 41, "get_save_dir": 41, "latest_block_path": 41, "conform": 42, "key_nonc": 44, "original_convert_type_str": 44, "cast_float": 45, "cast_int": 45, "integ": 45, "get_siz": 45, "obj": 45, "seen": 45, "travers": 45, "numpy_dtyp": 46, "torch_dtyp": 46, "cast_dtyp": 46, "cast_shap": 46, "brokenthreadpool": 47, "brokenexecutor": 47, "null_entri": 47, "_workitem": 47, "__author__": 47, "brian": 47, "quinlan": 47, "sweetapp": 47, "_shutdown": 47, "_threads_queu": 47, "_worker": 47, "executor_refer": 47, "work_queu": 47, "page": 50, "auto": 50, "bittensor": 50, "sphinx": 50, "autoapi": 50, "section": 51, "subpackag": 51, "submodul": 51, "content": 51}, "objects": {"": [[39, 0, 0, "-", "bittensor"]], "bittensor": [[39, 1, 1, "", "ALL_COMMANDS"], [39, 2, 1, "", "AxonInfo"], [39, 6, 1, "", "BlacklistedException"], [39, 6, 1, "", "ChainConnectionError"], [39, 6, 1, "", "ChainError"], [39, 6, 1, "", "ChainQueryError"], [39, 6, 1, "", "ChainTransactionError"], [39, 2, 1, "", "DefaultConfig"], [39, 2, 1, "", "DelegateInfo"], [39, 2, 1, "", "DelegateInfoLite"], [39, 2, 1, "", "IPInfo"], [39, 6, 1, "", "IdentityError"], [39, 6, 1, "", "InternalServerError"], [39, 6, 1, "", "InvalidConfigFile"], [39, 6, 1, "", "InvalidRequestNameError"], [39, 6, 1, "", "KeyFileError"], [39, 6, 1, "", "MetadataError"], [39, 2, 1, "", "Mockkeyfile"], [39, 2, 1, "", "NeuronInfo"], [39, 2, 1, "", "NeuronInfoLite"], [39, 6, 1, "", "NominationError"], [39, 6, 1, "", "NotDelegateError"], [39, 6, 1, "", "NotRegisteredError"], [39, 6, 1, "", "NotVerifiedException"], [39, 6, 1, "", "PostProcessException"], [39, 6, 1, "", "PriorityException"], [39, 2, 1, "", "PriorityThreadPoolExecutor"], [39, 2, 1, "", "PrometheusInfo"], [39, 1, 1, "", "ProposalCallData"], [39, 2, 1, "", "ProposalVoteData"], [39, 6, 1, "", "RegistrationError"], [39, 6, 1, "", "RunException"], [39, 6, 1, "", "StakeError"], [39, 2, 1, "", "StakeInfo"], [39, 2, 1, "", "StreamingSynapse"], [39, 2, 1, "", "SubnetHyperparameters"], [39, 2, 1, "", "SubnetInfo"], [39, 2, 1, "", "SubnetsAPI"], [39, 2, 1, "", "Synapse"], [39, 6, 1, "", "SynapseDendriteNoneException"], [39, 6, 1, "", "SynapseParsingError"], [39, 1, 1, "", "T"], [39, 2, 1, "", "Tensor"], [39, 2, 1, "", "TerminalInfo"], [39, 6, 1, "", "TransferError"], [39, 6, 1, "", "UnknownSynapseError"], [39, 6, 1, "", "UnstakeError"], [39, 1, 1, "", "__archive_entrypoint__"], [39, 1, 1, "", "__bellagene_entrypoint__"], [39, 1, 1, "", "__blocktime__"], [39, 1, 1, "", "__console__"], [39, 1, 1, "", "__delegates_details_url__"], [39, 1, 1, "", "__finney_entrypoint__"], [39, 1, 1, "", "__finney_test_entrypoint__"], [39, 1, 1, "", "__local_entrypoint__"], [39, 1, 1, "", "__network_explorer_map__"], [39, 1, 1, "", "__networks__"], [39, 1, 1, "", "__new_signature_version__"], [39, 1, 1, "", "__pipaddress__"], [39, 1, 1, "", "__rao_symbol__"], [39, 1, 1, "", "__ss58_address_length__"], [39, 1, 1, "", "__ss58_format__"], [39, 1, 1, "", "__tao_symbol__"], [39, 1, 1, "", "__type_registry__"], [39, 1, 1, "", "__use_console__"], [39, 1, 1, "", "__version__"], [39, 1, 1, "", "__version_as_int__"], [39, 7, 1, "", "ask_password_to_encrypt"], [39, 2, 1, "", "axon"], [0, 0, 0, "-", "axon"], [4, 0, 0, "-", "btlogging"], [6, 0, 0, "-", "chain_data"], [39, 2, 1, "", "cli"], [7, 0, 0, "-", "cli"], [10, 0, 0, "-", "commands"], [39, 2, 1, "", "config"], [24, 0, 0, "-", "config"], [39, 1, 1, "", "configs"], [39, 7, 1, "", "debug"], [39, 7, 1, "", "decrypt_keyfile_data"], [39, 1, 1, "", "defaults"], [39, 2, 1, "", "dendrite"], [25, 0, 0, "-", "dendrite"], [39, 7, 1, "", "deserialize_keypair_from_keyfile_data"], [39, 7, 1, "", "display_mnemonic_msg"], [39, 7, 1, "", "encrypt_keyfile_data"], [26, 0, 0, "-", "errors"], [28, 0, 0, "-", "extrinsics"], [39, 7, 1, "", "get_coldkey_password_from_environment"], [40, 0, 0, "-", "keyfile"], [39, 7, 1, "", "keyfile_data_encryption_method"], [39, 7, 1, "", "keyfile_data_is_encrypted"], [39, 7, 1, "", "keyfile_data_is_encrypted_ansible"], [39, 7, 1, "", "keyfile_data_is_encrypted_legacy"], [39, 7, 1, "", "keyfile_data_is_encrypted_nacl"], [39, 7, 1, "", "legacy_encrypt_keyfile_data"], [39, 1, 1, "", "logging"], [41, 0, 0, "-", "metagraph"], [39, 7, 1, "", "serialized_keypair_to_keyfile_data"], [42, 0, 0, "-", "stream"], [43, 0, 0, "-", "subnets"], [44, 0, 0, "-", "subtensor"], [45, 0, 0, "-", "synapse"], [46, 0, 0, "-", "tensor"], [47, 0, 0, "-", "threadpool"], [39, 7, 1, "", "trace"], [39, 7, 1, "", "turn_console_off"], [39, 7, 1, "", "turn_console_on"], [48, 0, 0, "-", "types"], [39, 7, 1, "", "validate_password"], [39, 1, 1, "", "version_split"], [49, 0, 0, "-", "wallet"]], "bittensor.AxonInfo": [[39, 3, 1, "", "__eq__"], [39, 3, 1, "", "__repr__"], [39, 3, 1, "", "__str__"], [39, 3, 1, "", "_from_parameter_dict"], [39, 3, 1, "", "_to_parameter_dict"], [39, 4, 1, "", "coldkey"], [39, 3, 1, "", "from_neuron_info"], [39, 3, 1, "", "from_parameter_dict"], [39, 3, 1, "", "from_string"], [39, 4, 1, "", "hotkey"], [39, 4, 1, "", "ip"], [39, 3, 1, "", "ip_str"], [39, 4, 1, "", "ip_type"], [39, 5, 1, "", "is_serving"], [39, 4, 1, "", "placeholder1"], [39, 4, 1, "", "placeholder2"], [39, 4, 1, "", "port"], [39, 4, 1, "", "protocol"], [39, 3, 1, "", "to_parameter_dict"], [39, 3, 1, "", "to_string"], [39, 4, 1, "", "version"]], "bittensor.DefaultConfig": [[39, 3, 1, "", "default"]], "bittensor.DelegateInfo": [[39, 3, 1, "", "delegated_list_from_vec_u8"], [39, 3, 1, "", "fix_decoded_values"], [39, 3, 1, "", "from_vec_u8"], [39, 4, 1, "", "hotkey_ss58"], [39, 3, 1, "", "list_from_vec_u8"], [39, 4, 1, "", "nominators"], [39, 4, 1, "", "owner_ss58"], [39, 4, 1, "", "registrations"], [39, 4, 1, "", "return_per_1000"], [39, 4, 1, "", "take"], [39, 4, 1, "", "total_daily_return"], [39, 4, 1, "", "total_stake"], [39, 4, 1, "", "validator_permits"]], "bittensor.DelegateInfoLite": [[39, 4, 1, "", "delegate_ss58"], [39, 4, 1, "", "nominators"], [39, 4, 1, "", "owner_ss58"], [39, 4, 1, "", "registrations"], [39, 4, 1, "", "return_per_1000"], [39, 4, 1, "", "take"], [39, 4, 1, "", "total_daily_return"], [39, 4, 1, "", "validator_permits"]], "bittensor.IPInfo": [[39, 3, 1, "", "_from_parameter_dict_numpy"], [39, 3, 1, "", "_from_parameter_dict_torch"], [39, 3, 1, "", "_to_parameter_dict"], [39, 3, 1, "", "encode"], [39, 3, 1, "", "fix_decoded_values"], [39, 3, 1, "", "from_parameter_dict"], [39, 3, 1, "", "from_vec_u8"], [39, 4, 1, "", "ip"], [39, 4, 1, "", "ip_type"], [39, 3, 1, "", "list_from_vec_u8"], [39, 4, 1, "", "protocol"], [39, 3, 1, "", "to_parameter_dict"]], "bittensor.Mockkeyfile": [[39, 3, 1, "", "__repr__"], [39, 3, 1, "", "__str__"], [39, 3, 1, "", "check_and_update_encryption"], [39, 5, 1, "", "data"], [39, 3, 1, "", "decrypt"], [39, 3, 1, "", "encrypt"], [39, 3, 1, "", "exists_on_device"], [39, 3, 1, "", "get_keypair"], [39, 3, 1, "", "is_encrypted"], [39, 3, 1, "", "is_readable"], [39, 3, 1, "", "is_writable"], [39, 5, 1, "", "keypair"], [39, 3, 1, "", "make_dirs"], [39, 3, 1, "", "set_keypair"]], "bittensor.NeuronInfo": [[39, 3, 1, "", "_neuron_dict_to_namespace"], [39, 3, 1, "", "_null_neuron"], [39, 4, 1, "", "active"], [39, 4, 1, "", "axon_info"], [39, 4, 1, "", "bonds"], [39, 4, 1, "", "coldkey"], [39, 4, 1, "", "consensus"], [39, 4, 1, "", "dividends"], [39, 4, 1, "", "emission"], [39, 3, 1, "", "fix_decoded_values"], [39, 3, 1, "", "from_vec_u8"], [39, 3, 1, "", "from_weights_bonds_and_neuron_lite"], [39, 4, 1, "", "hotkey"], [39, 4, 1, "", "incentive"], [39, 4, 1, "", "is_null"], [39, 4, 1, "", "last_update"], [39, 3, 1, "", "list_from_vec_u8"], [39, 4, 1, "", "netuid"], [39, 4, 1, "", "prometheus_info"], [39, 4, 1, "", "pruning_score"], [39, 4, 1, "", "rank"], [39, 4, 1, "", "stake"], [39, 4, 1, "", "stake_dict"], [39, 4, 1, "", "total_stake"], [39, 4, 1, "", "trust"], [39, 4, 1, "", "uid"], [39, 4, 1, "", "validator_permit"], [39, 4, 1, "", "validator_trust"], [39, 4, 1, "", "weights"]], "bittensor.NeuronInfoLite": [[39, 3, 1, "", "_neuron_dict_to_namespace"], [39, 3, 1, "", "_null_neuron"], [39, 4, 1, "", "active"], [39, 4, 1, "", "axon_info"], [39, 4, 1, "", "coldkey"], [39, 4, 1, "", "consensus"], [39, 4, 1, "", "dividends"], [39, 4, 1, "", "emission"], [39, 3, 1, "", "fix_decoded_values"], [39, 3, 1, "", "from_vec_u8"], [39, 4, 1, "", "hotkey"], [39, 4, 1, "", "incentive"], [39, 4, 1, "", "is_null"], [39, 4, 1, "", "last_update"], [39, 3, 1, "", "list_from_vec_u8"], [39, 4, 1, "", "netuid"], [39, 4, 1, "", "prometheus_info"], [39, 4, 1, "", "pruning_score"], [39, 4, 1, "", "rank"], [39, 4, 1, "", "stake"], [39, 4, 1, "", "stake_dict"], [39, 4, 1, "", "total_stake"], [39, 4, 1, "", "trust"], [39, 4, 1, "", "uid"], [39, 4, 1, "", "validator_permit"], [39, 4, 1, "", "validator_trust"]], "bittensor.PriorityThreadPoolExecutor": [[39, 3, 1, "", "_adjust_thread_count"], [39, 4, 1, "", "_counter"], [39, 3, 1, "", "_initializer_failed"], [39, 3, 1, "", "add_args"], [39, 3, 1, "", "config"], [39, 5, 1, "", "is_empty"], [39, 3, 1, "", "shutdown"], [39, 3, 1, "", "submit"]], "bittensor.PrometheusInfo": [[39, 4, 1, "", "block"], [39, 3, 1, "", "fix_decoded_values"], [39, 4, 1, "", "ip"], [39, 4, 1, "", "ip_type"], [39, 4, 1, "", "port"], [39, 4, 1, "", "version"]], "bittensor.ProposalVoteData": [[39, 4, 1, "", "ayes"], [39, 4, 1, "", "end"], [39, 4, 1, "", "index"], [39, 4, 1, "", "nays"], [39, 4, 1, "", "threshold"]], "bittensor.StakeInfo": [[39, 4, 1, "", "coldkey_ss58"], [39, 3, 1, "", "fix_decoded_values"], [39, 3, 1, "", "from_vec_u8"], [39, 4, 1, "", "hotkey_ss58"], [39, 3, 1, "", "list_from_vec_u8"], [39, 3, 1, "", "list_of_tuple_from_vec_u8"], [39, 4, 1, "", "stake"]], "bittensor.StreamingSynapse": [[39, 2, 1, "", "BTStreamingResponse"], [39, 3, 1, "", "create_streaming_response"], [39, 3, 1, "", "extract_response_json"], [39, 4, 1, "", "model_config"], [39, 3, 1, "", "process_streaming_response"]], "bittensor.StreamingSynapse.BTStreamingResponse": [[39, 3, 1, "", "__call__"], [39, 3, 1, "", "stream_response"]], "bittensor.SubnetHyperparameters": [[39, 3, 1, "", "_from_parameter_dict_numpy"], [39, 3, 1, "", "_from_parameter_dict_torch"], [39, 3, 1, "", "_to_parameter_dict_torch"], [39, 4, 1, "", "activity_cutoff"], [39, 4, 1, "", "adjustment_alpha"], [39, 4, 1, "", "adjustment_interval"], [39, 4, 1, "", "bonds_moving_avg"], [39, 4, 1, "", "difficulty"], [39, 3, 1, "", "fix_decoded_values"], [39, 3, 1, "", "from_parameter_dict"], [39, 3, 1, "", "from_vec_u8"], [39, 4, 1, "", "immunity_period"], [39, 4, 1, "", "kappa"], [39, 3, 1, "", "list_from_vec_u8"], [39, 4, 1, "", "max_burn"], [39, 4, 1, "", "max_difficulty"], [39, 4, 1, "", "max_regs_per_block"], [39, 4, 1, "", "max_validators"], [39, 4, 1, "", "max_weight_limit"], [39, 4, 1, "", "min_allowed_weights"], [39, 4, 1, "", "min_burn"], [39, 4, 1, "", "min_difficulty"], [39, 4, 1, "", "registration_allowed"], [39, 4, 1, "", "rho"], [39, 4, 1, "", "serving_rate_limit"], [39, 4, 1, "", "target_regs_per_interval"], [39, 4, 1, "", "tempo"], [39, 3, 1, "", "to_parameter_dict"], [39, 4, 1, "", "weights_rate_limit"], [39, 4, 1, "", "weights_version"]], "bittensor.SubnetInfo": [[39, 3, 1, "", "_from_parameter_dict_numpy"], [39, 3, 1, "", "_from_parameter_dict_torch"], [39, 3, 1, "", "_to_parameter_dict"], [39, 4, 1, "", "blocks_since_epoch"], [39, 4, 1, "", "burn"], [39, 4, 1, "", "connection_requirements"], [39, 4, 1, "", "difficulty"], [39, 4, 1, "", "emission_value"], [39, 3, 1, "", "fix_decoded_values"], [39, 3, 1, "", "from_parameter_dict"], [39, 3, 1, "", "from_vec_u8"], [39, 4, 1, "", "immunity_period"], [39, 4, 1, "", "kappa"], [39, 3, 1, "", "list_from_vec_u8"], [39, 4, 1, "", "max_allowed_validators"], [39, 4, 1, "", "max_n"], [39, 4, 1, "", "max_weight_limit"], [39, 4, 1, "", "min_allowed_weights"], [39, 4, 1, "", "modality"], [39, 4, 1, "", "netuid"], [39, 4, 1, "", "owner_ss58"], [39, 4, 1, "", "rho"], [39, 4, 1, "", "scaling_law_power"], [39, 4, 1, "", "subnetwork_n"], [39, 4, 1, "", "tempo"], [39, 3, 1, "", "to_parameter_dict"]], "bittensor.SubnetsAPI": [[39, 3, 1, "", "__call__"], [39, 3, 1, "", "prepare_synapse"], [39, 3, 1, "", "process_responses"], [39, 3, 1, "", "query_api"]], "bittensor.Synapse": [[39, 3, 1, "id7", "__setattr__"], [39, 4, 1, "", "_extract_header_size"], [39, 4, 1, "", "_extract_timeout"], [39, 4, 1, "", "_extract_total_size"], [39, 4, 1, "", "axon"], [39, 5, 1, "id0", "body_hash"], [39, 4, 1, "", "computed_body_hash"], [39, 4, 1, "", "dendrite"], [39, 3, 1, "id8", "deserialize"], [39, 5, 1, "", "failed_verification"], [39, 3, 1, "id9", "from_headers"], [39, 3, 1, "", "get_required_fields"], [39, 3, 1, "id10", "get_total_size"], [39, 4, 1, "", "header_size"], [39, 5, 1, "", "is_blacklist"], [39, 5, 1, "", "is_failure"], [39, 5, 1, "", "is_success"], [39, 5, 1, "", "is_timeout"], [39, 4, 1, "", "model_config"], [39, 4, 1, "", "name"], [39, 3, 1, "id11", "parse_headers_to_inputs"], [39, 4, 1, "", "required_hash_fields"], [39, 3, 1, "", "set_name_type"], [39, 4, 1, "", "timeout"], [39, 3, 1, "id12", "to_headers"], [39, 4, 1, "", "total_size"]], "bittensor.Tensor": [[39, 4, 1, "", "_extract_dtype"], [39, 4, 1, "", "_extract_shape"], [39, 4, 1, "", "buffer"], [39, 3, 1, "", "deserialize"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "model_config"], [39, 3, 1, "", "numpy"], [39, 3, 1, "", "serialize"], [39, 4, 1, "", "shape"], [39, 3, 1, "", "tensor"], [39, 3, 1, "", "tolist"]], "bittensor.TerminalInfo": [[39, 4, 1, "", "_extract_nonce"], [39, 4, 1, "", "_extract_port"], [39, 4, 1, "", "_extract_process_time"], [39, 4, 1, "", "_extract_status_code"], [39, 4, 1, "", "_extract_version"], [39, 4, 1, "", "hotkey"], [39, 4, 1, "", "ip"], [39, 4, 1, "", "model_config"], [39, 4, 1, "", "nonce"], [39, 4, 1, "", "port"], [39, 4, 1, "", "process_time"], [39, 4, 1, "", "signature"], [39, 4, 1, "", "status_code"], [39, 4, 1, "", "status_message"], [39, 4, 1, "", "uuid"], [39, 4, 1, "", "version"]], "bittensor.axon": [[0, 2, 1, "", "AxonMiddleware"], [0, 2, 1, "", "FastAPIThreadedServer"], [39, 3, 1, "", "__del__"], [39, 3, 1, "", "__repr__"], [39, 3, 1, "", "__str__"], [39, 3, 1, "", "add_args"], [39, 3, 1, "", "attach"], [0, 2, 1, "", "axon"], [39, 3, 1, "", "check_config"], [39, 3, 1, "", "config"], [0, 7, 1, "", "create_error_response"], [39, 3, 1, "", "default_verify"], [39, 3, 1, "", "help"], [39, 3, 1, "", "info"], [0, 7, 1, "", "log_and_handle_error"], [39, 3, 1, "", "serve"], [39, 3, 1, "", "start"], [39, 3, 1, "", "stop"], [39, 3, 1, "", "to_string"], [39, 3, 1, "", "verify_body_integrity"]], "bittensor.axon.AxonMiddleware": [[0, 3, 1, "", "blacklist"], [0, 3, 1, "", "dispatch"], [0, 3, 1, "", "preprocess"], [0, 3, 1, "", "priority"], [0, 3, 1, "", "run"], [0, 3, 1, "", "synapse_to_response"], [0, 3, 1, "", "verify"]], "bittensor.axon.FastAPIThreadedServer": [[0, 3, 1, "", "_wrapper_run"], [0, 3, 1, "", "install_signal_handlers"], [0, 4, 1, "", "is_running"], [0, 3, 1, "", "run_in_thread"], [0, 4, 1, "", "should_exit"], [0, 3, 1, "", "start"], [0, 3, 1, "", "stop"]], "bittensor.axon.axon": [[0, 3, 1, "", "__del__"], [0, 3, 1, "", "__repr__"], [0, 3, 1, "", "__str__"], [0, 3, 1, "", "add_args"], [0, 3, 1, "", "attach"], [0, 3, 1, "", "check_config"], [0, 3, 1, "", "config"], [0, 3, 1, "", "default_verify"], [0, 3, 1, "", "help"], [0, 3, 1, "", "info"], [0, 3, 1, "", "serve"], [0, 3, 1, "", "start"], [0, 3, 1, "", "stop"], [0, 3, 1, "", "to_string"], [0, 3, 1, "", "verify_body_integrity"]], "bittensor.btlogging": [[4, 2, 1, "", "LoggingMachine"], [1, 0, 0, "-", "defines"], [2, 0, 0, "-", "format"], [3, 0, 0, "-", "helpers"], [4, 1, 1, "", "logging"], [5, 0, 0, "-", "loggingmachine"]], "bittensor.btlogging.LoggingMachine": [[4, 4, 1, "", "Debug"], [4, 4, 1, "", "Default"], [4, 4, 1, "", "Disabled"], [4, 4, 1, "", "Trace"], [4, 3, 1, "", "__call__"], [4, 5, 1, "", "__trace_on__"], [4, 3, 1, "", "_configure_handlers"], [4, 3, 1, "", "_create_and_start_listener"], [4, 3, 1, "", "_create_file_handler"], [4, 3, 1, "", "_deinitialize_bt_logger"], [4, 3, 1, "", "_enable_file_logging"], [4, 3, 1, "", "_initialize_bt_logger"], [4, 3, 1, "", "add_args"], [4, 3, 1, "", "after_disable_debug"], [4, 3, 1, "", "after_disable_trace"], [4, 3, 1, "", "after_enable_debug"], [4, 3, 1, "", "after_enable_default"], [4, 3, 1, "", "after_enable_trace"], [4, 3, 1, "", "after_transition"], [4, 3, 1, "", "before_disable_debug"], [4, 3, 1, "", "before_disable_logging"], [4, 3, 1, "", "before_disable_trace"], [4, 3, 1, "", "before_enable_debug"], [4, 3, 1, "", "before_enable_default"], [4, 3, 1, "", "before_enable_trace"], [4, 3, 1, "", "before_transition"], [4, 3, 1, "", "check_config"], [4, 3, 1, "", "config"], [4, 3, 1, "", "critical"], [4, 3, 1, "", "debug"], [4, 3, 1, "", "deregister_primary_logger"], [4, 4, 1, "", "disable_debug"], [4, 4, 1, "", "disable_logging"], [4, 3, 1, "", "disable_third_party_loggers"], [4, 4, 1, "", "disable_trace"], [4, 4, 1, "", "enable_debug"], [4, 4, 1, "", "enable_default"], [4, 3, 1, "", "enable_third_party_loggers"], [4, 4, 1, "", "enable_trace"], [4, 3, 1, "", "error"], [4, 3, 1, "", "exception"], [4, 3, 1, "", "get_config"], [4, 3, 1, "", "get_level"], [4, 3, 1, "", "get_queue"], [4, 3, 1, "", "help"], [4, 3, 1, "", "info"], [4, 3, 1, "", "off"], [4, 3, 1, "", "on"], [4, 3, 1, "", "register_primary_logger"], [4, 3, 1, "", "set_config"], [4, 3, 1, "", "set_debug"], [4, 3, 1, "", "set_trace"], [4, 3, 1, "", "success"], [4, 3, 1, "", "trace"], [4, 3, 1, "", "warning"]], "bittensor.btlogging.defines": [[1, 1, 1, "", "BASE_LOG_FORMAT"], [1, 1, 1, "", "BITTENSOR_LOGGER_NAME"], [1, 1, 1, "", "DATE_FORMAT"], [1, 1, 1, "", "DEFAULT_LOG_BACKUP_COUNT"], [1, 1, 1, "", "DEFAULT_LOG_FILE_NAME"], [1, 1, 1, "", "DEFAULT_MAX_ROTATING_LOG_FILE_SIZE"], [1, 1, 1, "", "TRACE_LOG_FORMAT"]], "bittensor.btlogging.format": [[2, 2, 1, "", "BtFileFormatter"], [2, 2, 1, "", "BtStreamFormatter"], [2, 1, 1, "", "DEFAULT_LOG_FORMAT"], [2, 1, 1, "", "DEFAULT_TRACE_FORMAT"], [2, 1, 1, "", "LOG_FORMATS"], [2, 1, 1, "", "LOG_TRACE_FORMATS"], [2, 1, 1, "", "SUCCESS_LEVEL_NUM"], [2, 1, 1, "", "TRACE_LEVEL_NUM"], [2, 7, 1, "", "_success"], [2, 7, 1, "", "_trace"], [2, 1, 1, "", "color_map"], [2, 1, 1, "", "emoji_map"], [2, 1, 1, "", "log_level_color_prefix"]], "bittensor.btlogging.format.BtFileFormatter": [[2, 3, 1, "", "format"], [2, 3, 1, "", "formatTime"]], "bittensor.btlogging.format.BtStreamFormatter": [[2, 3, 1, "", "format"], [2, 3, 1, "", "formatTime"], [2, 3, 1, "", "set_trace"]], "bittensor.btlogging.helpers": [[3, 7, 1, "", "all_logger_names"], [3, 7, 1, "", "all_loggers"], [3, 7, 1, "", "get_max_logger_name_length"]], "bittensor.btlogging.loggingmachine": [[5, 2, 1, "", "LoggingConfig"], [5, 2, 1, "", "LoggingMachine"]], "bittensor.btlogging.loggingmachine.LoggingConfig": [[5, 4, 1, "", "debug"], [5, 4, 1, "", "logging_dir"], [5, 4, 1, "", "record_log"], [5, 4, 1, "", "trace"]], "bittensor.btlogging.loggingmachine.LoggingMachine": [[5, 4, 1, "", "Debug"], [5, 4, 1, "", "Default"], [5, 4, 1, "", "Disabled"], [5, 4, 1, "", "Trace"], [5, 3, 1, "", "__call__"], [5, 5, 1, "", "__trace_on__"], [5, 3, 1, "", "_configure_handlers"], [5, 3, 1, "", "_create_and_start_listener"], [5, 3, 1, "", "_create_file_handler"], [5, 3, 1, "", "_deinitialize_bt_logger"], [5, 3, 1, "", "_enable_file_logging"], [5, 3, 1, "", "_initialize_bt_logger"], [5, 3, 1, "", "add_args"], [5, 3, 1, "", "after_disable_debug"], [5, 3, 1, "", "after_disable_trace"], [5, 3, 1, "", "after_enable_debug"], [5, 3, 1, "", "after_enable_default"], [5, 3, 1, "", "after_enable_trace"], [5, 3, 1, "", "after_transition"], [5, 3, 1, "", "before_disable_debug"], [5, 3, 1, "", "before_disable_logging"], [5, 3, 1, "", "before_disable_trace"], [5, 3, 1, "", "before_enable_debug"], [5, 3, 1, "", "before_enable_default"], [5, 3, 1, "", "before_enable_trace"], [5, 3, 1, "", "before_transition"], [5, 3, 1, "", "check_config"], [5, 3, 1, "", "config"], [5, 3, 1, "", "critical"], [5, 3, 1, "", "debug"], [5, 3, 1, "", "deregister_primary_logger"], [5, 4, 1, "", "disable_debug"], [5, 4, 1, "", "disable_logging"], [5, 3, 1, "", "disable_third_party_loggers"], [5, 4, 1, "", "disable_trace"], [5, 4, 1, "", "enable_debug"], [5, 4, 1, "", "enable_default"], [5, 3, 1, "", "enable_third_party_loggers"], [5, 4, 1, "", "enable_trace"], [5, 3, 1, "", "error"], [5, 3, 1, "", "exception"], [5, 3, 1, "", "get_config"], [5, 3, 1, "", "get_level"], [5, 3, 1, "", "get_queue"], [5, 3, 1, "", "help"], [5, 3, 1, "", "info"], [5, 3, 1, "", "off"], [5, 3, 1, "", "on"], [5, 3, 1, "", "register_primary_logger"], [5, 3, 1, "", "set_config"], [5, 3, 1, "", "set_debug"], [5, 3, 1, "", "set_trace"], [5, 3, 1, "", "success"], [5, 3, 1, "", "trace"], [5, 3, 1, "", "warning"]], "bittensor.chain_data": [[6, 2, 1, "", "AxonInfo"], [6, 2, 1, "", "ChainDataType"], [6, 2, 1, "", "DelegateInfo"], [6, 2, 1, "", "DelegateInfoLite"], [6, 2, 1, "", "IPInfo"], [6, 2, 1, "", "NeuronInfo"], [6, 2, 1, "", "NeuronInfoLite"], [6, 2, 1, "", "PrometheusInfo"], [6, 1, 1, "", "ProposalCallData"], [6, 2, 1, "", "ProposalVoteData"], [6, 1, 1, "", "RAOPERTAO"], [6, 2, 1, "", "StakeInfo"], [6, 2, 1, "", "SubnetHyperparameters"], [6, 2, 1, "", "SubnetInfo"], [6, 1, 1, "", "U16_MAX"], [6, 1, 1, "", "U64_MAX"], [6, 1, 1, "", "custom_rpc_type_registry"], [6, 7, 1, "", "from_scale_encoding"], [6, 7, 1, "", "from_scale_encoding_using_type_string"]], "bittensor.chain_data.AxonInfo": [[6, 3, 1, "", "__eq__"], [6, 3, 1, "", "__repr__"], [6, 3, 1, "", "__str__"], [6, 3, 1, "", "_from_parameter_dict"], [6, 3, 1, "", "_to_parameter_dict"], [6, 4, 1, "", "coldkey"], [6, 3, 1, "", "from_neuron_info"], [6, 3, 1, "", "from_parameter_dict"], [6, 3, 1, "", "from_string"], [6, 4, 1, "", "hotkey"], [6, 4, 1, "", "ip"], [6, 3, 1, "", "ip_str"], [6, 4, 1, "", "ip_type"], [6, 5, 1, "", "is_serving"], [6, 4, 1, "", "placeholder1"], [6, 4, 1, "", "placeholder2"], [6, 4, 1, "", "port"], [6, 4, 1, "", "protocol"], [6, 3, 1, "", "to_parameter_dict"], [6, 3, 1, "", "to_string"], [6, 4, 1, "", "version"]], "bittensor.chain_data.ChainDataType": [[6, 4, 1, "", "DelegateInfo"], [6, 4, 1, "", "DelegatedInfo"], [6, 4, 1, "", "IPInfo"], [6, 4, 1, "", "NeuronInfo"], [6, 4, 1, "", "NeuronInfoLite"], [6, 4, 1, "", "StakeInfo"], [6, 4, 1, "", "SubnetHyperparameters"], [6, 4, 1, "", "SubnetInfo"]], "bittensor.chain_data.DelegateInfo": [[6, 3, 1, "", "delegated_list_from_vec_u8"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_vec_u8"], [6, 4, 1, "", "hotkey_ss58"], [6, 3, 1, "", "list_from_vec_u8"], [6, 4, 1, "", "nominators"], [6, 4, 1, "", "owner_ss58"], [6, 4, 1, "", "registrations"], [6, 4, 1, "", "return_per_1000"], [6, 4, 1, "", "take"], [6, 4, 1, "", "total_daily_return"], [6, 4, 1, "", "total_stake"], [6, 4, 1, "", "validator_permits"]], "bittensor.chain_data.DelegateInfoLite": [[6, 4, 1, "", "delegate_ss58"], [6, 4, 1, "", "nominators"], [6, 4, 1, "", "owner_ss58"], [6, 4, 1, "", "registrations"], [6, 4, 1, "", "return_per_1000"], [6, 4, 1, "", "take"], [6, 4, 1, "", "total_daily_return"], [6, 4, 1, "", "validator_permits"]], "bittensor.chain_data.IPInfo": [[6, 3, 1, "", "_from_parameter_dict_numpy"], [6, 3, 1, "", "_from_parameter_dict_torch"], [6, 3, 1, "", "_to_parameter_dict"], [6, 3, 1, "", "encode"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_parameter_dict"], [6, 3, 1, "", "from_vec_u8"], [6, 4, 1, "", "ip"], [6, 4, 1, "", "ip_type"], [6, 3, 1, "", "list_from_vec_u8"], [6, 4, 1, "", "protocol"], [6, 3, 1, "", "to_parameter_dict"]], "bittensor.chain_data.NeuronInfo": [[6, 3, 1, "", "_neuron_dict_to_namespace"], [6, 3, 1, "", "_null_neuron"], [6, 4, 1, "", "active"], [6, 4, 1, "", "axon_info"], [6, 4, 1, "", "bonds"], [6, 4, 1, "", "coldkey"], [6, 4, 1, "", "consensus"], [6, 4, 1, "", "dividends"], [6, 4, 1, "", "emission"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_vec_u8"], [6, 3, 1, "", "from_weights_bonds_and_neuron_lite"], [6, 4, 1, "", "hotkey"], [6, 4, 1, "", "incentive"], [6, 4, 1, "", "is_null"], [6, 4, 1, "", "last_update"], [6, 3, 1, "", "list_from_vec_u8"], [6, 4, 1, "", "netuid"], [6, 4, 1, "", "prometheus_info"], [6, 4, 1, "", "pruning_score"], [6, 4, 1, "", "rank"], [6, 4, 1, "", "stake"], [6, 4, 1, "", "stake_dict"], [6, 4, 1, "", "total_stake"], [6, 4, 1, "", "trust"], [6, 4, 1, "", "uid"], [6, 4, 1, "", "validator_permit"], [6, 4, 1, "", "validator_trust"], [6, 4, 1, "", "weights"]], "bittensor.chain_data.NeuronInfoLite": [[6, 3, 1, "", "_neuron_dict_to_namespace"], [6, 3, 1, "", "_null_neuron"], [6, 4, 1, "", "active"], [6, 4, 1, "", "axon_info"], [6, 4, 1, "", "coldkey"], [6, 4, 1, "", "consensus"], [6, 4, 1, "", "dividends"], [6, 4, 1, "", "emission"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_vec_u8"], [6, 4, 1, "", "hotkey"], [6, 4, 1, "", "incentive"], [6, 4, 1, "", "is_null"], [6, 4, 1, "", "last_update"], [6, 3, 1, "", "list_from_vec_u8"], [6, 4, 1, "", "netuid"], [6, 4, 1, "", "prometheus_info"], [6, 4, 1, "", "pruning_score"], [6, 4, 1, "", "rank"], [6, 4, 1, "", "stake"], [6, 4, 1, "", "stake_dict"], [6, 4, 1, "", "total_stake"], [6, 4, 1, "", "trust"], [6, 4, 1, "", "uid"], [6, 4, 1, "", "validator_permit"], [6, 4, 1, "", "validator_trust"]], "bittensor.chain_data.PrometheusInfo": [[6, 4, 1, "", "block"], [6, 3, 1, "", "fix_decoded_values"], [6, 4, 1, "", "ip"], [6, 4, 1, "", "ip_type"], [6, 4, 1, "", "port"], [6, 4, 1, "", "version"]], "bittensor.chain_data.ProposalVoteData": [[6, 4, 1, "", "ayes"], [6, 4, 1, "", "end"], [6, 4, 1, "", "index"], [6, 4, 1, "", "nays"], [6, 4, 1, "", "threshold"]], "bittensor.chain_data.StakeInfo": [[6, 4, 1, "", "coldkey_ss58"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_vec_u8"], [6, 4, 1, "", "hotkey_ss58"], [6, 3, 1, "", "list_from_vec_u8"], [6, 3, 1, "", "list_of_tuple_from_vec_u8"], [6, 4, 1, "", "stake"]], "bittensor.chain_data.SubnetHyperparameters": [[6, 3, 1, "", "_from_parameter_dict_numpy"], [6, 3, 1, "", "_from_parameter_dict_torch"], [6, 3, 1, "", "_to_parameter_dict_torch"], [6, 4, 1, "", "activity_cutoff"], [6, 4, 1, "", "adjustment_alpha"], [6, 4, 1, "", "adjustment_interval"], [6, 4, 1, "", "bonds_moving_avg"], [6, 4, 1, "", "difficulty"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_parameter_dict"], [6, 3, 1, "", "from_vec_u8"], [6, 4, 1, "", "immunity_period"], [6, 4, 1, "", "kappa"], [6, 3, 1, "", "list_from_vec_u8"], [6, 4, 1, "", "max_burn"], [6, 4, 1, "", "max_difficulty"], [6, 4, 1, "", "max_regs_per_block"], [6, 4, 1, "", "max_validators"], [6, 4, 1, "", "max_weight_limit"], [6, 4, 1, "", "min_allowed_weights"], [6, 4, 1, "", "min_burn"], [6, 4, 1, "", "min_difficulty"], [6, 4, 1, "", "registration_allowed"], [6, 4, 1, "", "rho"], [6, 4, 1, "", "serving_rate_limit"], [6, 4, 1, "", "target_regs_per_interval"], [6, 4, 1, "", "tempo"], [6, 3, 1, "", "to_parameter_dict"], [6, 4, 1, "", "weights_rate_limit"], [6, 4, 1, "", "weights_version"]], "bittensor.chain_data.SubnetInfo": [[6, 3, 1, "", "_from_parameter_dict_numpy"], [6, 3, 1, "", "_from_parameter_dict_torch"], [6, 3, 1, "", "_to_parameter_dict"], [6, 4, 1, "", "blocks_since_epoch"], [6, 4, 1, "", "burn"], [6, 4, 1, "", "connection_requirements"], [6, 4, 1, "", "difficulty"], [6, 4, 1, "", "emission_value"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_parameter_dict"], [6, 3, 1, "", "from_vec_u8"], [6, 4, 1, "", "immunity_period"], [6, 4, 1, "", "kappa"], [6, 3, 1, "", "list_from_vec_u8"], [6, 4, 1, "", "max_allowed_validators"], [6, 4, 1, "", "max_n"], [6, 4, 1, "", "max_weight_limit"], [6, 4, 1, "", "min_allowed_weights"], [6, 4, 1, "", "modality"], [6, 4, 1, "", "netuid"], [6, 4, 1, "", "owner_ss58"], [6, 4, 1, "", "rho"], [6, 4, 1, "", "scaling_law_power"], [6, 4, 1, "", "subnetwork_n"], [6, 4, 1, "", "tempo"], [6, 3, 1, "", "to_parameter_dict"]], "bittensor.cli": [[7, 1, 1, "", "ALIAS_TO_COMMAND"], [7, 2, 1, "", "CLIErrorParser"], [7, 1, 1, "", "COMMANDS"], [39, 3, 1, "", "__create_parser__"], [39, 3, 1, "", "check_config"], [7, 2, 1, "", "cli"], [7, 1, 1, "", "console"], [39, 3, 1, "", "create_config"], [39, 3, 1, "", "run"]], "bittensor.cli.CLIErrorParser": [[7, 3, 1, "", "error"]], "bittensor.cli.cli": [[7, 3, 1, "", "__create_parser__"], [7, 3, 1, "", "check_config"], [7, 3, 1, "", "create_config"], [7, 3, 1, "", "run"]], "bittensor.commands": [[10, 2, 1, "", "AutocompleteCommand"], [10, 2, 1, "", "DelegateStakeCommand"], [10, 2, 1, "", "DelegateUnstakeCommand"], [10, 2, 1, "", "GetIdentityCommand"], [10, 2, 1, "", "GetWalletHistoryCommand"], [10, 2, 1, "", "InspectCommand"], [10, 2, 1, "", "ListCommand"], [10, 2, 1, "", "ListDelegatesCommand"], [10, 2, 1, "", "ListDelegatesLiteCommand"], [10, 2, 1, "", "MetagraphCommand"], [10, 2, 1, "", "MyDelegatesCommand"], [10, 2, 1, "", "NewColdkeyCommand"], [10, 2, 1, "", "NewHotkeyCommand"], [10, 2, 1, "", "NominateCommand"], [10, 2, 1, "", "OverviewCommand"], [10, 2, 1, "", "PowRegisterCommand"], [10, 2, 1, "", "ProposalsCommand"], [10, 2, 1, "", "RegenColdkeyCommand"], [10, 2, 1, "", "RegenColdkeypubCommand"], [10, 2, 1, "", "RegenHotkeyCommand"], [10, 2, 1, "", "RegisterCommand"], [10, 2, 1, "", "RootGetWeightsCommand"], [10, 2, 1, "", "RootList"], [10, 2, 1, "", "RootRegisterCommand"], [10, 2, 1, "", "RootSetBoostCommand"], [10, 2, 1, "", "RootSetSlashCommand"], [10, 2, 1, "", "RootSetWeightsCommand"], [10, 2, 1, "", "RunFaucetCommand"], [10, 2, 1, "", "SenateCommand"], [10, 2, 1, "", "SenateLeaveCommand"], [10, 2, 1, "", "SenateRegisterCommand"], [10, 2, 1, "", "SetIdentityCommand"], [10, 2, 1, "", "SetTakeCommand"], [10, 2, 1, "", "ShowVotesCommand"], [10, 2, 1, "", "StakeCommand"], [10, 2, 1, "", "StakeShow"], [10, 2, 1, "", "SwapHotkeyCommand"], [10, 2, 1, "", "TransferCommand"], [10, 2, 1, "", "UnStakeCommand"], [10, 2, 1, "", "UpdateCommand"], [10, 2, 1, "", "UpdateWalletCommand"], [10, 2, 1, "", "VoteCommand"], [10, 2, 1, "", "WalletBalanceCommand"], [10, 2, 1, "", "WalletCreateCommand"], [10, 1, 1, "", "defaults"], [8, 0, 0, "-", "delegates"], [9, 0, 0, "-", "identity"], [11, 0, 0, "-", "inspect"], [12, 0, 0, "-", "list"], [13, 0, 0, "-", "metagraph"], [14, 0, 0, "-", "misc"], [15, 0, 0, "-", "network"], [16, 0, 0, "-", "overview"], [17, 0, 0, "-", "register"], [18, 0, 0, "-", "root"], [19, 0, 0, "-", "senate"], [20, 0, 0, "-", "stake"], [21, 0, 0, "-", "transfer"], [22, 0, 0, "-", "unstake"], [23, 0, 0, "-", "wallets"]], "bittensor.commands.AutocompleteCommand": [[10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.DelegateStakeCommand": [[10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.DelegateUnstakeCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.GetIdentityCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.GetWalletHistoryCommand": [[10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.InspectCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.ListCommand": [[10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.ListDelegatesCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.ListDelegatesLiteCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.MetagraphCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.MyDelegatesCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.NewColdkeyCommand": [[10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.NewHotkeyCommand": [[10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.NominateCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.OverviewCommand": [[10, 3, 1, "", "_get_de_registered_stake_for_coldkey_wallet"], [10, 3, 1, "", "_get_hotkeys"], [10, 3, 1, "", "_get_key_address"], [10, 3, 1, "", "_get_neurons_for_netuid"], [10, 3, 1, "", "_get_total_balance"], [10, 3, 1, "", "_process_neuron_results"], [10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.PowRegisterCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.ProposalsCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.RegenColdkeyCommand": [[10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.RegenColdkeypubCommand": [[10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.RegenHotkeyCommand": [[10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.RegisterCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.RootGetWeightsCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.RootList": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.RootRegisterCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.RootSetBoostCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.RootSetSlashCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.RootSetWeightsCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.RunFaucetCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.SenateCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.SenateLeaveCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.SenateRegisterCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.SetIdentityCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.SetTakeCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.ShowVotesCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.StakeCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.StakeShow": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.SwapHotkeyCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.TransferCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.UnStakeCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.UpdateCommand": [[10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.UpdateWalletCommand": [[10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.VoteCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.WalletBalanceCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.WalletCreateCommand": [[10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.delegates": [[8, 2, 1, "", "DelegateStakeCommand"], [8, 2, 1, "", "DelegateUnstakeCommand"], [8, 2, 1, "", "ListDelegatesCommand"], [8, 2, 1, "", "ListDelegatesLiteCommand"], [8, 2, 1, "", "MyDelegatesCommand"], [8, 2, 1, "", "NominateCommand"], [8, 2, 1, "", "SetTakeCommand"], [8, 7, 1, "", "_get_coldkey_wallets_for_path"], [8, 1, 1, "", "console"], [8, 7, 1, "", "show_delegates"], [8, 7, 1, "", "show_delegates_lite"]], "bittensor.commands.delegates.DelegateStakeCommand": [[8, 3, 1, "", "add_args"], [8, 3, 1, "", "check_config"], [8, 3, 1, "", "run"]], "bittensor.commands.delegates.DelegateUnstakeCommand": [[8, 3, 1, "", "_run"], [8, 3, 1, "", "add_args"], [8, 3, 1, "", "check_config"], [8, 3, 1, "", "run"]], "bittensor.commands.delegates.ListDelegatesCommand": [[8, 3, 1, "", "_run"], [8, 3, 1, "", "add_args"], [8, 3, 1, "", "check_config"], [8, 3, 1, "", "run"]], "bittensor.commands.delegates.ListDelegatesLiteCommand": [[8, 3, 1, "", "_run"], [8, 3, 1, "", "add_args"], [8, 3, 1, "", "check_config"], [8, 3, 1, "", "run"]], "bittensor.commands.delegates.MyDelegatesCommand": [[8, 3, 1, "", "_run"], [8, 3, 1, "", "add_args"], [8, 3, 1, "", "check_config"], [8, 3, 1, "", "run"]], "bittensor.commands.delegates.NominateCommand": [[8, 3, 1, "", "_run"], [8, 3, 1, "", "add_args"], [8, 3, 1, "", "check_config"], [8, 3, 1, "", "run"]], "bittensor.commands.delegates.SetTakeCommand": [[8, 3, 1, "", "_run"], [8, 3, 1, "", "add_args"], [8, 3, 1, "", "check_config"], [8, 3, 1, "", "run"]], "bittensor.commands.identity": [[9, 2, 1, "", "GetIdentityCommand"], [9, 2, 1, "", "SetIdentityCommand"]], "bittensor.commands.identity.GetIdentityCommand": [[9, 3, 1, "", "_run"], [9, 3, 1, "", "add_args"], [9, 3, 1, "", "check_config"], [9, 3, 1, "", "run"]], "bittensor.commands.identity.SetIdentityCommand": [[9, 3, 1, "", "_run"], [9, 3, 1, "", "add_args"], [9, 3, 1, "", "check_config"], [9, 3, 1, "", "run"]], "bittensor.commands.inspect": [[11, 2, 1, "", "InspectCommand"], [11, 7, 1, "", "_get_coldkey_wallets_for_path"], [11, 7, 1, "", "_get_hotkey_wallets_for_wallet"], [11, 1, 1, "", "console"]], "bittensor.commands.inspect.InspectCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.list": [[12, 2, 1, "", "ListCommand"], [12, 1, 1, "", "console"]], "bittensor.commands.list.ListCommand": [[12, 3, 1, "", "add_args"], [12, 3, 1, "", "check_config"], [12, 3, 1, "", "run"]], "bittensor.commands.metagraph": [[13, 2, 1, "", "MetagraphCommand"], [13, 1, 1, "", "console"]], "bittensor.commands.metagraph.MetagraphCommand": [[13, 3, 1, "", "_run"], [13, 3, 1, "", "add_args"], [13, 3, 1, "", "check_config"], [13, 3, 1, "", "run"]], "bittensor.commands.misc": [[14, 2, 1, "", "AutocompleteCommand"], [14, 2, 1, "", "UpdateCommand"], [14, 1, 1, "", "console"]], "bittensor.commands.misc.AutocompleteCommand": [[14, 3, 1, "", "add_args"], [14, 3, 1, "", "check_config"], [14, 3, 1, "", "run"]], "bittensor.commands.misc.UpdateCommand": [[14, 3, 1, "", "add_args"], [14, 3, 1, "", "check_config"], [14, 3, 1, "", "run"]], "bittensor.commands.network": [[15, 1, 1, "", "HYPERPARAMS"], [15, 2, 1, "", "RegisterSubnetworkCommand"], [15, 2, 1, "", "SubnetGetHyperparamsCommand"], [15, 2, 1, "", "SubnetHyperparamsCommand"], [15, 2, 1, "", "SubnetListCommand"], [15, 2, 1, "", "SubnetLockCostCommand"], [15, 2, 1, "", "SubnetSudoCommand"], [15, 1, 1, "", "console"]], "bittensor.commands.network.RegisterSubnetworkCommand": [[15, 3, 1, "", "_run"], [15, 3, 1, "", "add_args"], [15, 3, 1, "", "check_config"], [15, 3, 1, "", "run"]], "bittensor.commands.network.SubnetGetHyperparamsCommand": [[15, 3, 1, "", "_run"], [15, 3, 1, "", "add_args"], [15, 3, 1, "", "check_config"], [15, 3, 1, "", "run"]], "bittensor.commands.network.SubnetHyperparamsCommand": [[15, 3, 1, "", "_run"], [15, 3, 1, "", "add_args"], [15, 3, 1, "", "check_config"], [15, 3, 1, "", "run"]], "bittensor.commands.network.SubnetListCommand": [[15, 3, 1, "", "_run"], [15, 3, 1, "", "add_args"], [15, 3, 1, "", "check_config"], [15, 3, 1, "", "run"]], "bittensor.commands.network.SubnetLockCostCommand": [[15, 3, 1, "", "_run"], [15, 3, 1, "", "add_args"], [15, 3, 1, "", "check_config"], [15, 3, 1, "", "run"]], "bittensor.commands.network.SubnetSudoCommand": [[15, 3, 1, "", "_run"], [15, 3, 1, "", "add_args"], [15, 3, 1, "", "check_config"], [15, 3, 1, "", "run"]], "bittensor.commands.overview": [[16, 2, 1, "", "OverviewCommand"], [16, 1, 1, "", "console"]], "bittensor.commands.overview.OverviewCommand": [[16, 3, 1, "", "_get_de_registered_stake_for_coldkey_wallet"], [16, 3, 1, "", "_get_hotkeys"], [16, 3, 1, "", "_get_key_address"], [16, 3, 1, "", "_get_neurons_for_netuid"], [16, 3, 1, "", "_get_total_balance"], [16, 3, 1, "", "_process_neuron_results"], [16, 3, 1, "", "_run"], [16, 3, 1, "", "add_args"], [16, 3, 1, "", "check_config"], [16, 3, 1, "", "run"]], "bittensor.commands.register": [[17, 2, 1, "", "PowRegisterCommand"], [17, 2, 1, "", "RegisterCommand"], [17, 2, 1, "", "RunFaucetCommand"], [17, 2, 1, "", "SwapHotkeyCommand"], [17, 1, 1, "", "console"]], "bittensor.commands.register.PowRegisterCommand": [[17, 3, 1, "", "_run"], [17, 3, 1, "", "add_args"], [17, 3, 1, "", "check_config"], [17, 3, 1, "", "run"]], "bittensor.commands.register.RegisterCommand": [[17, 3, 1, "", "_run"], [17, 3, 1, "", "add_args"], [17, 3, 1, "", "check_config"], [17, 3, 1, "", "run"]], "bittensor.commands.register.RunFaucetCommand": [[17, 3, 1, "", "_run"], [17, 3, 1, "", "add_args"], [17, 3, 1, "", "check_config"], [17, 3, 1, "", "run"]], "bittensor.commands.register.SwapHotkeyCommand": [[17, 3, 1, "", "_run"], [17, 3, 1, "", "add_args"], [17, 3, 1, "", "check_config"], [17, 3, 1, "", "run"]], "bittensor.commands.root": [[18, 2, 1, "", "RootGetWeightsCommand"], [18, 2, 1, "", "RootList"], [18, 2, 1, "", "RootRegisterCommand"], [18, 2, 1, "", "RootSetBoostCommand"], [18, 2, 1, "", "RootSetSlashCommand"], [18, 2, 1, "", "RootSetWeightsCommand"], [18, 1, 1, "", "console"]], "bittensor.commands.root.RootGetWeightsCommand": [[18, 3, 1, "", "_run"], [18, 3, 1, "", "add_args"], [18, 3, 1, "", "check_config"], [18, 3, 1, "", "run"]], "bittensor.commands.root.RootList": [[18, 3, 1, "", "_run"], [18, 3, 1, "", "add_args"], [18, 3, 1, "", "check_config"], [18, 3, 1, "", "run"]], "bittensor.commands.root.RootRegisterCommand": [[18, 3, 1, "", "_run"], [18, 3, 1, "", "add_args"], [18, 3, 1, "", "check_config"], [18, 3, 1, "", "run"]], "bittensor.commands.root.RootSetBoostCommand": [[18, 3, 1, "", "_run"], [18, 3, 1, "", "add_args"], [18, 3, 1, "", "check_config"], [18, 3, 1, "", "run"]], "bittensor.commands.root.RootSetSlashCommand": [[18, 3, 1, "", "_run"], [18, 3, 1, "", "add_args"], [18, 3, 1, "", "check_config"], [18, 3, 1, "", "run"]], "bittensor.commands.root.RootSetWeightsCommand": [[18, 3, 1, "", "_run"], [18, 3, 1, "", "add_args"], [18, 3, 1, "", "check_config"], [18, 3, 1, "", "run"]], "bittensor.commands.senate": [[19, 2, 1, "", "ProposalsCommand"], [19, 2, 1, "", "SenateCommand"], [19, 2, 1, "", "SenateLeaveCommand"], [19, 2, 1, "", "SenateRegisterCommand"], [19, 2, 1, "", "ShowVotesCommand"], [19, 2, 1, "", "VoteCommand"], [19, 1, 1, "", "console"], [19, 7, 1, "", "display_votes"], [19, 7, 1, "", "format_call_data"]], "bittensor.commands.senate.ProposalsCommand": [[19, 3, 1, "", "_run"], [19, 3, 1, "", "add_args"], [19, 3, 1, "", "check_config"], [19, 3, 1, "", "run"]], "bittensor.commands.senate.SenateCommand": [[19, 3, 1, "", "_run"], [19, 3, 1, "", "add_args"], [19, 3, 1, "", "check_config"], [19, 3, 1, "", "run"]], "bittensor.commands.senate.SenateLeaveCommand": [[19, 3, 1, "", "_run"], [19, 3, 1, "", "add_args"], [19, 3, 1, "", "check_config"], [19, 3, 1, "", "run"]], "bittensor.commands.senate.SenateRegisterCommand": [[19, 3, 1, "", "_run"], [19, 3, 1, "", "add_args"], [19, 3, 1, "", "check_config"], [19, 3, 1, "", "run"]], "bittensor.commands.senate.ShowVotesCommand": [[19, 3, 1, "", "_run"], [19, 3, 1, "", "add_args"], [19, 3, 1, "", "check_config"], [19, 3, 1, "", "run"]], "bittensor.commands.senate.VoteCommand": [[19, 3, 1, "", "_run"], [19, 3, 1, "", "add_args"], [19, 3, 1, "", "check_config"], [19, 3, 1, "", "run"]], "bittensor.commands.stake": [[20, 2, 1, "", "StakeCommand"], [20, 2, 1, "", "StakeShow"], [20, 7, 1, "", "_get_coldkey_wallets_for_path"], [20, 7, 1, "", "_get_hotkey_wallets_for_wallet"], [20, 1, 1, "id0", "console"]], "bittensor.commands.stake.StakeCommand": [[20, 3, 1, "", "_run"], [20, 3, 1, "", "add_args"], [20, 3, 1, "", "check_config"], [20, 3, 1, "", "run"]], "bittensor.commands.stake.StakeShow": [[20, 3, 1, "", "_run"], [20, 3, 1, "", "add_args"], [20, 3, 1, "", "check_config"], [20, 3, 1, "", "run"]], "bittensor.commands.transfer": [[21, 2, 1, "", "TransferCommand"], [21, 1, 1, "", "console"]], "bittensor.commands.transfer.TransferCommand": [[21, 3, 1, "", "_run"], [21, 3, 1, "", "add_args"], [21, 3, 1, "", "check_config"], [21, 3, 1, "", "run"]], "bittensor.commands.unstake": [[22, 2, 1, "", "UnStakeCommand"], [22, 1, 1, "", "console"]], "bittensor.commands.unstake.UnStakeCommand": [[22, 3, 1, "", "_run"], [22, 3, 1, "", "add_args"], [22, 3, 1, "", "check_config"], [22, 3, 1, "", "run"]], "bittensor.commands.wallets": [[23, 1, 1, "", "API_URL"], [23, 1, 1, "", "GRAPHQL_QUERY"], [23, 2, 1, "", "GetWalletHistoryCommand"], [23, 1, 1, "", "MAX_TXN"], [23, 2, 1, "", "NewColdkeyCommand"], [23, 2, 1, "", "NewHotkeyCommand"], [23, 2, 1, "", "RegenColdkeyCommand"], [23, 2, 1, "", "RegenColdkeypubCommand"], [23, 2, 1, "", "RegenHotkeyCommand"], [23, 2, 1, "", "UpdateWalletCommand"], [23, 2, 1, "", "WalletBalanceCommand"], [23, 2, 1, "", "WalletCreateCommand"], [23, 7, 1, "", "_get_coldkey_ss58_addresses_for_path"], [23, 7, 1, "", "_get_coldkey_wallets_for_path"], [23, 7, 1, "", "create_transfer_history_table"], [23, 7, 1, "", "get_wallet_transfers"]], "bittensor.commands.wallets.GetWalletHistoryCommand": [[23, 3, 1, "", "add_args"], [23, 3, 1, "", "check_config"], [23, 3, 1, "", "run"]], "bittensor.commands.wallets.NewColdkeyCommand": [[23, 3, 1, "", "add_args"], [23, 3, 1, "", "check_config"], [23, 3, 1, "", "run"]], "bittensor.commands.wallets.NewHotkeyCommand": [[23, 3, 1, "", "add_args"], [23, 3, 1, "", "check_config"], [23, 3, 1, "", "run"]], "bittensor.commands.wallets.RegenColdkeyCommand": [[23, 3, 1, "", "add_args"], [23, 3, 1, "", "check_config"], [23, 3, 1, "", "run"]], "bittensor.commands.wallets.RegenColdkeypubCommand": [[23, 3, 1, "", "add_args"], [23, 3, 1, "", "check_config"], [23, 3, 1, "", "run"]], "bittensor.commands.wallets.RegenHotkeyCommand": [[23, 3, 1, "", "add_args"], [23, 3, 1, "", "check_config"], [23, 3, 1, "", "run"]], "bittensor.commands.wallets.UpdateWalletCommand": [[23, 3, 1, "", "add_args"], [23, 3, 1, "", "check_config"], [23, 3, 1, "", "run"]], "bittensor.commands.wallets.WalletBalanceCommand": [[23, 3, 1, "", "_run"], [23, 3, 1, "", "add_args"], [23, 3, 1, "", "check_config"], [23, 3, 1, "", "run"]], "bittensor.commands.wallets.WalletCreateCommand": [[23, 3, 1, "", "add_args"], [23, 3, 1, "", "check_config"], [23, 3, 1, "", "run"]], "bittensor.config": [[24, 2, 1, "", "DefaultConfig"], [24, 6, 1, "", "InvalidConfigFile"], [24, 1, 1, "", "T"], [39, 3, 1, "", "__check_for_missing_required_args"], [39, 3, 1, "", "__deepcopy__"], [39, 3, 1, "", "__get_required_args_from_parser"], [39, 4, 1, "", "__is_set"], [39, 3, 1, "", "__parse_args__"], [39, 3, 1, "", "__repr__"], [39, 3, 1, "", "__split_params__"], [39, 3, 1, "", "__str__"], [39, 3, 1, "", "_merge"], [39, 3, 1, "", "_remove_private_keys"], [24, 2, 1, "", "config"], [39, 3, 1, "", "copy"], [39, 3, 1, "", "is_set"], [39, 3, 1, "", "merge"], [39, 3, 1, "", "merge_all"], [39, 3, 1, "", "to_string"], [39, 3, 1, "", "update_with_kwargs"]], "bittensor.config.DefaultConfig": [[24, 3, 1, "", "default"]], "bittensor.config.config": [[24, 3, 1, "", "__check_for_missing_required_args"], [24, 3, 1, "", "__deepcopy__"], [24, 3, 1, "", "__get_required_args_from_parser"], [24, 4, 1, "", "__is_set"], [24, 3, 1, "", "__parse_args__"], [24, 3, 1, "", "__repr__"], [24, 3, 1, "", "__split_params__"], [24, 3, 1, "", "__str__"], [24, 3, 1, "", "_merge"], [24, 3, 1, "", "_remove_private_keys"], [24, 3, 1, "", "copy"], [24, 3, 1, "", "is_set"], [24, 3, 1, "", "merge"], [24, 3, 1, "", "merge_all"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "update_with_kwargs"]], "bittensor.dendrite": [[25, 1, 1, "", "BaseModel"], [25, 2, 1, "", "DendriteMixin"], [39, 3, 1, "", "__repr__"], [39, 3, 1, "", "__str__"], [39, 3, 1, "", "aclose_session"], [39, 3, 1, "", "call"], [39, 3, 1, "", "call_stream"], [39, 3, 1, "", "close_session"], [25, 2, 1, "", "dendrite"], [39, 3, 1, "", "forward"], [39, 3, 1, "", "preprocess_synapse_for_request"], [39, 3, 1, "", "process_server_response"], [39, 3, 1, "", "query"]], "bittensor.dendrite.DendriteMixin": [[25, 3, 1, "", "__aenter__"], [25, 3, 1, "", "__aexit__"], [25, 3, 1, "", "__del__"], [25, 3, 1, "id0", "__repr__"], [25, 3, 1, "id4", "__str__"], [25, 3, 1, "", "_get_endpoint_url"], [25, 3, 1, "", "_handle_request_errors"], [25, 3, 1, "", "_log_incoming_response"], [25, 3, 1, "", "_log_outgoing_request"], [25, 3, 1, "id5", "aclose_session"], [25, 3, 1, "id7", "call"], [25, 3, 1, "id8", "call_stream"], [25, 3, 1, "id9", "close_session"], [25, 3, 1, "id11", "forward"], [25, 3, 1, "id12", "preprocess_synapse_for_request"], [25, 3, 1, "id13", "process_server_response"], [25, 3, 1, "id15", "query"], [25, 5, 1, "", "session"]], "bittensor.dendrite.dendrite": [[25, 3, 1, "", "__repr__"], [25, 3, 1, "", "__str__"], [25, 3, 1, "", "aclose_session"], [25, 3, 1, "", "call"], [25, 3, 1, "", "call_stream"], [25, 3, 1, "", "close_session"], [25, 3, 1, "", "forward"], [25, 3, 1, "", "preprocess_synapse_for_request"], [25, 3, 1, "", "process_server_response"], [25, 3, 1, "", "query"]], "bittensor.errors": [[26, 6, 1, "", "BlacklistedException"], [26, 6, 1, "", "ChainConnectionError"], [26, 6, 1, "", "ChainError"], [26, 6, 1, "", "ChainQueryError"], [26, 6, 1, "", "ChainTransactionError"], [26, 6, 1, "", "IdentityError"], [26, 6, 1, "", "InternalServerError"], [26, 6, 1, "", "InvalidRequestNameError"], [26, 6, 1, "", "KeyFileError"], [26, 6, 1, "", "MetadataError"], [26, 6, 1, "", "NominationError"], [26, 6, 1, "", "NotDelegateError"], [26, 6, 1, "", "NotRegisteredError"], [26, 6, 1, "", "NotVerifiedException"], [26, 6, 1, "", "PostProcessException"], [26, 6, 1, "", "PriorityException"], [26, 6, 1, "", "RegistrationError"], [26, 6, 1, "", "RunException"], [26, 6, 1, "", "StakeError"], [26, 6, 1, "", "SynapseDendriteNoneException"], [26, 6, 1, "", "SynapseException"], [26, 6, 1, "", "SynapseParsingError"], [26, 6, 1, "", "TakeError"], [26, 6, 1, "", "TransferError"], [26, 6, 1, "", "UnknownSynapseError"], [26, 6, 1, "", "UnstakeError"]], "bittensor.extrinsics": [[27, 0, 0, "-", "delegation"], [29, 0, 0, "-", "network"], [30, 0, 0, "-", "prometheus"], [31, 0, 0, "-", "registration"], [32, 0, 0, "-", "root"], [33, 0, 0, "-", "senate"], [34, 0, 0, "-", "serving"], [35, 0, 0, "-", "set_weights"], [36, 0, 0, "-", "staking"], [37, 0, 0, "-", "transfer"], [38, 0, 0, "-", "unstaking"]], "bittensor.extrinsics.delegation": [[27, 7, 1, "", "decrease_take_extrinsic"], [27, 7, 1, "", "delegate_extrinsic"], [27, 7, 1, "", "increase_take_extrinsic"], [27, 1, 1, "", "logger"], [27, 7, 1, "", "nominate_extrinsic"], [27, 7, 1, "", "undelegate_extrinsic"]], "bittensor.extrinsics.network": [[29, 7, 1, "", "find_event_attributes_in_extrinsic_receipt"], [29, 7, 1, "", "register_subnetwork_extrinsic"], [29, 7, 1, "", "set_hyperparameter_extrinsic"]], "bittensor.extrinsics.prometheus": [[30, 7, 1, "", "prometheus_extrinsic"]], "bittensor.extrinsics.registration": [[31, 6, 1, "", "MaxAttemptsException"], [31, 6, 1, "", "MaxSuccessException"], [31, 7, 1, "", "burned_register_extrinsic"], [31, 7, 1, "", "register_extrinsic"], [31, 7, 1, "", "run_faucet_extrinsic"], [31, 7, 1, "", "swap_hotkey_extrinsic"]], "bittensor.extrinsics.root": [[32, 1, 1, "", "logger"], [32, 7, 1, "", "root_register_extrinsic"], [32, 7, 1, "", "set_root_weights_extrinsic"]], "bittensor.extrinsics.senate": [[33, 7, 1, "", "leave_senate_extrinsic"], [33, 7, 1, "", "register_senate_extrinsic"], [33, 7, 1, "", "vote_senate_extrinsic"]], "bittensor.extrinsics.serving": [[34, 7, 1, "", "get_metadata"], [34, 7, 1, "", "publish_metadata"], [34, 7, 1, "", "serve_axon_extrinsic"], [34, 7, 1, "", "serve_extrinsic"]], "bittensor.extrinsics.set_weights": [[35, 1, 1, "", "logger"], [35, 7, 1, "", "set_weights_extrinsic"]], "bittensor.extrinsics.staking": [[36, 7, 1, "", "__do_add_stake_single"], [36, 7, 1, "", "add_stake_extrinsic"], [36, 7, 1, "", "add_stake_multiple_extrinsic"]], "bittensor.extrinsics.transfer": [[37, 7, 1, "", "transfer_extrinsic"]], "bittensor.extrinsics.unstaking": [[38, 7, 1, "", "__do_remove_stake_single"], [38, 7, 1, "", "check_threshold_amount"], [38, 7, 1, "", "unstake_extrinsic"], [38, 7, 1, "", "unstake_multiple_extrinsic"]], "bittensor.keyfile": [[40, 2, 1, "", "Mockkeyfile"], [40, 1, 1, "", "NACL_SALT"], [39, 3, 1, "", "__repr__"], [39, 3, 1, "", "__str__"], [39, 3, 1, "", "_may_overwrite"], [39, 3, 1, "", "_read_keyfile_data_from_file"], [39, 3, 1, "", "_write_keyfile_data_to_file"], [40, 7, 1, "", "ask_password_to_encrypt"], [39, 3, 1, "", "check_and_update_encryption"], [39, 5, 1, "", "data"], [39, 3, 1, "", "decrypt"], [40, 7, 1, "", "decrypt_keyfile_data"], [40, 7, 1, "", "deserialize_keypair_from_keyfile_data"], [39, 3, 1, "", "encrypt"], [40, 7, 1, "", "encrypt_keyfile_data"], [39, 3, 1, "", "exists_on_device"], [40, 7, 1, "", "get_coldkey_password_from_environment"], [39, 3, 1, "", "get_keypair"], [39, 3, 1, "", "is_encrypted"], [39, 3, 1, "", "is_readable"], [39, 3, 1, "", "is_writable"], [40, 2, 1, "", "keyfile"], [39, 5, 1, "", "keyfile_data"], [40, 7, 1, "", "keyfile_data_encryption_method"], [40, 7, 1, "", "keyfile_data_is_encrypted"], [40, 7, 1, "", "keyfile_data_is_encrypted_ansible"], [40, 7, 1, "", "keyfile_data_is_encrypted_legacy"], [40, 7, 1, "", "keyfile_data_is_encrypted_nacl"], [39, 5, 1, "", "keypair"], [40, 7, 1, "", "legacy_encrypt_keyfile_data"], [39, 3, 1, "", "make_dirs"], [40, 7, 1, "", "serialized_keypair_to_keyfile_data"], [39, 3, 1, "", "set_keypair"], [40, 7, 1, "", "validate_password"]], "bittensor.keyfile.Mockkeyfile": [[40, 3, 1, "", "__repr__"], [40, 3, 1, "", "__str__"], [40, 3, 1, "", "check_and_update_encryption"], [40, 5, 1, "", "data"], [40, 3, 1, "", "decrypt"], [40, 3, 1, "", "encrypt"], [40, 3, 1, "", "exists_on_device"], [40, 3, 1, "", "get_keypair"], [40, 3, 1, "", "is_encrypted"], [40, 3, 1, "", "is_readable"], [40, 3, 1, "", "is_writable"], [40, 5, 1, "", "keypair"], [40, 3, 1, "", "make_dirs"], [40, 3, 1, "", "set_keypair"]], "bittensor.keyfile.keyfile": [[40, 3, 1, "", "__repr__"], [40, 3, 1, "", "__str__"], [40, 3, 1, "", "_may_overwrite"], [40, 3, 1, "", "_read_keyfile_data_from_file"], [40, 3, 1, "", "_write_keyfile_data_to_file"], [40, 3, 1, "", "check_and_update_encryption"], [40, 5, 1, "", "data"], [40, 3, 1, "", "decrypt"], [40, 3, 1, "", "encrypt"], [40, 3, 1, "", "exists_on_device"], [40, 3, 1, "", "get_keypair"], [40, 3, 1, "", "is_encrypted"], [40, 3, 1, "", "is_readable"], [40, 3, 1, "", "is_writable"], [40, 5, 1, "", "keyfile_data"], [40, 5, 1, "", "keypair"], [40, 3, 1, "", "make_dirs"], [40, 3, 1, "", "set_keypair"]], "bittensor.metagraph": [[41, 1, 1, "", "BaseClass"], [41, 1, 1, "", "METAGRAPH_STATE_DICT_NDARRAY_KEYS"], [41, 2, 1, "", "MetagraphMixin"], [41, 2, 1, "", "NonTorchMetagraph"], [41, 2, 1, "", "TorchMetaGraph"], [41, 7, 1, "", "get_save_dir"], [41, 7, 1, "", "latest_block_path"], [41, 1, 1, "", "metagraph"]], "bittensor.metagraph.MetagraphMixin": [[41, 5, 1, "", "B"], [41, 5, 1, "", "C"], [41, 5, 1, "", "D"], [41, 5, 1, "", "E"], [41, 5, 1, "", "I"], [41, 5, 1, "", "R"], [41, 5, 1, "", "S"], [41, 5, 1, "", "T"], [41, 5, 1, "", "Tv"], [41, 5, 1, "", "W"], [41, 3, 1, "", "__repr__"], [41, 3, 1, "", "__str__"], [41, 3, 1, "", "_assign_neurons"], [41, 3, 1, "", "_create_tensor"], [41, 3, 1, "", "_initialize_subtensor"], [41, 3, 1, "", "_process_root_weights"], [41, 3, 1, "", "_process_weights_or_bonds"], [41, 3, 1, "", "_set_metagraph_attributes"], [41, 3, 1, "", "_set_weights_and_bonds"], [41, 4, 1, "", "active"], [41, 5, 1, "", "addresses"], [41, 4, 1, "", "axons"], [41, 4, 1, "", "block"], [41, 4, 1, "", "bonds"], [41, 5, 1, "", "coldkeys"], [41, 4, 1, "", "consensus"], [41, 4, 1, "", "dividends"], [41, 4, 1, "", "emission"], [41, 5, 1, "", "hotkeys"], [41, 4, 1, "", "incentive"], [41, 4, 1, "", "last_update"], [41, 3, 1, "", "load"], [41, 3, 1, "", "load_from_path"], [41, 3, 1, "", "metadata"], [41, 4, 1, "", "n"], [41, 4, 1, "", "netuid"], [41, 4, 1, "", "network"], [41, 4, 1, "", "ranks"], [41, 3, 1, "", "save"], [41, 4, 1, "", "stake"], [41, 3, 1, "", "state_dict"], [41, 3, 1, "", "sync"], [41, 4, 1, "", "total_stake"], [41, 4, 1, "", "trust"], [41, 4, 1, "", "uids"], [41, 4, 1, "", "validator_permit"], [41, 4, 1, "", "validator_trust"], [41, 4, 1, "", "version"], [41, 4, 1, "", "weights"]], "bittensor.metagraph.NonTorchMetagraph": [[41, 3, 1, "", "_set_metagraph_attributes"], [41, 3, 1, "", "load_from_path"]], "bittensor.metagraph.TorchMetaGraph": [[41, 3, 1, "", "_set_metagraph_attributes"], [41, 3, 1, "", "load_from_path"]], "bittensor.stream": [[42, 2, 1, "", "BTStreamingResponseModel"], [42, 2, 1, "", "StreamingSynapse"]], "bittensor.stream.BTStreamingResponseModel": [[42, 4, 1, "id0", "token_streamer"]], "bittensor.stream.StreamingSynapse": [[42, 2, 1, "", "BTStreamingResponse"], [42, 3, 1, "", "create_streaming_response"], [42, 3, 1, "", "extract_response_json"], [42, 4, 1, "", "model_config"], [42, 3, 1, "", "process_streaming_response"]], "bittensor.stream.StreamingSynapse.BTStreamingResponse": [[42, 3, 1, "", "__call__"], [42, 3, 1, "", "stream_response"]], "bittensor.subnets": [[43, 2, 1, "", "SubnetsAPI"]], "bittensor.subnets.SubnetsAPI": [[43, 3, 1, "", "__call__"], [43, 3, 1, "", "prepare_synapse"], [43, 3, 1, "", "process_responses"], [43, 3, 1, "", "query_api"]], "bittensor.subtensor": [[44, 1, 1, "", "KEY_NONCE"], [44, 2, 1, "", "ParamWithTypes"], [39, 3, 1, "", "__repr__"], [39, 3, 1, "", "__str__"], [39, 3, 1, "", "_do_associate_ips"], [39, 3, 1, "", "_do_burned_register"], [39, 3, 1, "", "_do_decrease_take"], [39, 3, 1, "", "_do_delegation"], [39, 3, 1, "", "_do_increase_take"], [39, 3, 1, "", "_do_nominate"], [39, 3, 1, "", "_do_pow_register"], [39, 3, 1, "", "_do_root_register"], [39, 3, 1, "", "_do_serve_axon"], [39, 3, 1, "", "_do_serve_prometheus"], [39, 3, 1, "", "_do_set_weights"], [39, 3, 1, "", "_do_stake"], [39, 3, 1, "", "_do_swap_hotkey"], [39, 3, 1, "", "_do_transfer"], [39, 3, 1, "", "_do_undelegation"], [39, 3, 1, "", "_do_unstake"], [39, 3, 1, "", "_encode_params"], [39, 3, 1, "", "_get_hyperparameter"], [39, 3, 1, "", "_null_neuron"], [39, 3, 1, "", "add_args"], [39, 3, 1, "", "add_stake"], [39, 3, 1, "", "add_stake_multiple"], [39, 3, 1, "", "adjustment_alpha"], [39, 3, 1, "", "associated_validator_ip_info"], [39, 5, 1, "", "block"], [39, 3, 1, "", "blocks_since_epoch"], [39, 3, 1, "", "blocks_since_last_update"], [39, 3, 1, "", "bonds"], [39, 3, 1, "", "bonds_moving_avg"], [39, 3, 1, "", "burned_register"], [39, 3, 1, "", "close"], [39, 3, 1, "", "commit"], [39, 3, 1, "", "config"], [39, 3, 1, "", "delegate"], [39, 3, 1, "", "determine_chain_endpoint_and_network"], [39, 3, 1, "", "difficulty"], [39, 3, 1, "", "does_hotkey_exist"], [39, 3, 1, "", "get_all_neurons_for_pubkey"], [39, 3, 1, "", "get_all_subnet_netuids"], [39, 3, 1, "", "get_all_subnets_info"], [39, 3, 1, "", "get_all_uids_for_hotkey"], [39, 3, 1, "", "get_axon_info"], [39, 3, 1, "", "get_balance"], [39, 3, 1, "", "get_balances"], [39, 3, 1, "", "get_block_hash"], [39, 3, 1, "", "get_commitment"], [39, 3, 1, "", "get_current_block"], [39, 3, 1, "", "get_delegate_by_hotkey"], [39, 3, 1, "", "get_delegate_take"], [39, 3, 1, "", "get_delegated"], [39, 3, 1, "", "get_delegates"], [39, 3, 1, "", "get_delegates_lite"], [39, 3, 1, "", "get_emission_value_by_subnet"], [39, 3, 1, "", "get_error_info_by_index"], [39, 3, 1, "", "get_existential_deposit"], [39, 3, 1, "", "get_hotkey_owner"], [39, 3, 1, "", "get_minimum_required_stake"], [39, 3, 1, "", "get_netuids_for_hotkey"], [39, 3, 1, "", "get_neuron_for_pubkey_and_subnet"], [39, 3, 1, "", "get_nominators_for_hotkey"], [39, 3, 1, "", "get_prometheus_info"], [39, 3, 1, "", "get_proposal_call_data"], [39, 3, 1, "", "get_proposal_hashes"], [39, 4, 1, "", "get_proposal_vote_data"], [39, 3, 1, "", "get_proposals"], [39, 3, 1, "", "get_senate_members"], [39, 3, 1, "", "get_stake"], [39, 3, 1, "", "get_stake_for_coldkey_and_hotkey"], [39, 3, 1, "", "get_stake_info_for_coldkey"], [39, 3, 1, "", "get_stake_info_for_coldkeys"], [39, 3, 1, "", "get_subnet_burn_cost"], [39, 3, 1, "", "get_subnet_connection_requirement"], [39, 3, 1, "", "get_subnet_connection_requirements"], [39, 3, 1, "", "get_subnet_hyperparameters"], [39, 3, 1, "", "get_subnet_info"], [39, 3, 1, "", "get_subnet_modality"], [39, 3, 1, "", "get_subnet_owner"], [39, 3, 1, "", "get_subnets"], [39, 3, 1, "", "get_total_stake_for_coldkey"], [39, 3, 1, "", "get_total_stake_for_hotkey"], [39, 3, 1, "", "get_total_subnets"], [39, 3, 1, "", "get_transfer_fee"], [39, 3, 1, "", "get_uid_for_hotkey_on_subnet"], [39, 3, 1, "", "get_vote_data"], [39, 3, 1, "", "help"], [39, 3, 1, "", "immunity_period"], [39, 3, 1, "", "incentive"], [39, 3, 1, "", "is_hotkey_delegate"], [39, 3, 1, "", "is_hotkey_registered"], [39, 3, 1, "", "is_hotkey_registered_any"], [39, 3, 1, "", "is_hotkey_registered_on_subnet"], [39, 3, 1, "", "is_senate_member"], [39, 3, 1, "", "kappa"], [39, 3, 1, "", "leave_senate"], [39, 3, 1, "", "max_allowed_validators"], [39, 3, 1, "", "max_n"], [39, 3, 1, "", "max_weight_limit"], [39, 3, 1, "", "metagraph"], [39, 3, 1, "", "min_allowed_weights"], [39, 3, 1, "", "neuron_for_uid"], [39, 3, 1, "", "neuron_for_uid_lite"], [39, 3, 1, "", "neuron_for_wallet"], [39, 3, 1, "", "neuron_has_validator_permit"], [39, 3, 1, "", "neurons"], [39, 3, 1, "", "neurons_lite"], [39, 3, 1, "", "nominate"], [44, 1, 1, "", "original_convert_type_string"], [39, 3, 1, "", "query_constant"], [39, 3, 1, "", "query_identity"], [39, 3, 1, "", "query_map"], [39, 3, 1, "", "query_map_subtensor"], [39, 3, 1, "", "query_module"], [39, 3, 1, "", "query_runtime_api"], [39, 3, 1, "", "query_subtensor"], [39, 3, 1, "", "recycle"], [39, 3, 1, "", "register"], [39, 3, 1, "", "register_senate"], [39, 3, 1, "", "register_subnetwork"], [39, 3, 1, "", "rho"], [39, 3, 1, "", "root_register"], [39, 3, 1, "", "root_set_weights"], [39, 3, 1, "", "run_faucet"], [39, 3, 1, "", "scaling_law_power"], [39, 3, 1, "", "send_extrinsic"], [39, 3, 1, "", "serve"], [39, 3, 1, "", "serve_axon"], [39, 3, 1, "", "serve_prometheus"], [39, 3, 1, "", "serving_rate_limit"], [39, 3, 1, "", "set_hyperparameter"], [39, 3, 1, "", "set_take"], [39, 3, 1, "", "set_weights"], [39, 3, 1, "", "setup_config"], [39, 3, 1, "", "state_call"], [39, 3, 1, "", "subnet_exists"], [39, 3, 1, "", "subnetwork_n"], [44, 2, 1, "", "subtensor"], [39, 3, 1, "", "swap_hotkey"], [39, 3, 1, "", "synergy_scaling_law_power"], [39, 3, 1, "", "tempo"], [39, 3, 1, "", "total_issuance"], [39, 3, 1, "", "total_stake"], [39, 3, 1, "", "transfer"], [39, 3, 1, "", "tx_rate_limit"], [39, 3, 1, "", "undelegate"], [39, 3, 1, "", "unstake"], [39, 3, 1, "", "unstake_multiple"], [39, 3, 1, "", "update_identity"], [39, 3, 1, "", "validator_batch_size"], [39, 3, 1, "", "validator_epoch_length"], [39, 3, 1, "", "validator_epochs_per_reset"], [39, 3, 1, "", "validator_exclude_quantile"], [39, 3, 1, "", "validator_logits_divergence"], [39, 3, 1, "", "validator_prune_len"], [39, 3, 1, "", "validator_sequence_length"], [39, 3, 1, "", "vote_senate"], [39, 3, 1, "", "weights"], [39, 3, 1, "", "weights_rate_limit"]], "bittensor.subtensor.ParamWithTypes": [[44, 4, 1, "", "name"], [44, 4, 1, "", "type"]], "bittensor.subtensor.subtensor": [[44, 3, 1, "", "__repr__"], [44, 3, 1, "", "__str__"], [44, 3, 1, "", "_do_associate_ips"], [44, 3, 1, "", "_do_burned_register"], [44, 3, 1, "", "_do_decrease_take"], [44, 3, 1, "", "_do_delegation"], [44, 3, 1, "", "_do_increase_take"], [44, 3, 1, "", "_do_nominate"], [44, 3, 1, "", "_do_pow_register"], [44, 3, 1, "", "_do_root_register"], [44, 3, 1, "", "_do_serve_axon"], [44, 3, 1, "", "_do_serve_prometheus"], [44, 3, 1, "", "_do_set_weights"], [44, 3, 1, "", "_do_stake"], [44, 3, 1, "", "_do_swap_hotkey"], [44, 3, 1, "", "_do_transfer"], [44, 3, 1, "", "_do_undelegation"], [44, 3, 1, "", "_do_unstake"], [44, 3, 1, "", "_encode_params"], [44, 3, 1, "", "_get_hyperparameter"], [44, 3, 1, "", "_null_neuron"], [44, 3, 1, "", "add_args"], [44, 3, 1, "", "add_stake"], [44, 3, 1, "", "add_stake_multiple"], [44, 3, 1, "", "adjustment_alpha"], [44, 3, 1, "", "associated_validator_ip_info"], [44, 5, 1, "", "block"], [44, 3, 1, "", "blocks_since_epoch"], [44, 3, 1, "", "blocks_since_last_update"], [44, 3, 1, "", "bonds"], [44, 3, 1, "", "bonds_moving_avg"], [44, 3, 1, "", "burned_register"], [44, 3, 1, "", "close"], [44, 3, 1, "", "commit"], [44, 3, 1, "", "config"], [44, 3, 1, "", "delegate"], [44, 3, 1, "", "determine_chain_endpoint_and_network"], [44, 3, 1, "", "difficulty"], [44, 3, 1, "", "does_hotkey_exist"], [44, 3, 1, "", "get_all_neurons_for_pubkey"], [44, 3, 1, "", "get_all_subnet_netuids"], [44, 3, 1, "", "get_all_subnets_info"], [44, 3, 1, "", "get_all_uids_for_hotkey"], [44, 3, 1, "", "get_axon_info"], [44, 3, 1, "", "get_balance"], [44, 3, 1, "", "get_balances"], [44, 3, 1, "", "get_block_hash"], [44, 3, 1, "", "get_commitment"], [44, 3, 1, "", "get_current_block"], [44, 3, 1, "", "get_delegate_by_hotkey"], [44, 3, 1, "", "get_delegate_take"], [44, 3, 1, "", "get_delegated"], [44, 3, 1, "", "get_delegates"], [44, 3, 1, "", "get_delegates_lite"], [44, 3, 1, "", "get_emission_value_by_subnet"], [44, 3, 1, "", "get_error_info_by_index"], [44, 3, 1, "", "get_existential_deposit"], [44, 3, 1, "", "get_hotkey_owner"], [44, 3, 1, "", "get_minimum_required_stake"], [44, 3, 1, "", "get_netuids_for_hotkey"], [44, 3, 1, "", "get_neuron_for_pubkey_and_subnet"], [44, 3, 1, "", "get_nominators_for_hotkey"], [44, 3, 1, "", "get_prometheus_info"], [44, 3, 1, "", "get_proposal_call_data"], [44, 3, 1, "", "get_proposal_hashes"], [44, 4, 1, "", "get_proposal_vote_data"], [44, 3, 1, "", "get_proposals"], [44, 3, 1, "", "get_senate_members"], [44, 3, 1, "", "get_stake"], [44, 3, 1, "", "get_stake_for_coldkey_and_hotkey"], [44, 3, 1, "", "get_stake_info_for_coldkey"], [44, 3, 1, "", "get_stake_info_for_coldkeys"], [44, 3, 1, "", "get_subnet_burn_cost"], [44, 3, 1, "", "get_subnet_connection_requirement"], [44, 3, 1, "", "get_subnet_connection_requirements"], [44, 3, 1, "", "get_subnet_hyperparameters"], [44, 3, 1, "", "get_subnet_info"], [44, 3, 1, "", "get_subnet_modality"], [44, 3, 1, "", "get_subnet_owner"], [44, 3, 1, "", "get_subnets"], [44, 3, 1, "", "get_total_stake_for_coldkey"], [44, 3, 1, "", "get_total_stake_for_hotkey"], [44, 3, 1, "", "get_total_subnets"], [44, 3, 1, "", "get_transfer_fee"], [44, 3, 1, "", "get_uid_for_hotkey_on_subnet"], [44, 3, 1, "", "get_vote_data"], [44, 3, 1, "", "help"], [44, 3, 1, "", "immunity_period"], [44, 3, 1, "", "incentive"], [44, 3, 1, "", "is_hotkey_delegate"], [44, 3, 1, "", "is_hotkey_registered"], [44, 3, 1, "", "is_hotkey_registered_any"], [44, 3, 1, "", "is_hotkey_registered_on_subnet"], [44, 3, 1, "", "is_senate_member"], [44, 3, 1, "", "kappa"], [44, 3, 1, "", "leave_senate"], [44, 3, 1, "", "max_allowed_validators"], [44, 3, 1, "", "max_n"], [44, 3, 1, "", "max_weight_limit"], [44, 3, 1, "", "metagraph"], [44, 3, 1, "", "min_allowed_weights"], [44, 3, 1, "", "neuron_for_uid"], [44, 3, 1, "", "neuron_for_uid_lite"], [44, 3, 1, "", "neuron_for_wallet"], [44, 3, 1, "", "neuron_has_validator_permit"], [44, 3, 1, "", "neurons"], [44, 3, 1, "", "neurons_lite"], [44, 3, 1, "", "nominate"], [44, 3, 1, "", "query_constant"], [44, 3, 1, "", "query_identity"], [44, 3, 1, "", "query_map"], [44, 3, 1, "", "query_map_subtensor"], [44, 3, 1, "", "query_module"], [44, 3, 1, "", "query_runtime_api"], [44, 3, 1, "", "query_subtensor"], [44, 3, 1, "", "recycle"], [44, 3, 1, "", "register"], [44, 3, 1, "", "register_senate"], [44, 3, 1, "", "register_subnetwork"], [44, 3, 1, "", "rho"], [44, 3, 1, "", "root_register"], [44, 3, 1, "", "root_set_weights"], [44, 3, 1, "", "run_faucet"], [44, 3, 1, "", "scaling_law_power"], [44, 3, 1, "", "send_extrinsic"], [44, 3, 1, "", "serve"], [44, 3, 1, "", "serve_axon"], [44, 3, 1, "", "serve_prometheus"], [44, 3, 1, "", "serving_rate_limit"], [44, 3, 1, "", "set_hyperparameter"], [44, 3, 1, "", "set_take"], [44, 3, 1, "", "set_weights"], [44, 3, 1, "", "setup_config"], [44, 3, 1, "", "state_call"], [44, 3, 1, "", "subnet_exists"], [44, 3, 1, "", "subnetwork_n"], [44, 3, 1, "", "swap_hotkey"], [44, 3, 1, "", "synergy_scaling_law_power"], [44, 3, 1, "", "tempo"], [44, 3, 1, "", "total_issuance"], [44, 3, 1, "", "total_stake"], [44, 3, 1, "", "transfer"], [44, 3, 1, "", "tx_rate_limit"], [44, 3, 1, "", "undelegate"], [44, 3, 1, "", "unstake"], [44, 3, 1, "", "unstake_multiple"], [44, 3, 1, "", "update_identity"], [44, 3, 1, "", "validator_batch_size"], [44, 3, 1, "", "validator_epoch_length"], [44, 3, 1, "", "validator_epochs_per_reset"], [44, 3, 1, "", "validator_exclude_quantile"], [44, 3, 1, "", "validator_logits_divergence"], [44, 3, 1, "", "validator_prune_len"], [44, 3, 1, "", "validator_sequence_length"], [44, 3, 1, "", "vote_senate"], [44, 3, 1, "", "weights"], [44, 3, 1, "", "weights_rate_limit"]], "bittensor.synapse": [[45, 2, 1, "", "Synapse"], [45, 2, 1, "", "TerminalInfo"], [45, 7, 1, "", "cast_float"], [45, 7, 1, "", "cast_int"], [45, 7, 1, "", "get_size"]], "bittensor.synapse.Synapse": [[45, 3, 1, "id1", "__setattr__"], [45, 4, 1, "", "_extract_header_size"], [45, 4, 1, "", "_extract_timeout"], [45, 4, 1, "", "_extract_total_size"], [45, 4, 1, "", "axon"], [45, 5, 1, "id0", "body_hash"], [45, 4, 1, "", "computed_body_hash"], [45, 4, 1, "", "dendrite"], [45, 3, 1, "id2", "deserialize"], [45, 5, 1, "", "failed_verification"], [45, 3, 1, "id3", "from_headers"], [45, 3, 1, "", "get_required_fields"], [45, 3, 1, "id4", "get_total_size"], [45, 4, 1, "", "header_size"], [45, 5, 1, "", "is_blacklist"], [45, 5, 1, "", "is_failure"], [45, 5, 1, "", "is_success"], [45, 5, 1, "", "is_timeout"], [45, 4, 1, "", "model_config"], [45, 4, 1, "", "name"], [45, 3, 1, "id5", "parse_headers_to_inputs"], [45, 4, 1, "", "required_hash_fields"], [45, 3, 1, "", "set_name_type"], [45, 4, 1, "", "timeout"], [45, 3, 1, "id6", "to_headers"], [45, 4, 1, "", "total_size"]], "bittensor.synapse.TerminalInfo": [[45, 4, 1, "", "_extract_nonce"], [45, 4, 1, "", "_extract_port"], [45, 4, 1, "", "_extract_process_time"], [45, 4, 1, "", "_extract_status_code"], [45, 4, 1, "", "_extract_version"], [45, 4, 1, "", "hotkey"], [45, 4, 1, "", "ip"], [45, 4, 1, "", "model_config"], [45, 4, 1, "", "nonce"], [45, 4, 1, "", "port"], [45, 4, 1, "", "process_time"], [45, 4, 1, "", "signature"], [45, 4, 1, "", "status_code"], [45, 4, 1, "", "status_message"], [45, 4, 1, "", "uuid"], [45, 4, 1, "", "version"]], "bittensor.tensor": [[46, 1, 1, "", "NUMPY_DTYPES"], [46, 1, 1, "", "TORCH_DTYPES"], [46, 2, 1, "", "Tensor"], [46, 7, 1, "", "cast_dtype"], [46, 7, 1, "", "cast_shape"], [46, 2, 1, "", "tensor"]], "bittensor.tensor.Tensor": [[46, 4, 1, "", "_extract_dtype"], [46, 4, 1, "", "_extract_shape"], [46, 4, 1, "", "buffer"], [46, 3, 1, "", "deserialize"], [46, 4, 1, "", "dtype"], [46, 4, 1, "", "model_config"], [46, 3, 1, "", "numpy"], [46, 3, 1, "", "serialize"], [46, 4, 1, "", "shape"], [46, 3, 1, "", "tensor"], [46, 3, 1, "", "tolist"]], "bittensor.threadpool": [[47, 6, 1, "", "BrokenThreadPool"], [47, 1, 1, "", "NULL_ENTRY"], [47, 2, 1, "", "PriorityThreadPoolExecutor"], [47, 2, 1, "", "_WorkItem"], [47, 1, 1, "", "__author__"], [47, 1, 1, "", "_shutdown"], [47, 1, 1, "", "_threads_queues"], [47, 7, 1, "", "_worker"], [47, 1, 1, "", "logger"]], "bittensor.threadpool.PriorityThreadPoolExecutor": [[47, 3, 1, "", "_adjust_thread_count"], [47, 4, 1, "", "_counter"], [47, 3, 1, "", "_initializer_failed"], [47, 3, 1, "", "add_args"], [47, 3, 1, "", "config"], [47, 5, 1, "", "is_empty"], [47, 3, 1, "", "shutdown"], [47, 3, 1, "", "submit"]], "bittensor.threadpool._WorkItem": [[47, 3, 1, "", "run"]], "bittensor.types": [[48, 2, 1, "", "AxonServeCallParams"], [48, 2, 1, "", "PrometheusServeCallParams"]], "bittensor.types.AxonServeCallParams": [[48, 4, 1, "", "ip"], [48, 4, 1, "", "ip_type"], [48, 4, 1, "", "netuid"], [48, 4, 1, "", "port"], [48, 4, 1, "", "version"]], "bittensor.types.PrometheusServeCallParams": [[48, 4, 1, "", "ip"], [48, 4, 1, "", "ip_type"], [48, 4, 1, "", "netuid"], [48, 4, 1, "", "port"], [48, 4, 1, "", "version"]], "bittensor.wallet": [[39, 3, 1, "", "__repr__"], [39, 3, 1, "", "__str__"], [39, 3, 1, "", "add_args"], [39, 5, 1, "", "coldkey"], [39, 5, 1, "", "coldkey_file"], [39, 5, 1, "", "coldkeypub"], [39, 5, 1, "", "coldkeypub_file"], [39, 3, 1, "", "config"], [39, 3, 1, "", "create"], [39, 3, 1, "", "create_coldkey_from_uri"], [39, 3, 1, "", "create_hotkey_from_uri"], [39, 3, 1, "", "create_if_non_existent"], [39, 3, 1, "", "create_new_coldkey"], [39, 3, 1, "", "create_new_hotkey"], [49, 7, 1, "", "display_mnemonic_msg"], [39, 3, 1, "", "get_coldkey"], [39, 3, 1, "", "get_coldkeypub"], [39, 3, 1, "", "get_hotkey"], [39, 3, 1, "", "help"], [39, 5, 1, "", "hotkey"], [39, 5, 1, "", "hotkey_file"], [39, 3, 1, "", "new_coldkey"], [39, 3, 1, "", "new_hotkey"], [39, 3, 1, "", "recreate"], [39, 4, 1, "", "regen_coldkey"], [39, 4, 1, "", "regen_coldkeypub"], [39, 4, 1, "", "regen_hotkey"], [39, 3, 1, "", "regenerate_coldkey"], [39, 3, 1, "", "regenerate_coldkeypub"], [39, 3, 1, "", "regenerate_hotkey"], [39, 3, 1, "", "set_coldkey"], [39, 3, 1, "", "set_coldkeypub"], [39, 3, 1, "", "set_hotkey"], [49, 2, 1, "", "wallet"]], "bittensor.wallet.wallet": [[49, 3, 1, "", "__repr__"], [49, 3, 1, "", "__str__"], [49, 3, 1, "", "add_args"], [49, 5, 1, "", "coldkey"], [49, 5, 1, "", "coldkey_file"], [49, 5, 1, "", "coldkeypub"], [49, 5, 1, "", "coldkeypub_file"], [49, 3, 1, "", "config"], [49, 3, 1, "", "create"], [49, 3, 1, "", "create_coldkey_from_uri"], [49, 3, 1, "", "create_hotkey_from_uri"], [49, 3, 1, "", "create_if_non_existent"], [49, 3, 1, "", "create_new_coldkey"], [49, 3, 1, "", "create_new_hotkey"], [49, 3, 1, "", "get_coldkey"], [49, 3, 1, "", "get_coldkeypub"], [49, 3, 1, "", "get_hotkey"], [49, 3, 1, "", "help"], [49, 5, 1, "", "hotkey"], [49, 5, 1, "", "hotkey_file"], [49, 3, 1, "", "new_coldkey"], [49, 3, 1, "", "new_hotkey"], [49, 3, 1, "", "recreate"], [49, 4, 1, "", "regen_coldkey"], [49, 4, 1, "", "regen_coldkeypub"], [49, 4, 1, "", "regen_hotkey"], [49, 3, 1, "", "regenerate_coldkey"], [49, 3, 1, "", "regenerate_coldkeypub"], [49, 3, 1, "", "regenerate_hotkey"], [49, 3, 1, "", "set_coldkey"], [49, 3, 1, "", "set_coldkeypub"], [49, 3, 1, "", "set_hotkey"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:exception", "7": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"], "7": ["py", "function", "Python function"]}, "titleterms": {"bittensor": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51], "axon": 0, "modul": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "class": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "function": [0, 2, 3, 6, 8, 11, 19, 20, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 49], "btlog": [1, 2, 3, 4, 5], "defin": 1, "format": 2, "attribut": [2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 32, 35, 39, 40, 41, 44, 46, 47], "helper": 3, "submodul": [4, 10, 28, 39], "packag": [4, 10, 39], "loggingmachin": 5, "chain_data": 6, "cli": 7, "command": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "deleg": [8, 27], "ident": 9, "inspect": 11, "list": 12, "metagraph": [13, 41], "misc": 14, "network": [15, 29], "overview": 16, "regist": 17, "root": [18, 32], "senat": [19, 33], "stake": [20, 36], "transfer": [21, 37], "unstak": [22, 38], "wallet": [23, 49], "config": 24, "dendrit": 25, "error": 26, "extrins": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "prometheu": 30, "registr": 31, "serv": 34, "set_weight": 35, "subpackag": 39, "keyfil": 40, "stream": 42, "subnet": 43, "subtensor": 44, "synaps": 45, "tensor": 46, "threadpool": 47, "type": 48, "api": [50, 51], "refer": 50, "welcom": 51, "document": 51}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Welcome to Bittensor API Documentation": [[51, "welcome-to-bittensor-api-documentation"]], "bittensor.axon": [[0, "module-bittensor.axon"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"]], "Classes": [[0, "classes"], [2, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"]], "Functions": [[0, "functions"], [2, "functions"], [3, "functions"], [6, "functions"], [8, "functions"], [11, "functions"], [19, "functions"], [20, "functions"], [23, "functions"], [25, "functions"], [27, "functions"], [29, "functions"], [30, "functions"], [31, "functions"], [32, "functions"], [33, "functions"], [34, "functions"], [35, "functions"], [36, "functions"], [37, "functions"], [38, "functions"], [39, "functions"], [40, "functions"], [41, "functions"], [45, "functions"], [46, "functions"], [47, "functions"], [49, "functions"]], "bittensor.btlogging.defines": [[1, "module-bittensor.btlogging.defines"]], "bittensor.btlogging.format": [[2, "module-bittensor.btlogging.format"]], "Attributes": [[2, "attributes"], [4, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [10, "attributes"], [11, "attributes"], [12, "attributes"], [13, "attributes"], [14, "attributes"], [15, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"], [19, "attributes"], [20, "attributes"], [21, "attributes"], [22, "attributes"], [23, "attributes"], [24, "attributes"], [25, "attributes"], [27, "attributes"], [32, "attributes"], [35, "attributes"], [39, "attributes"], [40, "attributes"], [41, "attributes"], [44, "attributes"], [46, "attributes"], [47, "attributes"]], "bittensor.btlogging.helpers": [[3, "module-bittensor.btlogging.helpers"]], "bittensor.btlogging": [[4, "module-bittensor.btlogging"]], "Submodules": [[4, "submodules"], [10, "submodules"], [28, "submodules"], [39, "submodules"]], "Package Contents": [[4, "package-contents"], [10, "package-contents"], [39, "package-contents"]], "bittensor.btlogging.loggingmachine": [[5, "module-bittensor.btlogging.loggingmachine"]], "bittensor.chain_data": [[6, "module-bittensor.chain_data"]], "bittensor.cli": [[7, "module-bittensor.cli"]], "bittensor.commands.delegates": [[8, "module-bittensor.commands.delegates"]], "bittensor.commands.identity": [[9, "module-bittensor.commands.identity"]], "bittensor.commands": [[10, "module-bittensor.commands"]], "bittensor.commands.inspect": [[11, "module-bittensor.commands.inspect"]], "bittensor.commands.list": [[12, "module-bittensor.commands.list"]], "bittensor.commands.metagraph": [[13, "module-bittensor.commands.metagraph"]], "bittensor.commands.misc": [[14, "module-bittensor.commands.misc"]], "bittensor.commands.network": [[15, "module-bittensor.commands.network"]], "bittensor.commands.overview": [[16, "module-bittensor.commands.overview"]], "bittensor.commands.register": [[17, "module-bittensor.commands.register"]], "bittensor.commands.root": [[18, "module-bittensor.commands.root"]], "bittensor.commands.senate": [[19, "module-bittensor.commands.senate"]], "bittensor.commands.stake": [[20, "module-bittensor.commands.stake"]], "bittensor.commands.transfer": [[21, "module-bittensor.commands.transfer"]], "bittensor.commands.unstake": [[22, "module-bittensor.commands.unstake"]], "bittensor.commands.wallets": [[23, "module-bittensor.commands.wallets"]], "bittensor.config": [[24, "module-bittensor.config"]], "bittensor.dendrite": [[25, "module-bittensor.dendrite"]], "bittensor.errors": [[26, "module-bittensor.errors"]], "bittensor.extrinsics.delegation": [[27, "module-bittensor.extrinsics.delegation"]], "bittensor.extrinsics": [[28, "module-bittensor.extrinsics"]], "bittensor.extrinsics.network": [[29, "module-bittensor.extrinsics.network"]], "bittensor.extrinsics.prometheus": [[30, "module-bittensor.extrinsics.prometheus"]], "bittensor.extrinsics.registration": [[31, "module-bittensor.extrinsics.registration"]], "bittensor.extrinsics.root": [[32, "module-bittensor.extrinsics.root"]], "bittensor.extrinsics.senate": [[33, "module-bittensor.extrinsics.senate"]], "bittensor.extrinsics.serving": [[34, "module-bittensor.extrinsics.serving"]], "bittensor.extrinsics.set_weights": [[35, "module-bittensor.extrinsics.set_weights"]], "bittensor.extrinsics.staking": [[36, "module-bittensor.extrinsics.staking"]], "bittensor.extrinsics.transfer": [[37, "module-bittensor.extrinsics.transfer"]], "bittensor.extrinsics.unstaking": [[38, "module-bittensor.extrinsics.unstaking"]], "bittensor": [[39, "module-bittensor"]], "Subpackages": [[39, "subpackages"]], "bittensor.keyfile": [[40, "module-bittensor.keyfile"]], "bittensor.metagraph": [[41, "module-bittensor.metagraph"]], "bittensor.stream": [[42, "module-bittensor.stream"]], "bittensor.subnets": [[43, "module-bittensor.subnets"]], "bittensor.subtensor": [[44, "module-bittensor.subtensor"]], "bittensor.synapse": [[45, "module-bittensor.synapse"]], "bittensor.tensor": [[46, "module-bittensor.tensor"]], "bittensor.threadpool": [[47, "module-bittensor.threadpool"]], "bittensor.types": [[48, "module-bittensor.types"]], "bittensor.wallet": [[49, "module-bittensor.wallet"]], "API Reference": [[50, "api-reference"]]}, "indexentries": {"axonmiddleware (class in bittensor.axon)": [[0, "bittensor.axon.AxonMiddleware"]], "fastapithreadedserver (class in bittensor.axon)": [[0, "bittensor.axon.FastAPIThreadedServer"]], "__del__() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.__del__"]], "__repr__() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.__repr__"]], "__str__() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.__str__"]], "_wrapper_run() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer._wrapper_run"]], "add_args() (bittensor.axon.axon class method)": [[0, "bittensor.axon.axon.add_args"]], "attach() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.attach"]], "axon (class in bittensor.axon)": [[0, "bittensor.axon.axon"]], "bittensor.axon": [[0, "module-bittensor.axon"]], "blacklist() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.blacklist"]], "check_config() (bittensor.axon.axon class method)": [[0, "bittensor.axon.axon.check_config"]], "config() (bittensor.axon.axon class method)": [[0, "bittensor.axon.axon.config"]], "create_error_response() (in module bittensor.axon)": [[0, "bittensor.axon.create_error_response"]], "default_verify() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.default_verify"]], "dispatch() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.dispatch"]], "help() (bittensor.axon.axon class method)": [[0, "bittensor.axon.axon.help"]], "info() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.info"]], "install_signal_handlers() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer.install_signal_handlers"]], "is_running (bittensor.axon.fastapithreadedserver attribute)": [[0, "bittensor.axon.FastAPIThreadedServer.is_running"]], "log_and_handle_error() (in module bittensor.axon)": [[0, "bittensor.axon.log_and_handle_error"]], "module": [[0, "module-bittensor.axon"], [1, "module-bittensor.btlogging.defines"], [2, "module-bittensor.btlogging.format"], [3, "module-bittensor.btlogging.helpers"], [4, "module-bittensor.btlogging"], [5, "module-bittensor.btlogging.loggingmachine"], [6, "module-bittensor.chain_data"], [7, "module-bittensor.cli"], [8, "module-bittensor.commands.delegates"], [9, "module-bittensor.commands.identity"], [10, "module-bittensor.commands"], [11, "module-bittensor.commands.inspect"], [12, "module-bittensor.commands.list"], [13, "module-bittensor.commands.metagraph"], [14, "module-bittensor.commands.misc"], [15, "module-bittensor.commands.network"], [16, "module-bittensor.commands.overview"], [17, "module-bittensor.commands.register"], [18, "module-bittensor.commands.root"], [19, "module-bittensor.commands.senate"], [20, "module-bittensor.commands.stake"], [21, "module-bittensor.commands.transfer"], [22, "module-bittensor.commands.unstake"], [23, "module-bittensor.commands.wallets"], [24, "module-bittensor.config"], [25, "module-bittensor.dendrite"], [26, "module-bittensor.errors"], [27, "module-bittensor.extrinsics.delegation"], [28, "module-bittensor.extrinsics"], [29, "module-bittensor.extrinsics.network"], [30, "module-bittensor.extrinsics.prometheus"], [31, "module-bittensor.extrinsics.registration"], [32, "module-bittensor.extrinsics.root"], [33, "module-bittensor.extrinsics.senate"], [34, "module-bittensor.extrinsics.serving"], [35, "module-bittensor.extrinsics.set_weights"], [36, "module-bittensor.extrinsics.staking"], [37, "module-bittensor.extrinsics.transfer"], [38, "module-bittensor.extrinsics.unstaking"], [39, "module-bittensor"], [40, "module-bittensor.keyfile"], [41, "module-bittensor.metagraph"], [42, "module-bittensor.stream"], [43, "module-bittensor.subnets"], [44, "module-bittensor.subtensor"], [45, "module-bittensor.synapse"], [46, "module-bittensor.tensor"], [47, "module-bittensor.threadpool"], [48, "module-bittensor.types"], [49, "module-bittensor.wallet"]], "preprocess() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.preprocess"]], "priority() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.priority"]], "run() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.run"]], "run_in_thread() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer.run_in_thread"]], "serve() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.serve"]], "should_exit (bittensor.axon.fastapithreadedserver attribute)": [[0, "bittensor.axon.FastAPIThreadedServer.should_exit"]], "start() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer.start"]], "start() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.start"]], "stop() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer.stop"]], "stop() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.stop"]], "synapse_to_response() (bittensor.axon.axonmiddleware class method)": [[0, "bittensor.axon.AxonMiddleware.synapse_to_response"]], "to_string() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.to_string"]], "verify() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.verify"]], "verify_body_integrity() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.verify_body_integrity"]], "base_log_format (in module bittensor.btlogging.defines)": [[1, "bittensor.btlogging.defines.BASE_LOG_FORMAT"]], "bittensor_logger_name (in module bittensor.btlogging.defines)": [[1, "bittensor.btlogging.defines.BITTENSOR_LOGGER_NAME"]], "date_format (in module bittensor.btlogging.defines)": [[1, "bittensor.btlogging.defines.DATE_FORMAT"]], "default_log_backup_count (in module bittensor.btlogging.defines)": [[1, "bittensor.btlogging.defines.DEFAULT_LOG_BACKUP_COUNT"]], "default_log_file_name (in module bittensor.btlogging.defines)": [[1, "bittensor.btlogging.defines.DEFAULT_LOG_FILE_NAME"]], "default_max_rotating_log_file_size (in module bittensor.btlogging.defines)": [[1, "bittensor.btlogging.defines.DEFAULT_MAX_ROTATING_LOG_FILE_SIZE"]], "trace_log_format (in module bittensor.btlogging.defines)": [[1, "bittensor.btlogging.defines.TRACE_LOG_FORMAT"]], "bittensor.btlogging.defines": [[1, "module-bittensor.btlogging.defines"]], "btfileformatter (class in bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.BtFileFormatter"]], "btstreamformatter (class in bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.BtStreamFormatter"]], "default_log_format (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.DEFAULT_LOG_FORMAT"]], "default_trace_format (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.DEFAULT_TRACE_FORMAT"]], "log_formats (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.LOG_FORMATS"]], "log_trace_formats (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.LOG_TRACE_FORMATS"]], "success_level_num (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.SUCCESS_LEVEL_NUM"]], "trace_level_num (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.TRACE_LEVEL_NUM"]], "_success() (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format._success"]], "_trace() (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format._trace"]], "bittensor.btlogging.format": [[2, "module-bittensor.btlogging.format"]], "color_map (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.color_map"]], "emoji_map (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.emoji_map"]], "format() (bittensor.btlogging.format.btfileformatter method)": [[2, "bittensor.btlogging.format.BtFileFormatter.format"]], "format() (bittensor.btlogging.format.btstreamformatter method)": [[2, "bittensor.btlogging.format.BtStreamFormatter.format"]], "formattime() (bittensor.btlogging.format.btfileformatter method)": [[2, "bittensor.btlogging.format.BtFileFormatter.formatTime"]], "formattime() (bittensor.btlogging.format.btstreamformatter method)": [[2, "bittensor.btlogging.format.BtStreamFormatter.formatTime"]], "log_level_color_prefix (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.log_level_color_prefix"]], "set_trace() (bittensor.btlogging.format.btstreamformatter method)": [[2, "bittensor.btlogging.format.BtStreamFormatter.set_trace"]], "all_logger_names() (in module bittensor.btlogging.helpers)": [[3, "bittensor.btlogging.helpers.all_logger_names"]], "all_loggers() (in module bittensor.btlogging.helpers)": [[3, "bittensor.btlogging.helpers.all_loggers"]], "bittensor.btlogging.helpers": [[3, "module-bittensor.btlogging.helpers"]], "get_max_logger_name_length() (in module bittensor.btlogging.helpers)": [[3, "bittensor.btlogging.helpers.get_max_logger_name_length"]], "debug (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.Debug"]], "default (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.Default"]], "disabled (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.Disabled"]], "loggingmachine (class in bittensor.btlogging)": [[4, "bittensor.btlogging.LoggingMachine"]], "trace (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.Trace"]], "__call__() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.__call__"]], "__trace_on__ (bittensor.btlogging.loggingmachine property)": [[4, "bittensor.btlogging.LoggingMachine.__trace_on__"]], "_configure_handlers() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine._configure_handlers"]], "_create_and_start_listener() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine._create_and_start_listener"]], "_create_file_handler() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine._create_file_handler"]], "_deinitialize_bt_logger() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine._deinitialize_bt_logger"]], "_enable_file_logging() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine._enable_file_logging"]], "_initialize_bt_logger() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine._initialize_bt_logger"]], "add_args() (bittensor.btlogging.loggingmachine class method)": [[4, "bittensor.btlogging.LoggingMachine.add_args"]], "after_disable_debug() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.after_disable_debug"]], "after_disable_trace() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.after_disable_trace"]], "after_enable_debug() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.after_enable_debug"]], "after_enable_default() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.after_enable_default"]], "after_enable_trace() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.after_enable_trace"]], "after_transition() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.after_transition"]], "before_disable_debug() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.before_disable_debug"]], "before_disable_logging() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.before_disable_logging"]], "before_disable_trace() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.before_disable_trace"]], "before_enable_debug() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.before_enable_debug"]], "before_enable_default() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.before_enable_default"]], "before_enable_trace() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.before_enable_trace"]], "before_transition() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.before_transition"]], "bittensor.btlogging": [[4, "module-bittensor.btlogging"]], "check_config() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.check_config"]], "config() (bittensor.btlogging.loggingmachine class method)": [[4, "bittensor.btlogging.LoggingMachine.config"]], "critical() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.critical"]], "debug() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.debug"]], "deregister_primary_logger() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.deregister_primary_logger"]], "disable_debug (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.disable_debug"]], "disable_logging (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.disable_logging"]], "disable_third_party_loggers() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.disable_third_party_loggers"]], "disable_trace (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.disable_trace"]], "enable_debug (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.enable_debug"]], "enable_default (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.enable_default"]], "enable_third_party_loggers() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.enable_third_party_loggers"]], "enable_trace (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.enable_trace"]], "error() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.error"]], "exception() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.exception"]], "get_config() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.get_config"]], "get_level() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.get_level"]], "get_queue() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.get_queue"]], "help() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.help"]], "info() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.info"]], "logging (in module bittensor.btlogging)": [[4, "bittensor.btlogging.logging"]], "off() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.off"]], "on() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.on"]], "register_primary_logger() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.register_primary_logger"]], "set_config() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.set_config"]], "set_debug() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.set_debug"]], "set_trace() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.set_trace"]], "success() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.success"]], "trace() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.trace"]], "warning() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.warning"]], "debug (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.Debug"]], "default (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.Default"]], "disabled (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.Disabled"]], "loggingconfig (class in bittensor.btlogging.loggingmachine)": [[5, "bittensor.btlogging.loggingmachine.LoggingConfig"]], "loggingmachine (class in bittensor.btlogging.loggingmachine)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine"]], "trace (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.Trace"]], "__call__() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.__call__"]], "__trace_on__ (bittensor.btlogging.loggingmachine.loggingmachine property)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.__trace_on__"]], "_configure_handlers() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._configure_handlers"]], "_create_and_start_listener() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._create_and_start_listener"]], "_create_file_handler() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._create_file_handler"]], "_deinitialize_bt_logger() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._deinitialize_bt_logger"]], "_enable_file_logging() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._enable_file_logging"]], "_initialize_bt_logger() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._initialize_bt_logger"]], "add_args() (bittensor.btlogging.loggingmachine.loggingmachine class method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.add_args"]], "after_disable_debug() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.after_disable_debug"]], "after_disable_trace() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.after_disable_trace"]], "after_enable_debug() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.after_enable_debug"]], "after_enable_default() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.after_enable_default"]], "after_enable_trace() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.after_enable_trace"]], "after_transition() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.after_transition"]], "before_disable_debug() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.before_disable_debug"]], "before_disable_logging() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.before_disable_logging"]], "before_disable_trace() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.before_disable_trace"]], "before_enable_debug() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.before_enable_debug"]], "before_enable_default() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.before_enable_default"]], "before_enable_trace() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.before_enable_trace"]], "before_transition() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.before_transition"]], "bittensor.btlogging.loggingmachine": [[5, "module-bittensor.btlogging.loggingmachine"]], "check_config() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.check_config"]], "config() (bittensor.btlogging.loggingmachine.loggingmachine class method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.config"]], "critical() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.critical"]], "debug (bittensor.btlogging.loggingmachine.loggingconfig attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingConfig.debug"]], "debug() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.debug"]], "deregister_primary_logger() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.deregister_primary_logger"]], "disable_debug (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.disable_debug"]], "disable_logging (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.disable_logging"]], "disable_third_party_loggers() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.disable_third_party_loggers"]], "disable_trace (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.disable_trace"]], "enable_debug (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.enable_debug"]], "enable_default (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.enable_default"]], "enable_third_party_loggers() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.enable_third_party_loggers"]], "enable_trace (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.enable_trace"]], "error() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.error"]], "exception() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.exception"]], "get_config() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.get_config"]], "get_level() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.get_level"]], "get_queue() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.get_queue"]], "help() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.help"]], "info() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.info"]], "logging_dir (bittensor.btlogging.loggingmachine.loggingconfig attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingConfig.logging_dir"]], "off() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.off"]], "on() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.on"]], "record_log (bittensor.btlogging.loggingmachine.loggingconfig attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingConfig.record_log"]], "register_primary_logger() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.register_primary_logger"]], "set_config() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.set_config"]], "set_debug() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.set_debug"]], "set_trace() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.set_trace"]], "success() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.success"]], "trace (bittensor.btlogging.loggingmachine.loggingconfig attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingConfig.trace"]], "trace() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.trace"]], "warning() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.warning"]], "axoninfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.AxonInfo"]], "chaindatatype (class in bittensor.chain_data)": [[6, "bittensor.chain_data.ChainDataType"]], "delegateinfo (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.DelegateInfo"]], "delegateinfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.DelegateInfo"]], "delegateinfolite (class in bittensor.chain_data)": [[6, "bittensor.chain_data.DelegateInfoLite"]], "delegatedinfo (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.DelegatedInfo"]], "ipinfo (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.IPInfo"]], "ipinfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.IPInfo"]], "neuroninfo (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.NeuronInfo"]], "neuroninfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.NeuronInfo"]], "neuroninfolite (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.NeuronInfoLite"]], "neuroninfolite (class in bittensor.chain_data)": [[6, "bittensor.chain_data.NeuronInfoLite"]], "prometheusinfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.PrometheusInfo"]], "proposalcalldata (in module bittensor.chain_data)": [[6, "bittensor.chain_data.ProposalCallData"]], "proposalvotedata (class in bittensor.chain_data)": [[6, "bittensor.chain_data.ProposalVoteData"]], "raopertao (in module bittensor.chain_data)": [[6, "bittensor.chain_data.RAOPERTAO"]], "stakeinfo (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.StakeInfo"]], "stakeinfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.StakeInfo"]], "subnethyperparameters (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.SubnetHyperparameters"]], "subnethyperparameters (class in bittensor.chain_data)": [[6, "bittensor.chain_data.SubnetHyperparameters"]], "subnetinfo (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.SubnetInfo"]], "subnetinfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.SubnetInfo"]], "u16_max (in module bittensor.chain_data)": [[6, "bittensor.chain_data.U16_MAX"]], "u64_max (in module bittensor.chain_data)": [[6, "bittensor.chain_data.U64_MAX"]], "__eq__() (bittensor.chain_data.axoninfo method)": [[6, "bittensor.chain_data.AxonInfo.__eq__"]], "__repr__() (bittensor.chain_data.axoninfo method)": [[6, "bittensor.chain_data.AxonInfo.__repr__"]], "__str__() (bittensor.chain_data.axoninfo method)": [[6, "bittensor.chain_data.AxonInfo.__str__"]], "_from_parameter_dict() (bittensor.chain_data.axoninfo class method)": [[6, "bittensor.chain_data.AxonInfo._from_parameter_dict"]], "_from_parameter_dict_numpy() (bittensor.chain_data.ipinfo class method)": [[6, "bittensor.chain_data.IPInfo._from_parameter_dict_numpy"]], "_from_parameter_dict_numpy() (bittensor.chain_data.subnethyperparameters class method)": [[6, "bittensor.chain_data.SubnetHyperparameters._from_parameter_dict_numpy"]], "_from_parameter_dict_numpy() (bittensor.chain_data.subnetinfo class method)": [[6, "bittensor.chain_data.SubnetInfo._from_parameter_dict_numpy"]], "_from_parameter_dict_torch() (bittensor.chain_data.ipinfo class method)": [[6, "bittensor.chain_data.IPInfo._from_parameter_dict_torch"]], "_from_parameter_dict_torch() (bittensor.chain_data.subnethyperparameters class method)": [[6, "bittensor.chain_data.SubnetHyperparameters._from_parameter_dict_torch"]], "_from_parameter_dict_torch() (bittensor.chain_data.subnetinfo class method)": [[6, "bittensor.chain_data.SubnetInfo._from_parameter_dict_torch"]], "_neuron_dict_to_namespace() (bittensor.chain_data.neuroninfo static method)": [[6, "bittensor.chain_data.NeuronInfo._neuron_dict_to_namespace"]], "_neuron_dict_to_namespace() (bittensor.chain_data.neuroninfolite static method)": [[6, "bittensor.chain_data.NeuronInfoLite._neuron_dict_to_namespace"]], "_null_neuron() (bittensor.chain_data.neuroninfo static method)": [[6, "bittensor.chain_data.NeuronInfo._null_neuron"]], "_null_neuron() (bittensor.chain_data.neuroninfolite static method)": [[6, "bittensor.chain_data.NeuronInfoLite._null_neuron"]], "_to_parameter_dict() (bittensor.chain_data.axoninfo method)": [[6, "bittensor.chain_data.AxonInfo._to_parameter_dict"]], "_to_parameter_dict() (bittensor.chain_data.ipinfo method)": [[6, "bittensor.chain_data.IPInfo._to_parameter_dict"]], "_to_parameter_dict() (bittensor.chain_data.subnetinfo method)": [[6, "bittensor.chain_data.SubnetInfo._to_parameter_dict"]], "_to_parameter_dict_torch() (bittensor.chain_data.subnethyperparameters method)": [[6, "bittensor.chain_data.SubnetHyperparameters._to_parameter_dict_torch"]], "active (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.active"]], "active (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.active"]], "activity_cutoff (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.activity_cutoff"]], "adjustment_alpha (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.adjustment_alpha"]], "adjustment_interval (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.adjustment_interval"]], "axon_info (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.axon_info"]], "axon_info (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.axon_info"]], "ayes (bittensor.chain_data.proposalvotedata attribute)": [[6, "bittensor.chain_data.ProposalVoteData.ayes"]], "bittensor.chain_data": [[6, "module-bittensor.chain_data"]], "block (bittensor.chain_data.prometheusinfo attribute)": [[6, "bittensor.chain_data.PrometheusInfo.block"]], "blocks_since_epoch (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.blocks_since_epoch"]], "bonds (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.bonds"]], "bonds_moving_avg (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.bonds_moving_avg"]], "burn (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.burn"]], "coldkey (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.coldkey"]], "coldkey (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.coldkey"]], "coldkey (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.coldkey"]], "coldkey_ss58 (bittensor.chain_data.stakeinfo attribute)": [[6, "bittensor.chain_data.StakeInfo.coldkey_ss58"]], "connection_requirements (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.connection_requirements"]], "consensus (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.consensus"]], "consensus (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.consensus"]], "custom_rpc_type_registry (in module bittensor.chain_data)": [[6, "bittensor.chain_data.custom_rpc_type_registry"]], "delegate_ss58 (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.delegate_ss58"]], "delegated_list_from_vec_u8() (bittensor.chain_data.delegateinfo class method)": [[6, "bittensor.chain_data.DelegateInfo.delegated_list_from_vec_u8"]], "difficulty (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.difficulty"]], "difficulty (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.difficulty"]], "dividends (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.dividends"]], "dividends (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.dividends"]], "emission (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.emission"]], "emission (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.emission"]], "emission_value (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.emission_value"]], "encode() (bittensor.chain_data.ipinfo method)": [[6, "bittensor.chain_data.IPInfo.encode"]], "end (bittensor.chain_data.proposalvotedata attribute)": [[6, "bittensor.chain_data.ProposalVoteData.end"]], "fix_decoded_values() (bittensor.chain_data.delegateinfo class method)": [[6, "bittensor.chain_data.DelegateInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.chain_data.ipinfo class method)": [[6, "bittensor.chain_data.IPInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.chain_data.neuroninfo class method)": [[6, "bittensor.chain_data.NeuronInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.chain_data.neuroninfolite class method)": [[6, "bittensor.chain_data.NeuronInfoLite.fix_decoded_values"]], "fix_decoded_values() (bittensor.chain_data.prometheusinfo class method)": [[6, "bittensor.chain_data.PrometheusInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.chain_data.stakeinfo class method)": [[6, "bittensor.chain_data.StakeInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.chain_data.subnethyperparameters class method)": [[6, "bittensor.chain_data.SubnetHyperparameters.fix_decoded_values"]], "fix_decoded_values() (bittensor.chain_data.subnetinfo class method)": [[6, "bittensor.chain_data.SubnetInfo.fix_decoded_values"]], "from_neuron_info() (bittensor.chain_data.axoninfo class method)": [[6, "bittensor.chain_data.AxonInfo.from_neuron_info"]], "from_parameter_dict() (bittensor.chain_data.axoninfo class method)": [[6, "bittensor.chain_data.AxonInfo.from_parameter_dict"]], "from_parameter_dict() (bittensor.chain_data.ipinfo class method)": [[6, "bittensor.chain_data.IPInfo.from_parameter_dict"]], "from_parameter_dict() (bittensor.chain_data.subnethyperparameters class method)": [[6, "bittensor.chain_data.SubnetHyperparameters.from_parameter_dict"]], "from_parameter_dict() (bittensor.chain_data.subnetinfo class method)": [[6, "bittensor.chain_data.SubnetInfo.from_parameter_dict"]], "from_scale_encoding() (in module bittensor.chain_data)": [[6, "bittensor.chain_data.from_scale_encoding"]], "from_scale_encoding_using_type_string() (in module bittensor.chain_data)": [[6, "bittensor.chain_data.from_scale_encoding_using_type_string"]], "from_string() (bittensor.chain_data.axoninfo class method)": [[6, "bittensor.chain_data.AxonInfo.from_string"]], "from_vec_u8() (bittensor.chain_data.delegateinfo class method)": [[6, "bittensor.chain_data.DelegateInfo.from_vec_u8"]], "from_vec_u8() (bittensor.chain_data.ipinfo class method)": [[6, "bittensor.chain_data.IPInfo.from_vec_u8"]], "from_vec_u8() (bittensor.chain_data.neuroninfo class method)": [[6, "bittensor.chain_data.NeuronInfo.from_vec_u8"]], "from_vec_u8() (bittensor.chain_data.neuroninfolite class method)": [[6, "bittensor.chain_data.NeuronInfoLite.from_vec_u8"]], "from_vec_u8() (bittensor.chain_data.stakeinfo class method)": [[6, "bittensor.chain_data.StakeInfo.from_vec_u8"]], "from_vec_u8() (bittensor.chain_data.subnethyperparameters class method)": [[6, "bittensor.chain_data.SubnetHyperparameters.from_vec_u8"]], "from_vec_u8() (bittensor.chain_data.subnetinfo class method)": [[6, "bittensor.chain_data.SubnetInfo.from_vec_u8"]], "from_weights_bonds_and_neuron_lite() (bittensor.chain_data.neuroninfo class method)": [[6, "bittensor.chain_data.NeuronInfo.from_weights_bonds_and_neuron_lite"]], "hotkey (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.hotkey"]], "hotkey (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.hotkey"]], "hotkey (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.hotkey"]], "hotkey_ss58 (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.hotkey_ss58"]], "hotkey_ss58 (bittensor.chain_data.stakeinfo attribute)": [[6, "bittensor.chain_data.StakeInfo.hotkey_ss58"]], "immunity_period (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.immunity_period"]], "immunity_period (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.immunity_period"]], "incentive (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.incentive"]], "incentive (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.incentive"]], "index (bittensor.chain_data.proposalvotedata attribute)": [[6, "bittensor.chain_data.ProposalVoteData.index"]], "ip (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.ip"]], "ip (bittensor.chain_data.ipinfo attribute)": [[6, "bittensor.chain_data.IPInfo.ip"]], "ip (bittensor.chain_data.prometheusinfo attribute)": [[6, "bittensor.chain_data.PrometheusInfo.ip"]], "ip_str() (bittensor.chain_data.axoninfo method)": [[6, "bittensor.chain_data.AxonInfo.ip_str"]], "ip_type (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.ip_type"]], "ip_type (bittensor.chain_data.ipinfo attribute)": [[6, "bittensor.chain_data.IPInfo.ip_type"]], "ip_type (bittensor.chain_data.prometheusinfo attribute)": [[6, "bittensor.chain_data.PrometheusInfo.ip_type"]], "is_null (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.is_null"]], "is_null (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.is_null"]], "is_serving (bittensor.chain_data.axoninfo property)": [[6, "bittensor.chain_data.AxonInfo.is_serving"]], "kappa (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.kappa"]], "kappa (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.kappa"]], "last_update (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.last_update"]], "last_update (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.last_update"]], "list_from_vec_u8() (bittensor.chain_data.delegateinfo class method)": [[6, "bittensor.chain_data.DelegateInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.chain_data.ipinfo class method)": [[6, "bittensor.chain_data.IPInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.chain_data.neuroninfo class method)": [[6, "bittensor.chain_data.NeuronInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.chain_data.neuroninfolite class method)": [[6, "bittensor.chain_data.NeuronInfoLite.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.chain_data.stakeinfo class method)": [[6, "bittensor.chain_data.StakeInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.chain_data.subnethyperparameters class method)": [[6, "bittensor.chain_data.SubnetHyperparameters.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.chain_data.subnetinfo class method)": [[6, "bittensor.chain_data.SubnetInfo.list_from_vec_u8"]], "list_of_tuple_from_vec_u8() (bittensor.chain_data.stakeinfo class method)": [[6, "bittensor.chain_data.StakeInfo.list_of_tuple_from_vec_u8"]], "max_allowed_validators (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.max_allowed_validators"]], "max_burn (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.max_burn"]], "max_difficulty (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.max_difficulty"]], "max_n (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.max_n"]], "max_regs_per_block (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.max_regs_per_block"]], "max_validators (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.max_validators"]], "max_weight_limit (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.max_weight_limit"]], "max_weight_limit (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.max_weight_limit"]], "min_allowed_weights (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.min_allowed_weights"]], "min_allowed_weights (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.min_allowed_weights"]], "min_burn (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.min_burn"]], "min_difficulty (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.min_difficulty"]], "modality (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.modality"]], "nays (bittensor.chain_data.proposalvotedata attribute)": [[6, "bittensor.chain_data.ProposalVoteData.nays"]], "netuid (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.netuid"]], "netuid (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.netuid"]], "netuid (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.netuid"]], "nominators (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.nominators"]], "nominators (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.nominators"]], "owner_ss58 (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.owner_ss58"]], "owner_ss58 (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.owner_ss58"]], "owner_ss58 (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.owner_ss58"]], "placeholder1 (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.placeholder1"]], "placeholder2 (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.placeholder2"]], "port (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.port"]], "port (bittensor.chain_data.prometheusinfo attribute)": [[6, "bittensor.chain_data.PrometheusInfo.port"]], "prometheus_info (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.prometheus_info"]], "prometheus_info (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.prometheus_info"]], "protocol (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.protocol"]], "protocol (bittensor.chain_data.ipinfo attribute)": [[6, "bittensor.chain_data.IPInfo.protocol"]], "pruning_score (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.pruning_score"]], "pruning_score (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.pruning_score"]], "rank (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.rank"]], "rank (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.rank"]], "registration_allowed (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.registration_allowed"]], "registrations (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.registrations"]], "registrations (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.registrations"]], "return_per_1000 (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.return_per_1000"]], "return_per_1000 (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.return_per_1000"]], "rho (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.rho"]], "rho (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.rho"]], "scaling_law_power (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.scaling_law_power"]], "serving_rate_limit (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.serving_rate_limit"]], "stake (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.stake"]], "stake (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.stake"]], "stake (bittensor.chain_data.stakeinfo attribute)": [[6, "bittensor.chain_data.StakeInfo.stake"]], "stake_dict (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.stake_dict"]], "stake_dict (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.stake_dict"]], "subnetwork_n (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.subnetwork_n"]], "take (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.take"]], "take (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.take"]], "target_regs_per_interval (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.target_regs_per_interval"]], "tempo (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.tempo"]], "tempo (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.tempo"]], "threshold (bittensor.chain_data.proposalvotedata attribute)": [[6, "bittensor.chain_data.ProposalVoteData.threshold"]], "to_parameter_dict() (bittensor.chain_data.axoninfo method)": [[6, "bittensor.chain_data.AxonInfo.to_parameter_dict"]], "to_parameter_dict() (bittensor.chain_data.ipinfo method)": [[6, "bittensor.chain_data.IPInfo.to_parameter_dict"]], "to_parameter_dict() (bittensor.chain_data.subnethyperparameters method)": [[6, "bittensor.chain_data.SubnetHyperparameters.to_parameter_dict"]], "to_parameter_dict() (bittensor.chain_data.subnetinfo method)": [[6, "bittensor.chain_data.SubnetInfo.to_parameter_dict"]], "to_string() (bittensor.chain_data.axoninfo method)": [[6, "bittensor.chain_data.AxonInfo.to_string"]], "total_daily_return (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.total_daily_return"]], "total_daily_return (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.total_daily_return"]], "total_stake (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.total_stake"]], "total_stake (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.total_stake"]], "total_stake (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.total_stake"]], "trust (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.trust"]], "trust (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.trust"]], "uid (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.uid"]], "uid (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.uid"]], "validator_permit (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.validator_permit"]], "validator_permit (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.validator_permit"]], "validator_permits (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.validator_permits"]], "validator_permits (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.validator_permits"]], "validator_trust (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.validator_trust"]], "validator_trust (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.validator_trust"]], "version (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.version"]], "version (bittensor.chain_data.prometheusinfo attribute)": [[6, "bittensor.chain_data.PrometheusInfo.version"]], "weights (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.weights"]], "weights_rate_limit (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.weights_rate_limit"]], "weights_version (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.weights_version"]], "alias_to_command (in module bittensor.cli)": [[7, "bittensor.cli.ALIAS_TO_COMMAND"]], "clierrorparser (class in bittensor.cli)": [[7, "bittensor.cli.CLIErrorParser"]], "commands (in module bittensor.cli)": [[7, "bittensor.cli.COMMANDS"]], "__create_parser__() (bittensor.cli.cli static method)": [[7, "bittensor.cli.cli.__create_parser__"]], "bittensor.cli": [[7, "module-bittensor.cli"]], "check_config() (bittensor.cli.cli static method)": [[7, "bittensor.cli.cli.check_config"]], "cli (class in bittensor.cli)": [[7, "bittensor.cli.cli"]], "console (in module bittensor.cli)": [[7, "bittensor.cli.console"]], "create_config() (bittensor.cli.cli static method)": [[7, "bittensor.cli.cli.create_config"]], "error() (bittensor.cli.clierrorparser method)": [[7, "bittensor.cli.CLIErrorParser.error"]], "run() (bittensor.cli.cli method)": [[7, "bittensor.cli.cli.run"]], "delegatestakecommand (class in bittensor.commands.delegates)": [[8, "bittensor.commands.delegates.DelegateStakeCommand"]], "delegateunstakecommand (class in bittensor.commands.delegates)": [[8, "bittensor.commands.delegates.DelegateUnstakeCommand"]], "listdelegatescommand (class in bittensor.commands.delegates)": [[8, "bittensor.commands.delegates.ListDelegatesCommand"]], "listdelegateslitecommand (class in bittensor.commands.delegates)": [[8, "bittensor.commands.delegates.ListDelegatesLiteCommand"]], "mydelegatescommand (class in bittensor.commands.delegates)": [[8, "bittensor.commands.delegates.MyDelegatesCommand"]], "nominatecommand (class in bittensor.commands.delegates)": [[8, "bittensor.commands.delegates.NominateCommand"]], "settakecommand (class in bittensor.commands.delegates)": [[8, "bittensor.commands.delegates.SetTakeCommand"]], "_get_coldkey_wallets_for_path() (in module bittensor.commands.delegates)": [[8, "bittensor.commands.delegates._get_coldkey_wallets_for_path"]], "_run() (bittensor.commands.delegates.delegateunstakecommand method)": [[8, "bittensor.commands.delegates.DelegateUnstakeCommand._run"]], "_run() (bittensor.commands.delegates.listdelegatescommand static method)": [[8, "bittensor.commands.delegates.ListDelegatesCommand._run"]], "_run() (bittensor.commands.delegates.listdelegateslitecommand static method)": [[8, "bittensor.commands.delegates.ListDelegatesLiteCommand._run"]], "_run() (bittensor.commands.delegates.mydelegatescommand static method)": [[8, "bittensor.commands.delegates.MyDelegatesCommand._run"]], "_run() (bittensor.commands.delegates.nominatecommand static method)": [[8, "bittensor.commands.delegates.NominateCommand._run"]], "_run() (bittensor.commands.delegates.settakecommand static method)": [[8, "bittensor.commands.delegates.SetTakeCommand._run"]], "add_args() (bittensor.commands.delegates.delegatestakecommand static method)": [[8, "bittensor.commands.delegates.DelegateStakeCommand.add_args"]], "add_args() (bittensor.commands.delegates.delegateunstakecommand static method)": [[8, "bittensor.commands.delegates.DelegateUnstakeCommand.add_args"]], "add_args() (bittensor.commands.delegates.listdelegatescommand static method)": [[8, "bittensor.commands.delegates.ListDelegatesCommand.add_args"]], "add_args() (bittensor.commands.delegates.listdelegateslitecommand static method)": [[8, "bittensor.commands.delegates.ListDelegatesLiteCommand.add_args"]], "add_args() (bittensor.commands.delegates.mydelegatescommand static method)": [[8, "bittensor.commands.delegates.MyDelegatesCommand.add_args"]], "add_args() (bittensor.commands.delegates.nominatecommand static method)": [[8, "bittensor.commands.delegates.NominateCommand.add_args"]], "add_args() (bittensor.commands.delegates.settakecommand static method)": [[8, "bittensor.commands.delegates.SetTakeCommand.add_args"]], "bittensor.commands.delegates": [[8, "module-bittensor.commands.delegates"]], "check_config() (bittensor.commands.delegates.delegatestakecommand static method)": [[8, "bittensor.commands.delegates.DelegateStakeCommand.check_config"]], "check_config() (bittensor.commands.delegates.delegateunstakecommand static method)": [[8, "bittensor.commands.delegates.DelegateUnstakeCommand.check_config"]], "check_config() (bittensor.commands.delegates.listdelegatescommand static method)": [[8, "bittensor.commands.delegates.ListDelegatesCommand.check_config"]], "check_config() (bittensor.commands.delegates.listdelegateslitecommand static method)": [[8, "bittensor.commands.delegates.ListDelegatesLiteCommand.check_config"]], "check_config() (bittensor.commands.delegates.mydelegatescommand static method)": [[8, "bittensor.commands.delegates.MyDelegatesCommand.check_config"]], "check_config() (bittensor.commands.delegates.nominatecommand static method)": [[8, "bittensor.commands.delegates.NominateCommand.check_config"]], "check_config() (bittensor.commands.delegates.settakecommand static method)": [[8, "bittensor.commands.delegates.SetTakeCommand.check_config"]], "console (in module bittensor.commands.delegates)": [[8, "bittensor.commands.delegates.console"]], "run() (bittensor.commands.delegates.delegatestakecommand static method)": [[8, "bittensor.commands.delegates.DelegateStakeCommand.run"]], "run() (bittensor.commands.delegates.delegateunstakecommand static method)": [[8, "bittensor.commands.delegates.DelegateUnstakeCommand.run"]], "run() (bittensor.commands.delegates.listdelegatescommand static method)": [[8, "bittensor.commands.delegates.ListDelegatesCommand.run"]], "run() (bittensor.commands.delegates.listdelegateslitecommand static method)": [[8, "bittensor.commands.delegates.ListDelegatesLiteCommand.run"]], "run() (bittensor.commands.delegates.mydelegatescommand static method)": [[8, "bittensor.commands.delegates.MyDelegatesCommand.run"]], "run() (bittensor.commands.delegates.nominatecommand static method)": [[8, "bittensor.commands.delegates.NominateCommand.run"]], "run() (bittensor.commands.delegates.settakecommand static method)": [[8, "bittensor.commands.delegates.SetTakeCommand.run"]], "show_delegates() (in module bittensor.commands.delegates)": [[8, "bittensor.commands.delegates.show_delegates"]], "show_delegates_lite() (in module bittensor.commands.delegates)": [[8, "bittensor.commands.delegates.show_delegates_lite"]], "getidentitycommand (class in bittensor.commands.identity)": [[9, "bittensor.commands.identity.GetIdentityCommand"]], "setidentitycommand (class in bittensor.commands.identity)": [[9, "bittensor.commands.identity.SetIdentityCommand"]], "_run() (bittensor.commands.identity.getidentitycommand method)": [[9, "bittensor.commands.identity.GetIdentityCommand._run"]], "_run() (bittensor.commands.identity.setidentitycommand method)": [[9, "bittensor.commands.identity.SetIdentityCommand._run"]], "add_args() (bittensor.commands.identity.getidentitycommand static method)": [[9, "bittensor.commands.identity.GetIdentityCommand.add_args"]], "add_args() (bittensor.commands.identity.setidentitycommand static method)": [[9, "bittensor.commands.identity.SetIdentityCommand.add_args"]], "bittensor.commands.identity": [[9, "module-bittensor.commands.identity"]], "check_config() (bittensor.commands.identity.getidentitycommand static method)": [[9, "bittensor.commands.identity.GetIdentityCommand.check_config"]], "check_config() (bittensor.commands.identity.setidentitycommand static method)": [[9, "bittensor.commands.identity.SetIdentityCommand.check_config"]], "run() (bittensor.commands.identity.getidentitycommand method)": [[9, "bittensor.commands.identity.GetIdentityCommand.run"]], "run() (bittensor.commands.identity.setidentitycommand method)": [[9, "bittensor.commands.identity.SetIdentityCommand.run"]], "autocompletecommand (class in bittensor.commands)": [[10, "bittensor.commands.AutocompleteCommand"]], "delegatestakecommand (class in bittensor.commands)": [[10, "bittensor.commands.DelegateStakeCommand"]], "delegateunstakecommand (class in bittensor.commands)": [[10, "bittensor.commands.DelegateUnstakeCommand"]], "getidentitycommand (class in bittensor.commands)": [[10, "bittensor.commands.GetIdentityCommand"]], "getwallethistorycommand (class in bittensor.commands)": [[10, "bittensor.commands.GetWalletHistoryCommand"]], "inspectcommand (class in bittensor.commands)": [[10, "bittensor.commands.InspectCommand"]], "listcommand (class in bittensor.commands)": [[10, "bittensor.commands.ListCommand"]], "listdelegatescommand (class in bittensor.commands)": [[10, "bittensor.commands.ListDelegatesCommand"]], "listdelegateslitecommand (class in bittensor.commands)": [[10, "bittensor.commands.ListDelegatesLiteCommand"]], "metagraphcommand (class in bittensor.commands)": [[10, "bittensor.commands.MetagraphCommand"]], "mydelegatescommand (class in bittensor.commands)": [[10, "bittensor.commands.MyDelegatesCommand"]], "newcoldkeycommand (class in bittensor.commands)": [[10, "bittensor.commands.NewColdkeyCommand"]], "newhotkeycommand (class in bittensor.commands)": [[10, "bittensor.commands.NewHotkeyCommand"]], "nominatecommand (class in bittensor.commands)": [[10, "bittensor.commands.NominateCommand"]], "overviewcommand (class in bittensor.commands)": [[10, "bittensor.commands.OverviewCommand"]], "powregistercommand (class in bittensor.commands)": [[10, "bittensor.commands.PowRegisterCommand"]], "proposalscommand (class in bittensor.commands)": [[10, "bittensor.commands.ProposalsCommand"]], "regencoldkeycommand (class in bittensor.commands)": [[10, "bittensor.commands.RegenColdkeyCommand"]], "regencoldkeypubcommand (class in bittensor.commands)": [[10, "bittensor.commands.RegenColdkeypubCommand"]], "regenhotkeycommand (class in bittensor.commands)": [[10, "bittensor.commands.RegenHotkeyCommand"]], "registercommand (class in bittensor.commands)": [[10, "bittensor.commands.RegisterCommand"]], "rootgetweightscommand (class in bittensor.commands)": [[10, "bittensor.commands.RootGetWeightsCommand"]], "rootlist (class in bittensor.commands)": [[10, "bittensor.commands.RootList"]], "rootregistercommand (class in bittensor.commands)": [[10, "bittensor.commands.RootRegisterCommand"]], "rootsetboostcommand (class in bittensor.commands)": [[10, "bittensor.commands.RootSetBoostCommand"]], "rootsetslashcommand (class in bittensor.commands)": [[10, "bittensor.commands.RootSetSlashCommand"]], "rootsetweightscommand (class in bittensor.commands)": [[10, "bittensor.commands.RootSetWeightsCommand"]], "runfaucetcommand (class in bittensor.commands)": [[10, "bittensor.commands.RunFaucetCommand"]], "senatecommand (class in bittensor.commands)": [[10, "bittensor.commands.SenateCommand"]], "senateleavecommand (class in bittensor.commands)": [[10, "bittensor.commands.SenateLeaveCommand"]], "senateregistercommand (class in bittensor.commands)": [[10, "bittensor.commands.SenateRegisterCommand"]], "setidentitycommand (class in bittensor.commands)": [[10, "bittensor.commands.SetIdentityCommand"]], "settakecommand (class in bittensor.commands)": [[10, "bittensor.commands.SetTakeCommand"]], "showvotescommand (class in bittensor.commands)": [[10, "bittensor.commands.ShowVotesCommand"]], "stakecommand (class in bittensor.commands)": [[10, "bittensor.commands.StakeCommand"]], "stakeshow (class in bittensor.commands)": [[10, "bittensor.commands.StakeShow"]], "swaphotkeycommand (class in bittensor.commands)": [[10, "bittensor.commands.SwapHotkeyCommand"]], "transfercommand (class in bittensor.commands)": [[10, "bittensor.commands.TransferCommand"]], "unstakecommand (class in bittensor.commands)": [[10, "bittensor.commands.UnStakeCommand"]], "updatecommand (class in bittensor.commands)": [[10, "bittensor.commands.UpdateCommand"]], "updatewalletcommand (class in bittensor.commands)": [[10, "bittensor.commands.UpdateWalletCommand"]], "votecommand (class in bittensor.commands)": [[10, "bittensor.commands.VoteCommand"]], "walletbalancecommand (class in bittensor.commands)": [[10, "bittensor.commands.WalletBalanceCommand"]], "walletcreatecommand (class in bittensor.commands)": [[10, "bittensor.commands.WalletCreateCommand"]], "_get_de_registered_stake_for_coldkey_wallet() (bittensor.commands.overviewcommand static method)": [[10, "bittensor.commands.OverviewCommand._get_de_registered_stake_for_coldkey_wallet"]], "_get_hotkeys() (bittensor.commands.overviewcommand static method)": [[10, "bittensor.commands.OverviewCommand._get_hotkeys"]], "_get_key_address() (bittensor.commands.overviewcommand static method)": [[10, "bittensor.commands.OverviewCommand._get_key_address"]], "_get_neurons_for_netuid() (bittensor.commands.overviewcommand static method)": [[10, "bittensor.commands.OverviewCommand._get_neurons_for_netuid"]], "_get_total_balance() (bittensor.commands.overviewcommand static method)": [[10, "bittensor.commands.OverviewCommand._get_total_balance"]], "_process_neuron_results() (bittensor.commands.overviewcommand static method)": [[10, "bittensor.commands.OverviewCommand._process_neuron_results"]], "_run() (bittensor.commands.delegateunstakecommand method)": [[10, "bittensor.commands.DelegateUnstakeCommand._run"]], "_run() (bittensor.commands.getidentitycommand method)": [[10, "bittensor.commands.GetIdentityCommand._run"]], "_run() (bittensor.commands.inspectcommand static method)": [[10, "bittensor.commands.InspectCommand._run"]], "_run() (bittensor.commands.listdelegatescommand static method)": [[10, "bittensor.commands.ListDelegatesCommand._run"]], "_run() (bittensor.commands.listdelegateslitecommand static method)": [[10, "bittensor.commands.ListDelegatesLiteCommand._run"]], "_run() (bittensor.commands.metagraphcommand method)": [[10, "bittensor.commands.MetagraphCommand._run"]], "_run() (bittensor.commands.mydelegatescommand static method)": [[10, "bittensor.commands.MyDelegatesCommand._run"]], "_run() (bittensor.commands.nominatecommand static method)": [[10, "bittensor.commands.NominateCommand._run"]], "_run() (bittensor.commands.overviewcommand method)": [[10, "bittensor.commands.OverviewCommand._run"]], "_run() (bittensor.commands.powregistercommand static method)": [[10, "bittensor.commands.PowRegisterCommand._run"]], "_run() (bittensor.commands.proposalscommand static method)": [[10, "bittensor.commands.ProposalsCommand._run"]], "_run() (bittensor.commands.registercommand static method)": [[10, "bittensor.commands.RegisterCommand._run"]], "_run() (bittensor.commands.rootgetweightscommand static method)": [[10, "bittensor.commands.RootGetWeightsCommand._run"]], "_run() (bittensor.commands.rootlist static method)": [[10, "bittensor.commands.RootList._run"]], "_run() (bittensor.commands.rootregistercommand static method)": [[10, "bittensor.commands.RootRegisterCommand._run"]], "_run() (bittensor.commands.rootsetboostcommand static method)": [[10, "bittensor.commands.RootSetBoostCommand._run"]], "_run() (bittensor.commands.rootsetslashcommand static method)": [[10, "bittensor.commands.RootSetSlashCommand._run"]], "_run() (bittensor.commands.rootsetweightscommand static method)": [[10, "bittensor.commands.RootSetWeightsCommand._run"]], "_run() (bittensor.commands.runfaucetcommand static method)": [[10, "bittensor.commands.RunFaucetCommand._run"]], "_run() (bittensor.commands.senatecommand static method)": [[10, "bittensor.commands.SenateCommand._run"]], "_run() (bittensor.commands.senateleavecommand static method)": [[10, "bittensor.commands.SenateLeaveCommand._run"]], "_run() (bittensor.commands.senateregistercommand static method)": [[10, "bittensor.commands.SenateRegisterCommand._run"]], "_run() (bittensor.commands.setidentitycommand method)": [[10, "bittensor.commands.SetIdentityCommand._run"]], "_run() (bittensor.commands.settakecommand static method)": [[10, "bittensor.commands.SetTakeCommand._run"]], "_run() (bittensor.commands.showvotescommand static method)": [[10, "bittensor.commands.ShowVotesCommand._run"]], "_run() (bittensor.commands.stakecommand static method)": [[10, "bittensor.commands.StakeCommand._run"]], "_run() (bittensor.commands.stakeshow static method)": [[10, "bittensor.commands.StakeShow._run"]], "_run() (bittensor.commands.swaphotkeycommand static method)": [[10, "bittensor.commands.SwapHotkeyCommand._run"]], "_run() (bittensor.commands.transfercommand static method)": [[10, "bittensor.commands.TransferCommand._run"]], "_run() (bittensor.commands.unstakecommand static method)": [[10, "bittensor.commands.UnStakeCommand._run"]], "_run() (bittensor.commands.votecommand static method)": [[10, "bittensor.commands.VoteCommand._run"]], "_run() (bittensor.commands.walletbalancecommand static method)": [[10, "bittensor.commands.WalletBalanceCommand._run"]], "add_args() (bittensor.commands.autocompletecommand static method)": [[10, "bittensor.commands.AutocompleteCommand.add_args"]], "add_args() (bittensor.commands.delegatestakecommand static method)": [[10, "bittensor.commands.DelegateStakeCommand.add_args"]], "add_args() (bittensor.commands.delegateunstakecommand static method)": [[10, "bittensor.commands.DelegateUnstakeCommand.add_args"]], "add_args() (bittensor.commands.getidentitycommand static method)": [[10, "bittensor.commands.GetIdentityCommand.add_args"]], "add_args() (bittensor.commands.getwallethistorycommand static method)": [[10, "bittensor.commands.GetWalletHistoryCommand.add_args"]], "add_args() (bittensor.commands.inspectcommand static method)": [[10, "bittensor.commands.InspectCommand.add_args"]], "add_args() (bittensor.commands.listcommand static method)": [[10, "bittensor.commands.ListCommand.add_args"]], "add_args() (bittensor.commands.listdelegatescommand static method)": [[10, "bittensor.commands.ListDelegatesCommand.add_args"]], "add_args() (bittensor.commands.listdelegateslitecommand static method)": [[10, "bittensor.commands.ListDelegatesLiteCommand.add_args"]], "add_args() (bittensor.commands.metagraphcommand static method)": [[10, "bittensor.commands.MetagraphCommand.add_args"]], "add_args() (bittensor.commands.mydelegatescommand static method)": [[10, "bittensor.commands.MyDelegatesCommand.add_args"]], "add_args() (bittensor.commands.newcoldkeycommand static method)": [[10, "bittensor.commands.NewColdkeyCommand.add_args"]], "add_args() (bittensor.commands.newhotkeycommand static method)": [[10, "bittensor.commands.NewHotkeyCommand.add_args"]], "add_args() (bittensor.commands.nominatecommand static method)": [[10, "bittensor.commands.NominateCommand.add_args"]], "add_args() (bittensor.commands.overviewcommand static method)": [[10, "bittensor.commands.OverviewCommand.add_args"]], "add_args() (bittensor.commands.powregistercommand static method)": [[10, "bittensor.commands.PowRegisterCommand.add_args"]], "add_args() (bittensor.commands.proposalscommand class method)": [[10, "bittensor.commands.ProposalsCommand.add_args"]], "add_args() (bittensor.commands.regencoldkeycommand static method)": [[10, "bittensor.commands.RegenColdkeyCommand.add_args"]], "add_args() (bittensor.commands.regencoldkeypubcommand static method)": [[10, "bittensor.commands.RegenColdkeypubCommand.add_args"]], "add_args() (bittensor.commands.regenhotkeycommand static method)": [[10, "bittensor.commands.RegenHotkeyCommand.add_args"]], "add_args() (bittensor.commands.registercommand static method)": [[10, "bittensor.commands.RegisterCommand.add_args"]], "add_args() (bittensor.commands.rootgetweightscommand static method)": [[10, "bittensor.commands.RootGetWeightsCommand.add_args"]], "add_args() (bittensor.commands.rootlist static method)": [[10, "bittensor.commands.RootList.add_args"]], "add_args() (bittensor.commands.rootregistercommand static method)": [[10, "bittensor.commands.RootRegisterCommand.add_args"]], "add_args() (bittensor.commands.rootsetboostcommand static method)": [[10, "bittensor.commands.RootSetBoostCommand.add_args"]], "add_args() (bittensor.commands.rootsetslashcommand static method)": [[10, "bittensor.commands.RootSetSlashCommand.add_args"]], "add_args() (bittensor.commands.rootsetweightscommand static method)": [[10, "bittensor.commands.RootSetWeightsCommand.add_args"]], "add_args() (bittensor.commands.runfaucetcommand static method)": [[10, "bittensor.commands.RunFaucetCommand.add_args"]], "add_args() (bittensor.commands.senatecommand class method)": [[10, "bittensor.commands.SenateCommand.add_args"]], "add_args() (bittensor.commands.senateleavecommand class method)": [[10, "bittensor.commands.SenateLeaveCommand.add_args"]], "add_args() (bittensor.commands.senateregistercommand class method)": [[10, "bittensor.commands.SenateRegisterCommand.add_args"]], "add_args() (bittensor.commands.setidentitycommand static method)": [[10, "bittensor.commands.SetIdentityCommand.add_args"]], "add_args() (bittensor.commands.settakecommand static method)": [[10, "bittensor.commands.SetTakeCommand.add_args"]], "add_args() (bittensor.commands.showvotescommand class method)": [[10, "bittensor.commands.ShowVotesCommand.add_args"]], "add_args() (bittensor.commands.stakecommand class method)": [[10, "bittensor.commands.StakeCommand.add_args"]], "add_args() (bittensor.commands.stakeshow static method)": [[10, "bittensor.commands.StakeShow.add_args"]], "add_args() (bittensor.commands.swaphotkeycommand static method)": [[10, "bittensor.commands.SwapHotkeyCommand.add_args"]], "add_args() (bittensor.commands.transfercommand static method)": [[10, "bittensor.commands.TransferCommand.add_args"]], "add_args() (bittensor.commands.unstakecommand static method)": [[10, "bittensor.commands.UnStakeCommand.add_args"]], "add_args() (bittensor.commands.updatecommand static method)": [[10, "bittensor.commands.UpdateCommand.add_args"]], "add_args() (bittensor.commands.updatewalletcommand static method)": [[10, "bittensor.commands.UpdateWalletCommand.add_args"]], "add_args() (bittensor.commands.votecommand class method)": [[10, "bittensor.commands.VoteCommand.add_args"]], "add_args() (bittensor.commands.walletbalancecommand static method)": [[10, "bittensor.commands.WalletBalanceCommand.add_args"]], "add_args() (bittensor.commands.walletcreatecommand static method)": [[10, "bittensor.commands.WalletCreateCommand.add_args"]], "bittensor.commands": [[10, "module-bittensor.commands"]], "check_config() (bittensor.commands.autocompletecommand static method)": [[10, "bittensor.commands.AutocompleteCommand.check_config"]], "check_config() (bittensor.commands.delegatestakecommand static method)": [[10, "bittensor.commands.DelegateStakeCommand.check_config"]], "check_config() (bittensor.commands.delegateunstakecommand static method)": [[10, "bittensor.commands.DelegateUnstakeCommand.check_config"]], "check_config() (bittensor.commands.getidentitycommand static method)": [[10, "bittensor.commands.GetIdentityCommand.check_config"]], "check_config() (bittensor.commands.getwallethistorycommand static method)": [[10, "bittensor.commands.GetWalletHistoryCommand.check_config"]], "check_config() (bittensor.commands.inspectcommand static method)": [[10, "bittensor.commands.InspectCommand.check_config"]], "check_config() (bittensor.commands.listcommand static method)": [[10, "bittensor.commands.ListCommand.check_config"]], "check_config() (bittensor.commands.listdelegatescommand static method)": [[10, "bittensor.commands.ListDelegatesCommand.check_config"]], "check_config() (bittensor.commands.listdelegateslitecommand static method)": [[10, "bittensor.commands.ListDelegatesLiteCommand.check_config"]], "check_config() (bittensor.commands.metagraphcommand static method)": [[10, "bittensor.commands.MetagraphCommand.check_config"]], "check_config() (bittensor.commands.mydelegatescommand static method)": [[10, "bittensor.commands.MyDelegatesCommand.check_config"]], "check_config() (bittensor.commands.newcoldkeycommand static method)": [[10, "bittensor.commands.NewColdkeyCommand.check_config"]], "check_config() (bittensor.commands.newhotkeycommand static method)": [[10, "bittensor.commands.NewHotkeyCommand.check_config"]], "check_config() (bittensor.commands.nominatecommand static method)": [[10, "bittensor.commands.NominateCommand.check_config"]], "check_config() (bittensor.commands.overviewcommand static method)": [[10, "bittensor.commands.OverviewCommand.check_config"]], "check_config() (bittensor.commands.powregistercommand static method)": [[10, "bittensor.commands.PowRegisterCommand.check_config"]], "check_config() (bittensor.commands.proposalscommand class method)": [[10, "bittensor.commands.ProposalsCommand.check_config"]], "check_config() (bittensor.commands.regencoldkeycommand static method)": [[10, "bittensor.commands.RegenColdkeyCommand.check_config"]], "check_config() (bittensor.commands.regencoldkeypubcommand static method)": [[10, "bittensor.commands.RegenColdkeypubCommand.check_config"]], "check_config() (bittensor.commands.regenhotkeycommand static method)": [[10, "bittensor.commands.RegenHotkeyCommand.check_config"]], "check_config() (bittensor.commands.registercommand static method)": [[10, "bittensor.commands.RegisterCommand.check_config"]], "check_config() (bittensor.commands.rootgetweightscommand static method)": [[10, "bittensor.commands.RootGetWeightsCommand.check_config"]], "check_config() (bittensor.commands.rootlist static method)": [[10, "bittensor.commands.RootList.check_config"]], "check_config() (bittensor.commands.rootregistercommand static method)": [[10, "bittensor.commands.RootRegisterCommand.check_config"]], "check_config() (bittensor.commands.rootsetboostcommand static method)": [[10, "bittensor.commands.RootSetBoostCommand.check_config"]], "check_config() (bittensor.commands.rootsetslashcommand static method)": [[10, "bittensor.commands.RootSetSlashCommand.check_config"]], "check_config() (bittensor.commands.rootsetweightscommand static method)": [[10, "bittensor.commands.RootSetWeightsCommand.check_config"]], "check_config() (bittensor.commands.runfaucetcommand static method)": [[10, "bittensor.commands.RunFaucetCommand.check_config"]], "check_config() (bittensor.commands.senatecommand class method)": [[10, "bittensor.commands.SenateCommand.check_config"]], "check_config() (bittensor.commands.senateleavecommand class method)": [[10, "bittensor.commands.SenateLeaveCommand.check_config"]], "check_config() (bittensor.commands.senateregistercommand class method)": [[10, "bittensor.commands.SenateRegisterCommand.check_config"]], "check_config() (bittensor.commands.setidentitycommand static method)": [[10, "bittensor.commands.SetIdentityCommand.check_config"]], "check_config() (bittensor.commands.settakecommand static method)": [[10, "bittensor.commands.SetTakeCommand.check_config"]], "check_config() (bittensor.commands.showvotescommand class method)": [[10, "bittensor.commands.ShowVotesCommand.check_config"]], "check_config() (bittensor.commands.stakecommand class method)": [[10, "bittensor.commands.StakeCommand.check_config"]], "check_config() (bittensor.commands.stakeshow static method)": [[10, "bittensor.commands.StakeShow.check_config"]], "check_config() (bittensor.commands.swaphotkeycommand static method)": [[10, "bittensor.commands.SwapHotkeyCommand.check_config"]], "check_config() (bittensor.commands.transfercommand static method)": [[10, "bittensor.commands.TransferCommand.check_config"]], "check_config() (bittensor.commands.unstakecommand class method)": [[10, "bittensor.commands.UnStakeCommand.check_config"]], "check_config() (bittensor.commands.updatecommand static method)": [[10, "bittensor.commands.UpdateCommand.check_config"]], "check_config() (bittensor.commands.updatewalletcommand static method)": [[10, "bittensor.commands.UpdateWalletCommand.check_config"]], "check_config() (bittensor.commands.votecommand class method)": [[10, "bittensor.commands.VoteCommand.check_config"]], "check_config() (bittensor.commands.walletbalancecommand static method)": [[10, "bittensor.commands.WalletBalanceCommand.check_config"]], "check_config() (bittensor.commands.walletcreatecommand static method)": [[10, "bittensor.commands.WalletCreateCommand.check_config"]], "defaults (in module bittensor.commands)": [[10, "bittensor.commands.defaults"]], "run() (bittensor.commands.autocompletecommand static method)": [[10, "bittensor.commands.AutocompleteCommand.run"]], "run() (bittensor.commands.delegatestakecommand static method)": [[10, "bittensor.commands.DelegateStakeCommand.run"]], "run() (bittensor.commands.delegateunstakecommand static method)": [[10, "bittensor.commands.DelegateUnstakeCommand.run"]], "run() (bittensor.commands.getidentitycommand method)": [[10, "bittensor.commands.GetIdentityCommand.run"]], "run() (bittensor.commands.getwallethistorycommand static method)": [[10, "bittensor.commands.GetWalletHistoryCommand.run"]], "run() (bittensor.commands.inspectcommand static method)": [[10, "bittensor.commands.InspectCommand.run"]], "run() (bittensor.commands.listcommand static method)": [[10, "bittensor.commands.ListCommand.run"]], "run() (bittensor.commands.listdelegatescommand static method)": [[10, "bittensor.commands.ListDelegatesCommand.run"]], "run() (bittensor.commands.listdelegateslitecommand static method)": [[10, "bittensor.commands.ListDelegatesLiteCommand.run"]], "run() (bittensor.commands.metagraphcommand static method)": [[10, "bittensor.commands.MetagraphCommand.run"]], "run() (bittensor.commands.mydelegatescommand static method)": [[10, "bittensor.commands.MyDelegatesCommand.run"]], "run() (bittensor.commands.newcoldkeycommand method)": [[10, "bittensor.commands.NewColdkeyCommand.run"]], "run() (bittensor.commands.newhotkeycommand method)": [[10, "bittensor.commands.NewHotkeyCommand.run"]], "run() (bittensor.commands.nominatecommand static method)": [[10, "bittensor.commands.NominateCommand.run"]], "run() (bittensor.commands.overviewcommand static method)": [[10, "bittensor.commands.OverviewCommand.run"]], "run() (bittensor.commands.powregistercommand static method)": [[10, "bittensor.commands.PowRegisterCommand.run"]], "run() (bittensor.commands.proposalscommand static method)": [[10, "bittensor.commands.ProposalsCommand.run"]], "run() (bittensor.commands.regencoldkeycommand method)": [[10, "bittensor.commands.RegenColdkeyCommand.run"]], "run() (bittensor.commands.regencoldkeypubcommand method)": [[10, "bittensor.commands.RegenColdkeypubCommand.run"]], "run() (bittensor.commands.regenhotkeycommand method)": [[10, "bittensor.commands.RegenHotkeyCommand.run"]], "run() (bittensor.commands.registercommand static method)": [[10, "bittensor.commands.RegisterCommand.run"]], "run() (bittensor.commands.rootgetweightscommand static method)": [[10, "bittensor.commands.RootGetWeightsCommand.run"]], "run() (bittensor.commands.rootlist static method)": [[10, "bittensor.commands.RootList.run"]], "run() (bittensor.commands.rootregistercommand static method)": [[10, "bittensor.commands.RootRegisterCommand.run"]], "run() (bittensor.commands.rootsetboostcommand static method)": [[10, "bittensor.commands.RootSetBoostCommand.run"]], "run() (bittensor.commands.rootsetslashcommand static method)": [[10, "bittensor.commands.RootSetSlashCommand.run"]], "run() (bittensor.commands.rootsetweightscommand static method)": [[10, "bittensor.commands.RootSetWeightsCommand.run"]], "run() (bittensor.commands.runfaucetcommand static method)": [[10, "bittensor.commands.RunFaucetCommand.run"]], "run() (bittensor.commands.senatecommand static method)": [[10, "bittensor.commands.SenateCommand.run"]], "run() (bittensor.commands.senateleavecommand static method)": [[10, "bittensor.commands.SenateLeaveCommand.run"]], "run() (bittensor.commands.senateregistercommand static method)": [[10, "bittensor.commands.SenateRegisterCommand.run"]], "run() (bittensor.commands.setidentitycommand method)": [[10, "bittensor.commands.SetIdentityCommand.run"]], "run() (bittensor.commands.settakecommand static method)": [[10, "bittensor.commands.SetTakeCommand.run"]], "run() (bittensor.commands.showvotescommand static method)": [[10, "bittensor.commands.ShowVotesCommand.run"]], "run() (bittensor.commands.stakecommand static method)": [[10, "bittensor.commands.StakeCommand.run"]], "run() (bittensor.commands.stakeshow static method)": [[10, "bittensor.commands.StakeShow.run"]], "run() (bittensor.commands.swaphotkeycommand static method)": [[10, "bittensor.commands.SwapHotkeyCommand.run"]], "run() (bittensor.commands.transfercommand static method)": [[10, "bittensor.commands.TransferCommand.run"]], "run() (bittensor.commands.unstakecommand static method)": [[10, "bittensor.commands.UnStakeCommand.run"]], "run() (bittensor.commands.updatecommand static method)": [[10, "bittensor.commands.UpdateCommand.run"]], "run() (bittensor.commands.updatewalletcommand static method)": [[10, "bittensor.commands.UpdateWalletCommand.run"]], "run() (bittensor.commands.votecommand static method)": [[10, "bittensor.commands.VoteCommand.run"]], "run() (bittensor.commands.walletbalancecommand static method)": [[10, "bittensor.commands.WalletBalanceCommand.run"]], "run() (bittensor.commands.walletcreatecommand method)": [[10, "bittensor.commands.WalletCreateCommand.run"]], "inspectcommand (class in bittensor.commands.inspect)": [[11, "bittensor.commands.inspect.InspectCommand"]], "_get_coldkey_wallets_for_path() (in module bittensor.commands.inspect)": [[11, "bittensor.commands.inspect._get_coldkey_wallets_for_path"]], "_get_hotkey_wallets_for_wallet() (in module bittensor.commands.inspect)": [[11, "bittensor.commands.inspect._get_hotkey_wallets_for_wallet"]], "_run() (bittensor.commands.inspect.inspectcommand static method)": [[11, "bittensor.commands.inspect.InspectCommand._run"]], "add_args() (bittensor.commands.inspect.inspectcommand static method)": [[11, "bittensor.commands.inspect.InspectCommand.add_args"]], "bittensor.commands.inspect": [[11, "module-bittensor.commands.inspect"]], "check_config() (bittensor.commands.inspect.inspectcommand static method)": [[11, "bittensor.commands.inspect.InspectCommand.check_config"]], "console (in module bittensor.commands.inspect)": [[11, "bittensor.commands.inspect.console"]], "run() (bittensor.commands.inspect.inspectcommand static method)": [[11, "bittensor.commands.inspect.InspectCommand.run"]], "listcommand (class in bittensor.commands.list)": [[12, "bittensor.commands.list.ListCommand"]], "add_args() (bittensor.commands.list.listcommand static method)": [[12, "bittensor.commands.list.ListCommand.add_args"]], "bittensor.commands.list": [[12, "module-bittensor.commands.list"]], "check_config() (bittensor.commands.list.listcommand static method)": [[12, "bittensor.commands.list.ListCommand.check_config"]], "console (in module bittensor.commands.list)": [[12, "bittensor.commands.list.console"]], "run() (bittensor.commands.list.listcommand static method)": [[12, "bittensor.commands.list.ListCommand.run"]], "metagraphcommand (class in bittensor.commands.metagraph)": [[13, "bittensor.commands.metagraph.MetagraphCommand"]], "_run() (bittensor.commands.metagraph.metagraphcommand method)": [[13, "bittensor.commands.metagraph.MetagraphCommand._run"]], "add_args() (bittensor.commands.metagraph.metagraphcommand static method)": [[13, "bittensor.commands.metagraph.MetagraphCommand.add_args"]], "bittensor.commands.metagraph": [[13, "module-bittensor.commands.metagraph"]], "check_config() (bittensor.commands.metagraph.metagraphcommand static method)": [[13, "bittensor.commands.metagraph.MetagraphCommand.check_config"]], "console (in module bittensor.commands.metagraph)": [[13, "bittensor.commands.metagraph.console"]], "run() (bittensor.commands.metagraph.metagraphcommand static method)": [[13, "bittensor.commands.metagraph.MetagraphCommand.run"]], "autocompletecommand (class in bittensor.commands.misc)": [[14, "bittensor.commands.misc.AutocompleteCommand"]], "updatecommand (class in bittensor.commands.misc)": [[14, "bittensor.commands.misc.UpdateCommand"]], "add_args() (bittensor.commands.misc.autocompletecommand static method)": [[14, "bittensor.commands.misc.AutocompleteCommand.add_args"]], "add_args() (bittensor.commands.misc.updatecommand static method)": [[14, "bittensor.commands.misc.UpdateCommand.add_args"]], "bittensor.commands.misc": [[14, "module-bittensor.commands.misc"]], "check_config() (bittensor.commands.misc.autocompletecommand static method)": [[14, "bittensor.commands.misc.AutocompleteCommand.check_config"]], "check_config() (bittensor.commands.misc.updatecommand static method)": [[14, "bittensor.commands.misc.UpdateCommand.check_config"]], "console (in module bittensor.commands.misc)": [[14, "bittensor.commands.misc.console"]], "run() (bittensor.commands.misc.autocompletecommand static method)": [[14, "bittensor.commands.misc.AutocompleteCommand.run"]], "run() (bittensor.commands.misc.updatecommand static method)": [[14, "bittensor.commands.misc.UpdateCommand.run"]], "hyperparams (in module bittensor.commands.network)": [[15, "bittensor.commands.network.HYPERPARAMS"]], "registersubnetworkcommand (class in bittensor.commands.network)": [[15, "bittensor.commands.network.RegisterSubnetworkCommand"]], "subnetgethyperparamscommand (class in bittensor.commands.network)": [[15, "bittensor.commands.network.SubnetGetHyperparamsCommand"]], "subnethyperparamscommand (class in bittensor.commands.network)": [[15, "bittensor.commands.network.SubnetHyperparamsCommand"]], "subnetlistcommand (class in bittensor.commands.network)": [[15, "bittensor.commands.network.SubnetListCommand"]], "subnetlockcostcommand (class in bittensor.commands.network)": [[15, "bittensor.commands.network.SubnetLockCostCommand"]], "subnetsudocommand (class in bittensor.commands.network)": [[15, "bittensor.commands.network.SubnetSudoCommand"]], "_run() (bittensor.commands.network.registersubnetworkcommand static method)": [[15, "bittensor.commands.network.RegisterSubnetworkCommand._run"]], "_run() (bittensor.commands.network.subnetgethyperparamscommand static method)": [[15, "bittensor.commands.network.SubnetGetHyperparamsCommand._run"]], "_run() (bittensor.commands.network.subnethyperparamscommand static method)": [[15, "bittensor.commands.network.SubnetHyperparamsCommand._run"]], "_run() (bittensor.commands.network.subnetlistcommand static method)": [[15, "bittensor.commands.network.SubnetListCommand._run"]], "_run() (bittensor.commands.network.subnetlockcostcommand static method)": [[15, "bittensor.commands.network.SubnetLockCostCommand._run"]], "_run() (bittensor.commands.network.subnetsudocommand static method)": [[15, "bittensor.commands.network.SubnetSudoCommand._run"]], "add_args() (bittensor.commands.network.registersubnetworkcommand class method)": [[15, "bittensor.commands.network.RegisterSubnetworkCommand.add_args"]], "add_args() (bittensor.commands.network.subnetgethyperparamscommand static method)": [[15, "bittensor.commands.network.SubnetGetHyperparamsCommand.add_args"]], "add_args() (bittensor.commands.network.subnethyperparamscommand static method)": [[15, "bittensor.commands.network.SubnetHyperparamsCommand.add_args"]], "add_args() (bittensor.commands.network.subnetlistcommand static method)": [[15, "bittensor.commands.network.SubnetListCommand.add_args"]], "add_args() (bittensor.commands.network.subnetlockcostcommand class method)": [[15, "bittensor.commands.network.SubnetLockCostCommand.add_args"]], "add_args() (bittensor.commands.network.subnetsudocommand static method)": [[15, "bittensor.commands.network.SubnetSudoCommand.add_args"]], "bittensor.commands.network": [[15, "module-bittensor.commands.network"]], "check_config() (bittensor.commands.network.registersubnetworkcommand class method)": [[15, "bittensor.commands.network.RegisterSubnetworkCommand.check_config"]], "check_config() (bittensor.commands.network.subnetgethyperparamscommand static method)": [[15, "bittensor.commands.network.SubnetGetHyperparamsCommand.check_config"]], "check_config() (bittensor.commands.network.subnethyperparamscommand static method)": [[15, "bittensor.commands.network.SubnetHyperparamsCommand.check_config"]], "check_config() (bittensor.commands.network.subnetlistcommand static method)": [[15, "bittensor.commands.network.SubnetListCommand.check_config"]], "check_config() (bittensor.commands.network.subnetlockcostcommand class method)": [[15, "bittensor.commands.network.SubnetLockCostCommand.check_config"]], "check_config() (bittensor.commands.network.subnetsudocommand static method)": [[15, "bittensor.commands.network.SubnetSudoCommand.check_config"]], "console (in module bittensor.commands.network)": [[15, "bittensor.commands.network.console"]], "run() (bittensor.commands.network.registersubnetworkcommand static method)": [[15, "bittensor.commands.network.RegisterSubnetworkCommand.run"]], "run() (bittensor.commands.network.subnetgethyperparamscommand static method)": [[15, "bittensor.commands.network.SubnetGetHyperparamsCommand.run"]], "run() (bittensor.commands.network.subnethyperparamscommand static method)": [[15, "bittensor.commands.network.SubnetHyperparamsCommand.run"]], "run() (bittensor.commands.network.subnetlistcommand static method)": [[15, "bittensor.commands.network.SubnetListCommand.run"]], "run() (bittensor.commands.network.subnetlockcostcommand static method)": [[15, "bittensor.commands.network.SubnetLockCostCommand.run"]], "run() (bittensor.commands.network.subnetsudocommand static method)": [[15, "bittensor.commands.network.SubnetSudoCommand.run"]], "overviewcommand (class in bittensor.commands.overview)": [[16, "bittensor.commands.overview.OverviewCommand"]], "_get_de_registered_stake_for_coldkey_wallet() (bittensor.commands.overview.overviewcommand static method)": [[16, "bittensor.commands.overview.OverviewCommand._get_de_registered_stake_for_coldkey_wallet"]], "_get_hotkeys() (bittensor.commands.overview.overviewcommand static method)": [[16, "bittensor.commands.overview.OverviewCommand._get_hotkeys"]], "_get_key_address() (bittensor.commands.overview.overviewcommand static method)": [[16, "bittensor.commands.overview.OverviewCommand._get_key_address"]], "_get_neurons_for_netuid() (bittensor.commands.overview.overviewcommand static method)": [[16, "bittensor.commands.overview.OverviewCommand._get_neurons_for_netuid"]], "_get_total_balance() (bittensor.commands.overview.overviewcommand static method)": [[16, "bittensor.commands.overview.OverviewCommand._get_total_balance"]], "_process_neuron_results() (bittensor.commands.overview.overviewcommand static method)": [[16, "bittensor.commands.overview.OverviewCommand._process_neuron_results"]], "_run() (bittensor.commands.overview.overviewcommand method)": [[16, "bittensor.commands.overview.OverviewCommand._run"]], "add_args() (bittensor.commands.overview.overviewcommand static method)": [[16, "bittensor.commands.overview.OverviewCommand.add_args"]], "bittensor.commands.overview": [[16, "module-bittensor.commands.overview"]], "check_config() (bittensor.commands.overview.overviewcommand static method)": [[16, "bittensor.commands.overview.OverviewCommand.check_config"]], "console (in module bittensor.commands.overview)": [[16, "bittensor.commands.overview.console"]], "run() (bittensor.commands.overview.overviewcommand static method)": [[16, "bittensor.commands.overview.OverviewCommand.run"]], "powregistercommand (class in bittensor.commands.register)": [[17, "bittensor.commands.register.PowRegisterCommand"]], "registercommand (class in bittensor.commands.register)": [[17, "bittensor.commands.register.RegisterCommand"]], "runfaucetcommand (class in bittensor.commands.register)": [[17, "bittensor.commands.register.RunFaucetCommand"]], "swaphotkeycommand (class in bittensor.commands.register)": [[17, "bittensor.commands.register.SwapHotkeyCommand"]], "_run() (bittensor.commands.register.powregistercommand static method)": [[17, "bittensor.commands.register.PowRegisterCommand._run"]], "_run() (bittensor.commands.register.registercommand static method)": [[17, "bittensor.commands.register.RegisterCommand._run"]], "_run() (bittensor.commands.register.runfaucetcommand static method)": [[17, "bittensor.commands.register.RunFaucetCommand._run"]], "_run() (bittensor.commands.register.swaphotkeycommand static method)": [[17, "bittensor.commands.register.SwapHotkeyCommand._run"]], "add_args() (bittensor.commands.register.powregistercommand static method)": [[17, "bittensor.commands.register.PowRegisterCommand.add_args"]], "add_args() (bittensor.commands.register.registercommand static method)": [[17, "bittensor.commands.register.RegisterCommand.add_args"]], "add_args() (bittensor.commands.register.runfaucetcommand static method)": [[17, "bittensor.commands.register.RunFaucetCommand.add_args"]], "add_args() (bittensor.commands.register.swaphotkeycommand static method)": [[17, "bittensor.commands.register.SwapHotkeyCommand.add_args"]], "bittensor.commands.register": [[17, "module-bittensor.commands.register"]], "check_config() (bittensor.commands.register.powregistercommand static method)": [[17, "bittensor.commands.register.PowRegisterCommand.check_config"]], "check_config() (bittensor.commands.register.registercommand static method)": [[17, "bittensor.commands.register.RegisterCommand.check_config"]], "check_config() (bittensor.commands.register.runfaucetcommand static method)": [[17, "bittensor.commands.register.RunFaucetCommand.check_config"]], "check_config() (bittensor.commands.register.swaphotkeycommand static method)": [[17, "bittensor.commands.register.SwapHotkeyCommand.check_config"]], "console (in module bittensor.commands.register)": [[17, "bittensor.commands.register.console"]], "run() (bittensor.commands.register.powregistercommand static method)": [[17, "bittensor.commands.register.PowRegisterCommand.run"]], "run() (bittensor.commands.register.registercommand static method)": [[17, "bittensor.commands.register.RegisterCommand.run"]], "run() (bittensor.commands.register.runfaucetcommand static method)": [[17, "bittensor.commands.register.RunFaucetCommand.run"]], "run() (bittensor.commands.register.swaphotkeycommand static method)": [[17, "bittensor.commands.register.SwapHotkeyCommand.run"]], "rootgetweightscommand (class in bittensor.commands.root)": [[18, "bittensor.commands.root.RootGetWeightsCommand"]], "rootlist (class in bittensor.commands.root)": [[18, "bittensor.commands.root.RootList"]], "rootregistercommand (class in bittensor.commands.root)": [[18, "bittensor.commands.root.RootRegisterCommand"]], "rootsetboostcommand (class in bittensor.commands.root)": [[18, "bittensor.commands.root.RootSetBoostCommand"]], "rootsetslashcommand (class in bittensor.commands.root)": [[18, "bittensor.commands.root.RootSetSlashCommand"]], "rootsetweightscommand (class in bittensor.commands.root)": [[18, "bittensor.commands.root.RootSetWeightsCommand"]], "_run() (bittensor.commands.root.rootgetweightscommand static method)": [[18, "bittensor.commands.root.RootGetWeightsCommand._run"]], "_run() (bittensor.commands.root.rootlist static method)": [[18, "bittensor.commands.root.RootList._run"]], "_run() (bittensor.commands.root.rootregistercommand static method)": [[18, "bittensor.commands.root.RootRegisterCommand._run"]], "_run() (bittensor.commands.root.rootsetboostcommand static method)": [[18, "bittensor.commands.root.RootSetBoostCommand._run"]], "_run() (bittensor.commands.root.rootsetslashcommand static method)": [[18, "bittensor.commands.root.RootSetSlashCommand._run"]], "_run() (bittensor.commands.root.rootsetweightscommand static method)": [[18, "bittensor.commands.root.RootSetWeightsCommand._run"]], "add_args() (bittensor.commands.root.rootgetweightscommand static method)": [[18, "bittensor.commands.root.RootGetWeightsCommand.add_args"]], "add_args() (bittensor.commands.root.rootlist static method)": [[18, "bittensor.commands.root.RootList.add_args"]], "add_args() (bittensor.commands.root.rootregistercommand static method)": [[18, "bittensor.commands.root.RootRegisterCommand.add_args"]], "add_args() (bittensor.commands.root.rootsetboostcommand static method)": [[18, "bittensor.commands.root.RootSetBoostCommand.add_args"]], "add_args() (bittensor.commands.root.rootsetslashcommand static method)": [[18, "bittensor.commands.root.RootSetSlashCommand.add_args"]], "add_args() (bittensor.commands.root.rootsetweightscommand static method)": [[18, "bittensor.commands.root.RootSetWeightsCommand.add_args"]], "bittensor.commands.root": [[18, "module-bittensor.commands.root"]], "check_config() (bittensor.commands.root.rootgetweightscommand static method)": [[18, "bittensor.commands.root.RootGetWeightsCommand.check_config"]], "check_config() (bittensor.commands.root.rootlist static method)": [[18, "bittensor.commands.root.RootList.check_config"]], "check_config() (bittensor.commands.root.rootregistercommand static method)": [[18, "bittensor.commands.root.RootRegisterCommand.check_config"]], "check_config() (bittensor.commands.root.rootsetboostcommand static method)": [[18, "bittensor.commands.root.RootSetBoostCommand.check_config"]], "check_config() (bittensor.commands.root.rootsetslashcommand static method)": [[18, "bittensor.commands.root.RootSetSlashCommand.check_config"]], "check_config() (bittensor.commands.root.rootsetweightscommand static method)": [[18, "bittensor.commands.root.RootSetWeightsCommand.check_config"]], "console (in module bittensor.commands.root)": [[18, "bittensor.commands.root.console"]], "run() (bittensor.commands.root.rootgetweightscommand static method)": [[18, "bittensor.commands.root.RootGetWeightsCommand.run"]], "run() (bittensor.commands.root.rootlist static method)": [[18, "bittensor.commands.root.RootList.run"]], "run() (bittensor.commands.root.rootregistercommand static method)": [[18, "bittensor.commands.root.RootRegisterCommand.run"]], "run() (bittensor.commands.root.rootsetboostcommand static method)": [[18, "bittensor.commands.root.RootSetBoostCommand.run"]], "run() (bittensor.commands.root.rootsetslashcommand static method)": [[18, "bittensor.commands.root.RootSetSlashCommand.run"]], "run() (bittensor.commands.root.rootsetweightscommand static method)": [[18, "bittensor.commands.root.RootSetWeightsCommand.run"]], "proposalscommand (class in bittensor.commands.senate)": [[19, "bittensor.commands.senate.ProposalsCommand"]], "senatecommand (class in bittensor.commands.senate)": [[19, "bittensor.commands.senate.SenateCommand"]], "senateleavecommand (class in bittensor.commands.senate)": [[19, "bittensor.commands.senate.SenateLeaveCommand"]], "senateregistercommand (class in bittensor.commands.senate)": [[19, "bittensor.commands.senate.SenateRegisterCommand"]], "showvotescommand (class in bittensor.commands.senate)": [[19, "bittensor.commands.senate.ShowVotesCommand"]], "votecommand (class in bittensor.commands.senate)": [[19, "bittensor.commands.senate.VoteCommand"]], "_run() (bittensor.commands.senate.proposalscommand static method)": [[19, "bittensor.commands.senate.ProposalsCommand._run"]], "_run() (bittensor.commands.senate.senatecommand static method)": [[19, "bittensor.commands.senate.SenateCommand._run"]], "_run() (bittensor.commands.senate.senateleavecommand static method)": [[19, "bittensor.commands.senate.SenateLeaveCommand._run"]], "_run() (bittensor.commands.senate.senateregistercommand static method)": [[19, "bittensor.commands.senate.SenateRegisterCommand._run"]], "_run() (bittensor.commands.senate.showvotescommand static method)": [[19, "bittensor.commands.senate.ShowVotesCommand._run"]], "_run() (bittensor.commands.senate.votecommand static method)": [[19, "bittensor.commands.senate.VoteCommand._run"]], "add_args() (bittensor.commands.senate.proposalscommand class method)": [[19, "bittensor.commands.senate.ProposalsCommand.add_args"]], "add_args() (bittensor.commands.senate.senatecommand class method)": [[19, "bittensor.commands.senate.SenateCommand.add_args"]], "add_args() (bittensor.commands.senate.senateleavecommand class method)": [[19, "bittensor.commands.senate.SenateLeaveCommand.add_args"]], "add_args() (bittensor.commands.senate.senateregistercommand class method)": [[19, "bittensor.commands.senate.SenateRegisterCommand.add_args"]], "add_args() (bittensor.commands.senate.showvotescommand class method)": [[19, "bittensor.commands.senate.ShowVotesCommand.add_args"]], "add_args() (bittensor.commands.senate.votecommand class method)": [[19, "bittensor.commands.senate.VoteCommand.add_args"]], "bittensor.commands.senate": [[19, "module-bittensor.commands.senate"]], "check_config() (bittensor.commands.senate.proposalscommand class method)": [[19, "bittensor.commands.senate.ProposalsCommand.check_config"]], "check_config() (bittensor.commands.senate.senatecommand class method)": [[19, "bittensor.commands.senate.SenateCommand.check_config"]], "check_config() (bittensor.commands.senate.senateleavecommand class method)": [[19, "bittensor.commands.senate.SenateLeaveCommand.check_config"]], "check_config() (bittensor.commands.senate.senateregistercommand class method)": [[19, "bittensor.commands.senate.SenateRegisterCommand.check_config"]], "check_config() (bittensor.commands.senate.showvotescommand class method)": [[19, "bittensor.commands.senate.ShowVotesCommand.check_config"]], "check_config() (bittensor.commands.senate.votecommand class method)": [[19, "bittensor.commands.senate.VoteCommand.check_config"]], "console (in module bittensor.commands.senate)": [[19, "bittensor.commands.senate.console"]], "display_votes() (in module bittensor.commands.senate)": [[19, "bittensor.commands.senate.display_votes"]], "format_call_data() (in module bittensor.commands.senate)": [[19, "bittensor.commands.senate.format_call_data"]], "run() (bittensor.commands.senate.proposalscommand static method)": [[19, "bittensor.commands.senate.ProposalsCommand.run"]], "run() (bittensor.commands.senate.senatecommand static method)": [[19, "bittensor.commands.senate.SenateCommand.run"]], "run() (bittensor.commands.senate.senateleavecommand static method)": [[19, "bittensor.commands.senate.SenateLeaveCommand.run"]], "run() (bittensor.commands.senate.senateregistercommand static method)": [[19, "bittensor.commands.senate.SenateRegisterCommand.run"]], "run() (bittensor.commands.senate.showvotescommand static method)": [[19, "bittensor.commands.senate.ShowVotesCommand.run"]], "run() (bittensor.commands.senate.votecommand static method)": [[19, "bittensor.commands.senate.VoteCommand.run"]], "stakecommand (class in bittensor.commands.stake)": [[20, "bittensor.commands.stake.StakeCommand"]], "stakeshow (class in bittensor.commands.stake)": [[20, "bittensor.commands.stake.StakeShow"]], "_get_coldkey_wallets_for_path() (in module bittensor.commands.stake)": [[20, "bittensor.commands.stake._get_coldkey_wallets_for_path"]], "_get_hotkey_wallets_for_wallet() (in module bittensor.commands.stake)": [[20, "bittensor.commands.stake._get_hotkey_wallets_for_wallet"]], "_run() (bittensor.commands.stake.stakecommand static method)": [[20, "bittensor.commands.stake.StakeCommand._run"]], "_run() (bittensor.commands.stake.stakeshow static method)": [[20, "bittensor.commands.stake.StakeShow._run"]], "add_args() (bittensor.commands.stake.stakecommand class method)": [[20, "bittensor.commands.stake.StakeCommand.add_args"]], "add_args() (bittensor.commands.stake.stakeshow static method)": [[20, "bittensor.commands.stake.StakeShow.add_args"]], "bittensor.commands.stake": [[20, "module-bittensor.commands.stake"]], "check_config() (bittensor.commands.stake.stakecommand class method)": [[20, "bittensor.commands.stake.StakeCommand.check_config"]], "check_config() (bittensor.commands.stake.stakeshow static method)": [[20, "bittensor.commands.stake.StakeShow.check_config"]], "console (in module bittensor.commands.stake)": [[20, "bittensor.commands.stake.console"], [20, "id0"]], "run() (bittensor.commands.stake.stakecommand static method)": [[20, "bittensor.commands.stake.StakeCommand.run"]], "run() (bittensor.commands.stake.stakeshow static method)": [[20, "bittensor.commands.stake.StakeShow.run"]], "transfercommand (class in bittensor.commands.transfer)": [[21, "bittensor.commands.transfer.TransferCommand"]], "_run() (bittensor.commands.transfer.transfercommand static method)": [[21, "bittensor.commands.transfer.TransferCommand._run"]], "add_args() (bittensor.commands.transfer.transfercommand static method)": [[21, "bittensor.commands.transfer.TransferCommand.add_args"]], "bittensor.commands.transfer": [[21, "module-bittensor.commands.transfer"]], "check_config() (bittensor.commands.transfer.transfercommand static method)": [[21, "bittensor.commands.transfer.TransferCommand.check_config"]], "console (in module bittensor.commands.transfer)": [[21, "bittensor.commands.transfer.console"]], "run() (bittensor.commands.transfer.transfercommand static method)": [[21, "bittensor.commands.transfer.TransferCommand.run"]], "unstakecommand (class in bittensor.commands.unstake)": [[22, "bittensor.commands.unstake.UnStakeCommand"]], "_run() (bittensor.commands.unstake.unstakecommand static method)": [[22, "bittensor.commands.unstake.UnStakeCommand._run"]], "add_args() (bittensor.commands.unstake.unstakecommand static method)": [[22, "bittensor.commands.unstake.UnStakeCommand.add_args"]], "bittensor.commands.unstake": [[22, "module-bittensor.commands.unstake"]], "check_config() (bittensor.commands.unstake.unstakecommand class method)": [[22, "bittensor.commands.unstake.UnStakeCommand.check_config"]], "console (in module bittensor.commands.unstake)": [[22, "bittensor.commands.unstake.console"]], "run() (bittensor.commands.unstake.unstakecommand static method)": [[22, "bittensor.commands.unstake.UnStakeCommand.run"]], "api_url (in module bittensor.commands.wallets)": [[23, "bittensor.commands.wallets.API_URL"]], "graphql_query (in module bittensor.commands.wallets)": [[23, "bittensor.commands.wallets.GRAPHQL_QUERY"]], "getwallethistorycommand (class in bittensor.commands.wallets)": [[23, "bittensor.commands.wallets.GetWalletHistoryCommand"]], "max_txn (in module bittensor.commands.wallets)": [[23, "bittensor.commands.wallets.MAX_TXN"]], "newcoldkeycommand (class in bittensor.commands.wallets)": [[23, "bittensor.commands.wallets.NewColdkeyCommand"]], "newhotkeycommand (class in bittensor.commands.wallets)": [[23, "bittensor.commands.wallets.NewHotkeyCommand"]], "regencoldkeycommand (class in bittensor.commands.wallets)": [[23, "bittensor.commands.wallets.RegenColdkeyCommand"]], "regencoldkeypubcommand (class in bittensor.commands.wallets)": [[23, "bittensor.commands.wallets.RegenColdkeypubCommand"]], "regenhotkeycommand (class in bittensor.commands.wallets)": [[23, "bittensor.commands.wallets.RegenHotkeyCommand"]], "updatewalletcommand (class in bittensor.commands.wallets)": [[23, "bittensor.commands.wallets.UpdateWalletCommand"]], "walletbalancecommand (class in bittensor.commands.wallets)": [[23, "bittensor.commands.wallets.WalletBalanceCommand"]], "walletcreatecommand (class in bittensor.commands.wallets)": [[23, "bittensor.commands.wallets.WalletCreateCommand"]], "_get_coldkey_ss58_addresses_for_path() (in module bittensor.commands.wallets)": [[23, "bittensor.commands.wallets._get_coldkey_ss58_addresses_for_path"]], "_get_coldkey_wallets_for_path() (in module bittensor.commands.wallets)": [[23, "bittensor.commands.wallets._get_coldkey_wallets_for_path"]], "_run() (bittensor.commands.wallets.walletbalancecommand static method)": [[23, "bittensor.commands.wallets.WalletBalanceCommand._run"]], "add_args() (bittensor.commands.wallets.getwallethistorycommand static method)": [[23, "bittensor.commands.wallets.GetWalletHistoryCommand.add_args"]], "add_args() (bittensor.commands.wallets.newcoldkeycommand static method)": [[23, "bittensor.commands.wallets.NewColdkeyCommand.add_args"]], "add_args() (bittensor.commands.wallets.newhotkeycommand static method)": [[23, "bittensor.commands.wallets.NewHotkeyCommand.add_args"]], "add_args() (bittensor.commands.wallets.regencoldkeycommand static method)": [[23, "bittensor.commands.wallets.RegenColdkeyCommand.add_args"]], "add_args() (bittensor.commands.wallets.regencoldkeypubcommand static method)": [[23, "bittensor.commands.wallets.RegenColdkeypubCommand.add_args"]], "add_args() (bittensor.commands.wallets.regenhotkeycommand static method)": [[23, "bittensor.commands.wallets.RegenHotkeyCommand.add_args"]], "add_args() (bittensor.commands.wallets.updatewalletcommand static method)": [[23, "bittensor.commands.wallets.UpdateWalletCommand.add_args"]], "add_args() (bittensor.commands.wallets.walletbalancecommand static method)": [[23, "bittensor.commands.wallets.WalletBalanceCommand.add_args"]], "add_args() (bittensor.commands.wallets.walletcreatecommand static method)": [[23, "bittensor.commands.wallets.WalletCreateCommand.add_args"]], "bittensor.commands.wallets": [[23, "module-bittensor.commands.wallets"]], "check_config() (bittensor.commands.wallets.getwallethistorycommand static method)": [[23, "bittensor.commands.wallets.GetWalletHistoryCommand.check_config"]], "check_config() (bittensor.commands.wallets.newcoldkeycommand static method)": [[23, "bittensor.commands.wallets.NewColdkeyCommand.check_config"]], "check_config() (bittensor.commands.wallets.newhotkeycommand static method)": [[23, "bittensor.commands.wallets.NewHotkeyCommand.check_config"]], "check_config() (bittensor.commands.wallets.regencoldkeycommand static method)": [[23, "bittensor.commands.wallets.RegenColdkeyCommand.check_config"]], "check_config() (bittensor.commands.wallets.regencoldkeypubcommand static method)": [[23, "bittensor.commands.wallets.RegenColdkeypubCommand.check_config"]], "check_config() (bittensor.commands.wallets.regenhotkeycommand static method)": [[23, "bittensor.commands.wallets.RegenHotkeyCommand.check_config"]], "check_config() (bittensor.commands.wallets.updatewalletcommand static method)": [[23, "bittensor.commands.wallets.UpdateWalletCommand.check_config"]], "check_config() (bittensor.commands.wallets.walletbalancecommand static method)": [[23, "bittensor.commands.wallets.WalletBalanceCommand.check_config"]], "check_config() (bittensor.commands.wallets.walletcreatecommand static method)": [[23, "bittensor.commands.wallets.WalletCreateCommand.check_config"]], "create_transfer_history_table() (in module bittensor.commands.wallets)": [[23, "bittensor.commands.wallets.create_transfer_history_table"]], "get_wallet_transfers() (in module bittensor.commands.wallets)": [[23, "bittensor.commands.wallets.get_wallet_transfers"]], "run() (bittensor.commands.wallets.getwallethistorycommand static method)": [[23, "bittensor.commands.wallets.GetWalletHistoryCommand.run"]], "run() (bittensor.commands.wallets.newcoldkeycommand method)": [[23, "bittensor.commands.wallets.NewColdkeyCommand.run"]], "run() (bittensor.commands.wallets.newhotkeycommand method)": [[23, "bittensor.commands.wallets.NewHotkeyCommand.run"]], "run() (bittensor.commands.wallets.regencoldkeycommand method)": [[23, "bittensor.commands.wallets.RegenColdkeyCommand.run"]], "run() (bittensor.commands.wallets.regencoldkeypubcommand method)": [[23, "bittensor.commands.wallets.RegenColdkeypubCommand.run"]], "run() (bittensor.commands.wallets.regenhotkeycommand method)": [[23, "bittensor.commands.wallets.RegenHotkeyCommand.run"]], "run() (bittensor.commands.wallets.updatewalletcommand static method)": [[23, "bittensor.commands.wallets.UpdateWalletCommand.run"]], "run() (bittensor.commands.wallets.walletbalancecommand static method)": [[23, "bittensor.commands.wallets.WalletBalanceCommand.run"]], "run() (bittensor.commands.wallets.walletcreatecommand method)": [[23, "bittensor.commands.wallets.WalletCreateCommand.run"]], "defaultconfig (class in bittensor.config)": [[24, "bittensor.config.DefaultConfig"]], "invalidconfigfile": [[24, "bittensor.config.InvalidConfigFile"], [39, "bittensor.InvalidConfigFile"]], "t (in module bittensor.config)": [[24, "bittensor.config.T"]], "__check_for_missing_required_args() (bittensor.config.config method)": [[24, "bittensor.config.config.__check_for_missing_required_args"]], "__deepcopy__() (bittensor.config.config method)": [[24, "bittensor.config.config.__deepcopy__"]], "__get_required_args_from_parser() (bittensor.config.config static method)": [[24, "bittensor.config.config.__get_required_args_from_parser"]], "__is_set (bittensor.config.config attribute)": [[24, "bittensor.config.config.__is_set"]], "__parse_args__() (bittensor.config.config static method)": [[24, "bittensor.config.config.__parse_args__"]], "__repr__() (bittensor.config.config method)": [[24, "bittensor.config.config.__repr__"]], "__split_params__() (bittensor.config.config static method)": [[24, "bittensor.config.config.__split_params__"]], "__str__() (bittensor.config.config method)": [[24, "bittensor.config.config.__str__"]], "_merge() (bittensor.config.config class method)": [[24, "bittensor.config.config._merge"]], "_remove_private_keys() (bittensor.config.config static method)": [[24, "bittensor.config.config._remove_private_keys"]], "bittensor.config": [[24, "module-bittensor.config"]], "config (class in bittensor.config)": [[24, "bittensor.config.config"]], "copy() (bittensor.config.config method)": [[24, "bittensor.config.config.copy"]], "default() (bittensor.config.defaultconfig class method)": [[24, "bittensor.config.DefaultConfig.default"]], "is_set() (bittensor.config.config method)": [[24, "bittensor.config.config.is_set"]], "merge() (bittensor.config.config method)": [[24, "bittensor.config.config.merge"]], "merge_all() (bittensor.config.config class method)": [[24, "bittensor.config.config.merge_all"]], "to_string() (bittensor.config.config method)": [[24, "bittensor.config.config.to_string"]], "update_with_kwargs() (bittensor.config.config method)": [[24, "bittensor.config.config.update_with_kwargs"]], "basemodel (in module bittensor.dendrite)": [[25, "bittensor.dendrite.BaseModel"]], "dendritemixin (class in bittensor.dendrite)": [[25, "bittensor.dendrite.DendriteMixin"]], "__aenter__() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin.__aenter__"]], "__aexit__() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin.__aexit__"]], "__del__() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin.__del__"]], "__repr__() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin.__repr__"], [25, "id0"]], "__repr__() (bittensor.dendrite.dendrite method)": [[25, "bittensor.dendrite.dendrite.__repr__"]], "__str__() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin.__str__"], [25, "id4"]], "__str__() (bittensor.dendrite.dendrite method)": [[25, "bittensor.dendrite.dendrite.__str__"]], "_get_endpoint_url() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin._get_endpoint_url"]], "_handle_request_errors() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin._handle_request_errors"]], "_log_incoming_response() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin._log_incoming_response"]], "_log_outgoing_request() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin._log_outgoing_request"]], "aclose_session() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin.aclose_session"], [25, "id5"]], "aclose_session() (bittensor.dendrite.dendrite method)": [[25, "bittensor.dendrite.dendrite.aclose_session"]], "bittensor.dendrite": [[25, "module-bittensor.dendrite"]], "call() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin.call"], [25, "id7"]], "call() (bittensor.dendrite.dendrite method)": [[25, "bittensor.dendrite.dendrite.call"]], "call() (in module bittensor.dendrite)": [[25, "bittensor.dendrite.call"]], "call_stream() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin.call_stream"], [25, "id8"]], "call_stream() (bittensor.dendrite.dendrite method)": [[25, "bittensor.dendrite.dendrite.call_stream"]], "close_session() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin.close_session"], [25, "id9"]], "close_session() (bittensor.dendrite.dendrite method)": [[25, "bittensor.dendrite.dendrite.close_session"]], "dendrite (class in bittensor.dendrite)": [[25, "bittensor.dendrite.dendrite"]], "forward() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin.forward"], [25, "id11"]], "forward() (bittensor.dendrite.dendrite method)": [[25, "bittensor.dendrite.dendrite.forward"]], "preprocess_synapse_for_request() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin.preprocess_synapse_for_request"], [25, "id12"]], "preprocess_synapse_for_request() (bittensor.dendrite.dendrite method)": [[25, "bittensor.dendrite.dendrite.preprocess_synapse_for_request"]], "process_server_response() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin.process_server_response"], [25, "id13"]], "process_server_response() (bittensor.dendrite.dendrite method)": [[25, "bittensor.dendrite.dendrite.process_server_response"]], "query() (bittensor.dendrite.dendritemixin method)": [[25, "bittensor.dendrite.DendriteMixin.query"], [25, "id15"]], "query() (bittensor.dendrite.dendrite method)": [[25, "bittensor.dendrite.dendrite.query"]], "session (bittensor.dendrite.dendritemixin property)": [[25, "bittensor.dendrite.DendriteMixin.session"]], "blacklistedexception": [[26, "bittensor.errors.BlacklistedException"], [39, "bittensor.BlacklistedException"]], "chainconnectionerror": [[26, "bittensor.errors.ChainConnectionError"], [39, "bittensor.ChainConnectionError"]], "chainerror": [[26, "bittensor.errors.ChainError"], [39, "bittensor.ChainError"]], "chainqueryerror": [[26, "bittensor.errors.ChainQueryError"], [39, "bittensor.ChainQueryError"]], "chaintransactionerror": [[26, "bittensor.errors.ChainTransactionError"], [39, "bittensor.ChainTransactionError"]], "identityerror": [[26, "bittensor.errors.IdentityError"], [39, "bittensor.IdentityError"]], "internalservererror": [[26, "bittensor.errors.InternalServerError"], [39, "bittensor.InternalServerError"]], "invalidrequestnameerror": [[26, "bittensor.errors.InvalidRequestNameError"], [39, "bittensor.InvalidRequestNameError"]], "keyfileerror": [[26, "bittensor.errors.KeyFileError"], [39, "bittensor.KeyFileError"]], "metadataerror": [[26, "bittensor.errors.MetadataError"], [39, "bittensor.MetadataError"]], "nominationerror": [[26, "bittensor.errors.NominationError"], [39, "bittensor.NominationError"]], "notdelegateerror": [[26, "bittensor.errors.NotDelegateError"], [39, "bittensor.NotDelegateError"]], "notregisterederror": [[26, "bittensor.errors.NotRegisteredError"], [39, "bittensor.NotRegisteredError"]], "notverifiedexception": [[26, "bittensor.errors.NotVerifiedException"], [39, "bittensor.NotVerifiedException"]], "postprocessexception": [[26, "bittensor.errors.PostProcessException"], [39, "bittensor.PostProcessException"]], "priorityexception": [[26, "bittensor.errors.PriorityException"], [39, "bittensor.PriorityException"]], "registrationerror": [[26, "bittensor.errors.RegistrationError"], [39, "bittensor.RegistrationError"]], "runexception": [[26, "bittensor.errors.RunException"], [39, "bittensor.RunException"]], "stakeerror": [[26, "bittensor.errors.StakeError"], [39, "bittensor.StakeError"]], "synapsedendritenoneexception": [[26, "bittensor.errors.SynapseDendriteNoneException"], [39, "bittensor.SynapseDendriteNoneException"]], "synapseexception": [[26, "bittensor.errors.SynapseException"]], "synapseparsingerror": [[26, "bittensor.errors.SynapseParsingError"], [39, "bittensor.SynapseParsingError"]], "takeerror": [[26, "bittensor.errors.TakeError"]], "transfererror": [[26, "bittensor.errors.TransferError"], [39, "bittensor.TransferError"]], "unknownsynapseerror": [[26, "bittensor.errors.UnknownSynapseError"], [39, "bittensor.UnknownSynapseError"]], "unstakeerror": [[26, "bittensor.errors.UnstakeError"], [39, "bittensor.UnstakeError"]], "bittensor.errors": [[26, "module-bittensor.errors"]], "bittensor.extrinsics.delegation": [[27, "module-bittensor.extrinsics.delegation"]], "decrease_take_extrinsic() (in module bittensor.extrinsics.delegation)": [[27, "bittensor.extrinsics.delegation.decrease_take_extrinsic"]], "delegate_extrinsic() (in module bittensor.extrinsics.delegation)": [[27, "bittensor.extrinsics.delegation.delegate_extrinsic"]], "increase_take_extrinsic() (in module bittensor.extrinsics.delegation)": [[27, "bittensor.extrinsics.delegation.increase_take_extrinsic"]], "logger (in module bittensor.extrinsics.delegation)": [[27, "bittensor.extrinsics.delegation.logger"]], "nominate_extrinsic() (in module bittensor.extrinsics.delegation)": [[27, "bittensor.extrinsics.delegation.nominate_extrinsic"]], "undelegate_extrinsic() (in module bittensor.extrinsics.delegation)": [[27, "bittensor.extrinsics.delegation.undelegate_extrinsic"]], "bittensor.extrinsics": [[28, "module-bittensor.extrinsics"]], "bittensor.extrinsics.network": [[29, "module-bittensor.extrinsics.network"]], "find_event_attributes_in_extrinsic_receipt() (in module bittensor.extrinsics.network)": [[29, "bittensor.extrinsics.network.find_event_attributes_in_extrinsic_receipt"]], "register_subnetwork_extrinsic() (in module bittensor.extrinsics.network)": [[29, "bittensor.extrinsics.network.register_subnetwork_extrinsic"]], "set_hyperparameter_extrinsic() (in module bittensor.extrinsics.network)": [[29, "bittensor.extrinsics.network.set_hyperparameter_extrinsic"]], "bittensor.extrinsics.prometheus": [[30, "module-bittensor.extrinsics.prometheus"]], "prometheus_extrinsic() (in module bittensor.extrinsics.prometheus)": [[30, "bittensor.extrinsics.prometheus.prometheus_extrinsic"]], "maxattemptsexception": [[31, "bittensor.extrinsics.registration.MaxAttemptsException"]], "maxsuccessexception": [[31, "bittensor.extrinsics.registration.MaxSuccessException"]], "bittensor.extrinsics.registration": [[31, "module-bittensor.extrinsics.registration"]], "burned_register_extrinsic() (in module bittensor.extrinsics.registration)": [[31, "bittensor.extrinsics.registration.burned_register_extrinsic"]], "register_extrinsic() (in module bittensor.extrinsics.registration)": [[31, "bittensor.extrinsics.registration.register_extrinsic"]], "run_faucet_extrinsic() (in module bittensor.extrinsics.registration)": [[31, "bittensor.extrinsics.registration.run_faucet_extrinsic"]], "swap_hotkey_extrinsic() (in module bittensor.extrinsics.registration)": [[31, "bittensor.extrinsics.registration.swap_hotkey_extrinsic"]], "bittensor.extrinsics.root": [[32, "module-bittensor.extrinsics.root"]], "logger (in module bittensor.extrinsics.root)": [[32, "bittensor.extrinsics.root.logger"]], "root_register_extrinsic() (in module bittensor.extrinsics.root)": [[32, "bittensor.extrinsics.root.root_register_extrinsic"]], "set_root_weights_extrinsic() (in module bittensor.extrinsics.root)": [[32, "bittensor.extrinsics.root.set_root_weights_extrinsic"]], "bittensor.extrinsics.senate": [[33, "module-bittensor.extrinsics.senate"]], "leave_senate_extrinsic() (in module bittensor.extrinsics.senate)": [[33, "bittensor.extrinsics.senate.leave_senate_extrinsic"]], "register_senate_extrinsic() (in module bittensor.extrinsics.senate)": [[33, "bittensor.extrinsics.senate.register_senate_extrinsic"]], "vote_senate_extrinsic() (in module bittensor.extrinsics.senate)": [[33, "bittensor.extrinsics.senate.vote_senate_extrinsic"]], "bittensor.extrinsics.serving": [[34, "module-bittensor.extrinsics.serving"]], "get_metadata() (in module bittensor.extrinsics.serving)": [[34, "bittensor.extrinsics.serving.get_metadata"]], "publish_metadata() (in module bittensor.extrinsics.serving)": [[34, "bittensor.extrinsics.serving.publish_metadata"]], "serve_axon_extrinsic() (in module bittensor.extrinsics.serving)": [[34, "bittensor.extrinsics.serving.serve_axon_extrinsic"]], "serve_extrinsic() (in module bittensor.extrinsics.serving)": [[34, "bittensor.extrinsics.serving.serve_extrinsic"]], "bittensor.extrinsics.set_weights": [[35, "module-bittensor.extrinsics.set_weights"]], "logger (in module bittensor.extrinsics.set_weights)": [[35, "bittensor.extrinsics.set_weights.logger"]], "set_weights_extrinsic() (in module bittensor.extrinsics.set_weights)": [[35, "bittensor.extrinsics.set_weights.set_weights_extrinsic"]], "__do_add_stake_single() (in module bittensor.extrinsics.staking)": [[36, "bittensor.extrinsics.staking.__do_add_stake_single"]], "add_stake_extrinsic() (in module bittensor.extrinsics.staking)": [[36, "bittensor.extrinsics.staking.add_stake_extrinsic"]], "add_stake_multiple_extrinsic() (in module bittensor.extrinsics.staking)": [[36, "bittensor.extrinsics.staking.add_stake_multiple_extrinsic"]], "bittensor.extrinsics.staking": [[36, "module-bittensor.extrinsics.staking"]], "bittensor.extrinsics.transfer": [[37, "module-bittensor.extrinsics.transfer"]], "transfer_extrinsic() (in module bittensor.extrinsics.transfer)": [[37, "bittensor.extrinsics.transfer.transfer_extrinsic"]], "__do_remove_stake_single() (in module bittensor.extrinsics.unstaking)": [[38, "bittensor.extrinsics.unstaking.__do_remove_stake_single"]], "bittensor.extrinsics.unstaking": [[38, "module-bittensor.extrinsics.unstaking"]], "check_threshold_amount() (in module bittensor.extrinsics.unstaking)": [[38, "bittensor.extrinsics.unstaking.check_threshold_amount"]], "unstake_extrinsic() (in module bittensor.extrinsics.unstaking)": [[38, "bittensor.extrinsics.unstaking.unstake_extrinsic"]], "unstake_multiple_extrinsic() (in module bittensor.extrinsics.unstaking)": [[38, "bittensor.extrinsics.unstaking.unstake_multiple_extrinsic"]], "all_commands (in module bittensor)": [[39, "bittensor.ALL_COMMANDS"]], "axoninfo (class in bittensor)": [[39, "bittensor.AxonInfo"]], "defaultconfig (class in bittensor)": [[39, "bittensor.DefaultConfig"]], "delegateinfo (class in bittensor)": [[39, "bittensor.DelegateInfo"]], "delegateinfolite (class in bittensor)": [[39, "bittensor.DelegateInfoLite"]], "ipinfo (class in bittensor)": [[39, "bittensor.IPInfo"]], "mockkeyfile (class in bittensor)": [[39, "bittensor.Mockkeyfile"]], "neuroninfo (class in bittensor)": [[39, "bittensor.NeuronInfo"]], "neuroninfolite (class in bittensor)": [[39, "bittensor.NeuronInfoLite"]], "prioritythreadpoolexecutor (class in bittensor)": [[39, "bittensor.PriorityThreadPoolExecutor"]], "prometheusinfo (class in bittensor)": [[39, "bittensor.PrometheusInfo"]], "proposalcalldata (in module bittensor)": [[39, "bittensor.ProposalCallData"]], "proposalvotedata (class in bittensor)": [[39, "bittensor.ProposalVoteData"]], "stakeinfo (class in bittensor)": [[39, "bittensor.StakeInfo"]], "streamingsynapse (class in bittensor)": [[39, "bittensor.StreamingSynapse"]], "streamingsynapse.btstreamingresponse (class in bittensor)": [[39, "bittensor.StreamingSynapse.BTStreamingResponse"]], "subnethyperparameters (class in bittensor)": [[39, "bittensor.SubnetHyperparameters"]], "subnetinfo (class in bittensor)": [[39, "bittensor.SubnetInfo"]], "subnetsapi (class in bittensor)": [[39, "bittensor.SubnetsAPI"]], "synapse (class in bittensor)": [[39, "bittensor.Synapse"]], "t (in module bittensor)": [[39, "bittensor.T"]], "tensor (class in bittensor)": [[39, "bittensor.Tensor"], [39, "bittensor.tensor"]], "terminalinfo (class in bittensor)": [[39, "bittensor.TerminalInfo"]], "__archive_entrypoint__ (in module bittensor)": [[39, "bittensor.__archive_entrypoint__"]], "__bellagene_entrypoint__ (in module bittensor)": [[39, "bittensor.__bellagene_entrypoint__"]], "__blocktime__ (in module bittensor)": [[39, "bittensor.__blocktime__"]], "__call__() (bittensor.streamingsynapse.btstreamingresponse method)": [[39, "bittensor.StreamingSynapse.BTStreamingResponse.__call__"]], "__call__() (bittensor.subnetsapi method)": [[39, "bittensor.SubnetsAPI.__call__"]], "__check_for_missing_required_args() (bittensor.config method)": [[39, "bittensor.config.__check_for_missing_required_args"]], "__console__ (in module bittensor)": [[39, "bittensor.__console__"]], "__create_parser__() (bittensor.cli static method)": [[39, "bittensor.cli.__create_parser__"]], "__deepcopy__() (bittensor.config method)": [[39, "bittensor.config.__deepcopy__"]], "__del__() (bittensor.axon method)": [[39, "bittensor.axon.__del__"]], "__delegates_details_url__ (in module bittensor)": [[39, "bittensor.__delegates_details_url__"]], "__eq__() (bittensor.axoninfo method)": [[39, "bittensor.AxonInfo.__eq__"]], "__finney_entrypoint__ (in module bittensor)": [[39, "bittensor.__finney_entrypoint__"]], "__finney_test_entrypoint__ (in module bittensor)": [[39, "bittensor.__finney_test_entrypoint__"]], "__get_required_args_from_parser() (bittensor.config static method)": [[39, "bittensor.config.__get_required_args_from_parser"]], "__is_set (bittensor.config attribute)": [[39, "bittensor.config.__is_set"]], "__local_entrypoint__ (in module bittensor)": [[39, "bittensor.__local_entrypoint__"]], "__network_explorer_map__ (in module bittensor)": [[39, "bittensor.__network_explorer_map__"]], "__networks__ (in module bittensor)": [[39, "bittensor.__networks__"]], "__new_signature_version__ (in module bittensor)": [[39, "bittensor.__new_signature_version__"]], "__parse_args__() (bittensor.config static method)": [[39, "bittensor.config.__parse_args__"]], "__pipaddress__ (in module bittensor)": [[39, "bittensor.__pipaddress__"]], "__rao_symbol__ (in module bittensor)": [[39, "bittensor.__rao_symbol__"]], "__repr__() (bittensor.axoninfo method)": [[39, "bittensor.AxonInfo.__repr__"]], "__repr__() (bittensor.mockkeyfile method)": [[39, "bittensor.Mockkeyfile.__repr__"]], "__repr__() (bittensor.axon method)": [[39, "bittensor.axon.__repr__"]], "__repr__() (bittensor.config method)": [[39, "bittensor.config.__repr__"]], "__repr__() (bittensor.dendrite method)": [[39, "bittensor.dendrite.__repr__"]], "__repr__() (bittensor.keyfile method)": [[39, "bittensor.keyfile.__repr__"]], "__repr__() (bittensor.subtensor method)": [[39, "bittensor.subtensor.__repr__"]], "__repr__() (bittensor.wallet method)": [[39, "bittensor.wallet.__repr__"]], "__setattr__() (bittensor.synapse method)": [[39, "bittensor.Synapse.__setattr__"], [39, "id7"]], "__split_params__() (bittensor.config static method)": [[39, "bittensor.config.__split_params__"]], "__ss58_address_length__ (in module bittensor)": [[39, "bittensor.__ss58_address_length__"]], "__ss58_format__ (in module bittensor)": [[39, "bittensor.__ss58_format__"]], "__str__() (bittensor.axoninfo method)": [[39, "bittensor.AxonInfo.__str__"]], "__str__() (bittensor.mockkeyfile method)": [[39, "bittensor.Mockkeyfile.__str__"]], "__str__() (bittensor.axon method)": [[39, "bittensor.axon.__str__"]], "__str__() (bittensor.config method)": [[39, "bittensor.config.__str__"]], "__str__() (bittensor.dendrite method)": [[39, "bittensor.dendrite.__str__"]], "__str__() (bittensor.keyfile method)": [[39, "bittensor.keyfile.__str__"]], "__str__() (bittensor.subtensor method)": [[39, "bittensor.subtensor.__str__"]], "__str__() (bittensor.wallet method)": [[39, "bittensor.wallet.__str__"]], "__tao_symbol__ (in module bittensor)": [[39, "bittensor.__tao_symbol__"]], "__type_registry__ (in module bittensor)": [[39, "bittensor.__type_registry__"]], "__use_console__ (in module bittensor)": [[39, "bittensor.__use_console__"]], "__version__ (in module bittensor)": [[39, "bittensor.__version__"]], "__version_as_int__ (in module bittensor)": [[39, "bittensor.__version_as_int__"]], "_adjust_thread_count() (bittensor.prioritythreadpoolexecutor method)": [[39, "bittensor.PriorityThreadPoolExecutor._adjust_thread_count"]], "_counter (bittensor.prioritythreadpoolexecutor attribute)": [[39, "bittensor.PriorityThreadPoolExecutor._counter"]], "_do_associate_ips() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_associate_ips"]], "_do_burned_register() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_burned_register"]], "_do_decrease_take() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_decrease_take"]], "_do_delegation() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_delegation"]], "_do_increase_take() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_increase_take"]], "_do_nominate() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_nominate"]], "_do_pow_register() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_pow_register"]], "_do_root_register() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_root_register"]], "_do_serve_axon() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_serve_axon"]], "_do_serve_prometheus() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_serve_prometheus"]], "_do_set_weights() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_set_weights"]], "_do_stake() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_stake"]], "_do_swap_hotkey() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_swap_hotkey"]], "_do_transfer() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_transfer"]], "_do_undelegation() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_undelegation"]], "_do_unstake() (bittensor.subtensor method)": [[39, "bittensor.subtensor._do_unstake"]], "_encode_params() (bittensor.subtensor method)": [[39, "bittensor.subtensor._encode_params"]], "_extract_dtype (bittensor.tensor attribute)": [[39, "bittensor.Tensor._extract_dtype"]], "_extract_header_size (bittensor.synapse attribute)": [[39, "bittensor.Synapse._extract_header_size"]], "_extract_nonce (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo._extract_nonce"]], "_extract_port (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo._extract_port"]], "_extract_process_time (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo._extract_process_time"]], "_extract_shape (bittensor.tensor attribute)": [[39, "bittensor.Tensor._extract_shape"]], "_extract_status_code (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo._extract_status_code"]], "_extract_timeout (bittensor.synapse attribute)": [[39, "bittensor.Synapse._extract_timeout"]], "_extract_total_size (bittensor.synapse attribute)": [[39, "bittensor.Synapse._extract_total_size"]], "_extract_version (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo._extract_version"]], "_from_parameter_dict() (bittensor.axoninfo class method)": [[39, "bittensor.AxonInfo._from_parameter_dict"]], "_from_parameter_dict_numpy() (bittensor.ipinfo class method)": [[39, "bittensor.IPInfo._from_parameter_dict_numpy"]], "_from_parameter_dict_numpy() (bittensor.subnethyperparameters class method)": [[39, "bittensor.SubnetHyperparameters._from_parameter_dict_numpy"]], "_from_parameter_dict_numpy() (bittensor.subnetinfo class method)": [[39, "bittensor.SubnetInfo._from_parameter_dict_numpy"]], "_from_parameter_dict_torch() (bittensor.ipinfo class method)": [[39, "bittensor.IPInfo._from_parameter_dict_torch"]], "_from_parameter_dict_torch() (bittensor.subnethyperparameters class method)": [[39, "bittensor.SubnetHyperparameters._from_parameter_dict_torch"]], "_from_parameter_dict_torch() (bittensor.subnetinfo class method)": [[39, "bittensor.SubnetInfo._from_parameter_dict_torch"]], "_get_hyperparameter() (bittensor.subtensor method)": [[39, "bittensor.subtensor._get_hyperparameter"]], "_initializer_failed() (bittensor.prioritythreadpoolexecutor method)": [[39, "bittensor.PriorityThreadPoolExecutor._initializer_failed"]], "_may_overwrite() (bittensor.keyfile method)": [[39, "bittensor.keyfile._may_overwrite"]], "_merge() (bittensor.config class method)": [[39, "bittensor.config._merge"]], "_neuron_dict_to_namespace() (bittensor.neuroninfo static method)": [[39, "bittensor.NeuronInfo._neuron_dict_to_namespace"]], "_neuron_dict_to_namespace() (bittensor.neuroninfolite static method)": [[39, "bittensor.NeuronInfoLite._neuron_dict_to_namespace"]], "_null_neuron() (bittensor.neuroninfo static method)": [[39, "bittensor.NeuronInfo._null_neuron"]], "_null_neuron() (bittensor.neuroninfolite static method)": [[39, "bittensor.NeuronInfoLite._null_neuron"]], "_null_neuron() (bittensor.subtensor static method)": [[39, "bittensor.subtensor._null_neuron"]], "_read_keyfile_data_from_file() (bittensor.keyfile method)": [[39, "bittensor.keyfile._read_keyfile_data_from_file"]], "_remove_private_keys() (bittensor.config static method)": [[39, "bittensor.config._remove_private_keys"]], "_to_parameter_dict() (bittensor.axoninfo method)": [[39, "bittensor.AxonInfo._to_parameter_dict"]], "_to_parameter_dict() (bittensor.ipinfo method)": [[39, "bittensor.IPInfo._to_parameter_dict"]], "_to_parameter_dict() (bittensor.subnetinfo method)": [[39, "bittensor.SubnetInfo._to_parameter_dict"]], "_to_parameter_dict_torch() (bittensor.subnethyperparameters method)": [[39, "bittensor.SubnetHyperparameters._to_parameter_dict_torch"]], "_write_keyfile_data_to_file() (bittensor.keyfile method)": [[39, "bittensor.keyfile._write_keyfile_data_to_file"]], "aclose_session() (bittensor.dendrite method)": [[39, "bittensor.dendrite.aclose_session"]], "active (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.active"]], "active (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.active"]], "activity_cutoff (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.activity_cutoff"]], "add_args() (bittensor.prioritythreadpoolexecutor class method)": [[39, "bittensor.PriorityThreadPoolExecutor.add_args"]], "add_args() (bittensor.axon class method)": [[39, "bittensor.axon.add_args"]], "add_args() (bittensor.subtensor class method)": [[39, "bittensor.subtensor.add_args"]], "add_args() (bittensor.wallet class method)": [[39, "bittensor.wallet.add_args"]], "add_stake() (bittensor.subtensor method)": [[39, "bittensor.subtensor.add_stake"]], "add_stake_multiple() (bittensor.subtensor method)": [[39, "bittensor.subtensor.add_stake_multiple"]], "adjustment_alpha (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.adjustment_alpha"]], "adjustment_alpha() (bittensor.subtensor method)": [[39, "bittensor.subtensor.adjustment_alpha"]], "adjustment_interval (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.adjustment_interval"]], "ask_password_to_encrypt() (in module bittensor)": [[39, "bittensor.ask_password_to_encrypt"]], "associated_validator_ip_info() (bittensor.subtensor method)": [[39, "bittensor.subtensor.associated_validator_ip_info"]], "attach() (bittensor.axon method)": [[39, "bittensor.axon.attach"]], "axon (bittensor.synapse attribute)": [[39, "bittensor.Synapse.axon"]], "axon (class in bittensor)": [[39, "bittensor.axon"]], "axon_info (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.axon_info"]], "axon_info (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.axon_info"]], "ayes (bittensor.proposalvotedata attribute)": [[39, "bittensor.ProposalVoteData.ayes"]], "bittensor": [[39, "module-bittensor"]], "block (bittensor.prometheusinfo attribute)": [[39, "bittensor.PrometheusInfo.block"]], "block (bittensor.subtensor property)": [[39, "bittensor.subtensor.block"]], "blocks_since_epoch (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.blocks_since_epoch"]], "blocks_since_epoch() (bittensor.subtensor method)": [[39, "bittensor.subtensor.blocks_since_epoch"]], "blocks_since_last_update() (bittensor.subtensor method)": [[39, "bittensor.subtensor.blocks_since_last_update"]], "body_hash (bittensor.synapse property)": [[39, "id0"]], "body_hash() (bittensor.synapse method)": [[39, "bittensor.Synapse.body_hash"]], "bonds (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.bonds"]], "bonds() (bittensor.subtensor method)": [[39, "bittensor.subtensor.bonds"]], "bonds_moving_avg (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.bonds_moving_avg"]], "bonds_moving_avg() (bittensor.subtensor method)": [[39, "bittensor.subtensor.bonds_moving_avg"]], "buffer (bittensor.tensor attribute)": [[39, "bittensor.Tensor.buffer"]], "burn (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.burn"]], "burned_register() (bittensor.subtensor method)": [[39, "bittensor.subtensor.burned_register"]], "call() (bittensor.dendrite method)": [[39, "bittensor.dendrite.call"]], "call_stream() (bittensor.dendrite method)": [[39, "bittensor.dendrite.call_stream"]], "check_and_update_encryption() (bittensor.mockkeyfile method)": [[39, "bittensor.Mockkeyfile.check_and_update_encryption"]], "check_and_update_encryption() (bittensor.keyfile method)": [[39, "bittensor.keyfile.check_and_update_encryption"]], "check_config() (bittensor.axon class method)": [[39, "bittensor.axon.check_config"]], "check_config() (bittensor.cli static method)": [[39, "bittensor.cli.check_config"]], "cli (class in bittensor)": [[39, "bittensor.cli"]], "close() (bittensor.subtensor method)": [[39, "bittensor.subtensor.close"]], "close_session() (bittensor.dendrite method)": [[39, "bittensor.dendrite.close_session"]], "coldkey (bittensor.axoninfo attribute)": [[39, "bittensor.AxonInfo.coldkey"]], "coldkey (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.coldkey"]], "coldkey (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.coldkey"]], "coldkey (bittensor.wallet property)": [[39, "bittensor.wallet.coldkey"]], "coldkey_file (bittensor.wallet property)": [[39, "bittensor.wallet.coldkey_file"]], "coldkey_ss58 (bittensor.stakeinfo attribute)": [[39, "bittensor.StakeInfo.coldkey_ss58"]], "coldkeypub (bittensor.wallet property)": [[39, "bittensor.wallet.coldkeypub"]], "coldkeypub_file (bittensor.wallet property)": [[39, "bittensor.wallet.coldkeypub_file"]], "commit() (bittensor.subtensor method)": [[39, "bittensor.subtensor.commit"]], "computed_body_hash (bittensor.synapse attribute)": [[39, "bittensor.Synapse.computed_body_hash"]], "config (class in bittensor)": [[39, "bittensor.config"]], "config() (bittensor.prioritythreadpoolexecutor class method)": [[39, "bittensor.PriorityThreadPoolExecutor.config"]], "config() (bittensor.axon class method)": [[39, "bittensor.axon.config"]], "config() (bittensor.subtensor static method)": [[39, "bittensor.subtensor.config"]], "config() (bittensor.wallet class method)": [[39, "bittensor.wallet.config"]], "configs (in module bittensor)": [[39, "bittensor.configs"]], "connection_requirements (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.connection_requirements"]], "consensus (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.consensus"]], "consensus (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.consensus"]], "copy() (bittensor.config method)": [[39, "bittensor.config.copy"]], "create() (bittensor.wallet method)": [[39, "bittensor.wallet.create"]], "create_coldkey_from_uri() (bittensor.wallet method)": [[39, "bittensor.wallet.create_coldkey_from_uri"]], "create_config() (bittensor.cli static method)": [[39, "bittensor.cli.create_config"]], "create_hotkey_from_uri() (bittensor.wallet method)": [[39, "bittensor.wallet.create_hotkey_from_uri"]], "create_if_non_existent() (bittensor.wallet method)": [[39, "bittensor.wallet.create_if_non_existent"]], "create_new_coldkey() (bittensor.wallet method)": [[39, "bittensor.wallet.create_new_coldkey"]], "create_new_hotkey() (bittensor.wallet method)": [[39, "bittensor.wallet.create_new_hotkey"]], "create_streaming_response() (bittensor.streamingsynapse method)": [[39, "bittensor.StreamingSynapse.create_streaming_response"]], "data (bittensor.mockkeyfile property)": [[39, "bittensor.Mockkeyfile.data"]], "data (bittensor.keyfile property)": [[39, "bittensor.keyfile.data"]], "debug() (in module bittensor)": [[39, "bittensor.debug"]], "decrypt() (bittensor.mockkeyfile method)": [[39, "bittensor.Mockkeyfile.decrypt"]], "decrypt() (bittensor.keyfile method)": [[39, "bittensor.keyfile.decrypt"]], "decrypt_keyfile_data() (in module bittensor)": [[39, "bittensor.decrypt_keyfile_data"]], "default() (bittensor.defaultconfig class method)": [[39, "bittensor.DefaultConfig.default"]], "default_verify() (bittensor.axon method)": [[39, "bittensor.axon.default_verify"]], "defaults (in module bittensor)": [[39, "bittensor.defaults"]], "delegate() (bittensor.subtensor method)": [[39, "bittensor.subtensor.delegate"]], "delegate_ss58 (bittensor.delegateinfolite attribute)": [[39, "bittensor.DelegateInfoLite.delegate_ss58"]], "delegated_list_from_vec_u8() (bittensor.delegateinfo class method)": [[39, "bittensor.DelegateInfo.delegated_list_from_vec_u8"]], "dendrite (bittensor.synapse attribute)": [[39, "bittensor.Synapse.dendrite"]], "dendrite (class in bittensor)": [[39, "bittensor.dendrite"]], "deserialize() (bittensor.synapse method)": [[39, "bittensor.Synapse.deserialize"], [39, "id8"]], "deserialize() (bittensor.tensor method)": [[39, "bittensor.Tensor.deserialize"]], "deserialize_keypair_from_keyfile_data() (in module bittensor)": [[39, "bittensor.deserialize_keypair_from_keyfile_data"]], "determine_chain_endpoint_and_network() (bittensor.subtensor static method)": [[39, "bittensor.subtensor.determine_chain_endpoint_and_network"]], "difficulty (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.difficulty"]], "difficulty (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.difficulty"]], "difficulty() (bittensor.subtensor method)": [[39, "bittensor.subtensor.difficulty"]], "display_mnemonic_msg() (in module bittensor)": [[39, "bittensor.display_mnemonic_msg"]], "dividends (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.dividends"]], "dividends (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.dividends"]], "does_hotkey_exist() (bittensor.subtensor method)": [[39, "bittensor.subtensor.does_hotkey_exist"]], "dtype (bittensor.tensor attribute)": [[39, "bittensor.Tensor.dtype"]], "emission (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.emission"]], "emission (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.emission"]], "emission_value (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.emission_value"]], "encode() (bittensor.ipinfo method)": [[39, "bittensor.IPInfo.encode"]], "encrypt() (bittensor.mockkeyfile method)": [[39, "bittensor.Mockkeyfile.encrypt"]], "encrypt() (bittensor.keyfile method)": [[39, "bittensor.keyfile.encrypt"]], "encrypt_keyfile_data() (in module bittensor)": [[39, "bittensor.encrypt_keyfile_data"]], "end (bittensor.proposalvotedata attribute)": [[39, "bittensor.ProposalVoteData.end"]], "exists_on_device() (bittensor.mockkeyfile method)": [[39, "bittensor.Mockkeyfile.exists_on_device"]], "exists_on_device() (bittensor.keyfile method)": [[39, "bittensor.keyfile.exists_on_device"]], "extract_response_json() (bittensor.streamingsynapse method)": [[39, "bittensor.StreamingSynapse.extract_response_json"]], "failed_verification (bittensor.synapse property)": [[39, "bittensor.Synapse.failed_verification"]], "fix_decoded_values() (bittensor.delegateinfo class method)": [[39, "bittensor.DelegateInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.ipinfo class method)": [[39, "bittensor.IPInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.neuroninfo class method)": [[39, "bittensor.NeuronInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.neuroninfolite class method)": [[39, "bittensor.NeuronInfoLite.fix_decoded_values"]], "fix_decoded_values() (bittensor.prometheusinfo class method)": [[39, "bittensor.PrometheusInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.stakeinfo class method)": [[39, "bittensor.StakeInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.subnethyperparameters class method)": [[39, "bittensor.SubnetHyperparameters.fix_decoded_values"]], "fix_decoded_values() (bittensor.subnetinfo class method)": [[39, "bittensor.SubnetInfo.fix_decoded_values"]], "forward() (bittensor.dendrite method)": [[39, "bittensor.dendrite.forward"]], "from_headers() (bittensor.synapse class method)": [[39, "id9"]], "from_headers() (bittensor.synapse method)": [[39, "bittensor.Synapse.from_headers"]], "from_neuron_info() (bittensor.axoninfo class method)": [[39, "bittensor.AxonInfo.from_neuron_info"]], "from_parameter_dict() (bittensor.axoninfo class method)": [[39, "bittensor.AxonInfo.from_parameter_dict"]], "from_parameter_dict() (bittensor.ipinfo class method)": [[39, "bittensor.IPInfo.from_parameter_dict"]], "from_parameter_dict() (bittensor.subnethyperparameters class method)": [[39, "bittensor.SubnetHyperparameters.from_parameter_dict"]], "from_parameter_dict() (bittensor.subnetinfo class method)": [[39, "bittensor.SubnetInfo.from_parameter_dict"]], "from_string() (bittensor.axoninfo class method)": [[39, "bittensor.AxonInfo.from_string"]], "from_vec_u8() (bittensor.delegateinfo class method)": [[39, "bittensor.DelegateInfo.from_vec_u8"]], "from_vec_u8() (bittensor.ipinfo class method)": [[39, "bittensor.IPInfo.from_vec_u8"]], "from_vec_u8() (bittensor.neuroninfo class method)": [[39, "bittensor.NeuronInfo.from_vec_u8"]], "from_vec_u8() (bittensor.neuroninfolite class method)": [[39, "bittensor.NeuronInfoLite.from_vec_u8"]], "from_vec_u8() (bittensor.stakeinfo class method)": [[39, "bittensor.StakeInfo.from_vec_u8"]], "from_vec_u8() (bittensor.subnethyperparameters class method)": [[39, "bittensor.SubnetHyperparameters.from_vec_u8"]], "from_vec_u8() (bittensor.subnetinfo class method)": [[39, "bittensor.SubnetInfo.from_vec_u8"]], "from_weights_bonds_and_neuron_lite() (bittensor.neuroninfo class method)": [[39, "bittensor.NeuronInfo.from_weights_bonds_and_neuron_lite"]], "get_all_neurons_for_pubkey() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_all_neurons_for_pubkey"]], "get_all_subnet_netuids() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_all_subnet_netuids"]], "get_all_subnets_info() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_all_subnets_info"]], "get_all_uids_for_hotkey() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_all_uids_for_hotkey"]], "get_axon_info() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_axon_info"]], "get_balance() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_balance"]], "get_balances() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_balances"]], "get_block_hash() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_block_hash"]], "get_coldkey() (bittensor.wallet method)": [[39, "bittensor.wallet.get_coldkey"]], "get_coldkey_password_from_environment() (in module bittensor)": [[39, "bittensor.get_coldkey_password_from_environment"]], "get_coldkeypub() (bittensor.wallet method)": [[39, "bittensor.wallet.get_coldkeypub"]], "get_commitment() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_commitment"]], "get_current_block() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_current_block"]], "get_delegate_by_hotkey() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_delegate_by_hotkey"]], "get_delegate_take() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_delegate_take"]], "get_delegated() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_delegated"]], "get_delegates() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_delegates"]], "get_delegates_lite() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_delegates_lite"]], "get_emission_value_by_subnet() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_emission_value_by_subnet"]], "get_error_info_by_index() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_error_info_by_index"]], "get_existential_deposit() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_existential_deposit"]], "get_hotkey() (bittensor.wallet method)": [[39, "bittensor.wallet.get_hotkey"]], "get_hotkey_owner() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_hotkey_owner"]], "get_keypair() (bittensor.mockkeyfile method)": [[39, "bittensor.Mockkeyfile.get_keypair"]], "get_keypair() (bittensor.keyfile method)": [[39, "bittensor.keyfile.get_keypair"]], "get_minimum_required_stake() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_minimum_required_stake"]], "get_netuids_for_hotkey() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_netuids_for_hotkey"]], "get_neuron_for_pubkey_and_subnet() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_neuron_for_pubkey_and_subnet"]], "get_nominators_for_hotkey() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_nominators_for_hotkey"]], "get_prometheus_info() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_prometheus_info"]], "get_proposal_call_data() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_proposal_call_data"]], "get_proposal_hashes() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_proposal_hashes"]], "get_proposal_vote_data (bittensor.subtensor attribute)": [[39, "bittensor.subtensor.get_proposal_vote_data"]], "get_proposals() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_proposals"]], "get_required_fields() (bittensor.synapse method)": [[39, "bittensor.Synapse.get_required_fields"]], "get_senate_members() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_senate_members"]], "get_stake() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_stake"]], "get_stake_for_coldkey_and_hotkey() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_stake_for_coldkey_and_hotkey"]], "get_stake_info_for_coldkey() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_stake_info_for_coldkey"]], "get_stake_info_for_coldkeys() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_stake_info_for_coldkeys"]], "get_subnet_burn_cost() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_subnet_burn_cost"]], "get_subnet_connection_requirement() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_subnet_connection_requirement"]], "get_subnet_connection_requirements() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_subnet_connection_requirements"]], "get_subnet_hyperparameters() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_subnet_hyperparameters"]], "get_subnet_info() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_subnet_info"]], "get_subnet_modality() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_subnet_modality"]], "get_subnet_owner() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_subnet_owner"]], "get_subnets() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_subnets"]], "get_total_size() (bittensor.synapse method)": [[39, "bittensor.Synapse.get_total_size"], [39, "id10"]], "get_total_stake_for_coldkey() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_total_stake_for_coldkey"]], "get_total_stake_for_hotkey() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_total_stake_for_hotkey"]], "get_total_subnets() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_total_subnets"]], "get_transfer_fee() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_transfer_fee"]], "get_uid_for_hotkey_on_subnet() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_uid_for_hotkey_on_subnet"]], "get_vote_data() (bittensor.subtensor method)": [[39, "bittensor.subtensor.get_vote_data"]], "header_size (bittensor.synapse attribute)": [[39, "bittensor.Synapse.header_size"]], "help() (bittensor.axon class method)": [[39, "bittensor.axon.help"]], "help() (bittensor.subtensor class method)": [[39, "bittensor.subtensor.help"]], "help() (bittensor.wallet class method)": [[39, "bittensor.wallet.help"]], "hotkey (bittensor.axoninfo attribute)": [[39, "bittensor.AxonInfo.hotkey"]], "hotkey (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.hotkey"]], "hotkey (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.hotkey"]], "hotkey (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo.hotkey"]], "hotkey (bittensor.wallet property)": [[39, "bittensor.wallet.hotkey"]], "hotkey_file (bittensor.wallet property)": [[39, "bittensor.wallet.hotkey_file"]], "hotkey_ss58 (bittensor.delegateinfo attribute)": [[39, "bittensor.DelegateInfo.hotkey_ss58"]], "hotkey_ss58 (bittensor.stakeinfo attribute)": [[39, "bittensor.StakeInfo.hotkey_ss58"]], "immunity_period (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.immunity_period"]], "immunity_period (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.immunity_period"]], "immunity_period() (bittensor.subtensor method)": [[39, "bittensor.subtensor.immunity_period"]], "incentive (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.incentive"]], "incentive (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.incentive"]], "incentive() (bittensor.subtensor method)": [[39, "bittensor.subtensor.incentive"]], "index (bittensor.proposalvotedata attribute)": [[39, "bittensor.ProposalVoteData.index"]], "info() (bittensor.axon method)": [[39, "bittensor.axon.info"]], "ip (bittensor.axoninfo attribute)": [[39, "bittensor.AxonInfo.ip"]], "ip (bittensor.ipinfo attribute)": [[39, "bittensor.IPInfo.ip"]], "ip (bittensor.prometheusinfo attribute)": [[39, "bittensor.PrometheusInfo.ip"]], "ip (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo.ip"]], "ip_str() (bittensor.axoninfo method)": [[39, "bittensor.AxonInfo.ip_str"]], "ip_type (bittensor.axoninfo attribute)": [[39, "bittensor.AxonInfo.ip_type"]], "ip_type (bittensor.ipinfo attribute)": [[39, "bittensor.IPInfo.ip_type"]], "ip_type (bittensor.prometheusinfo attribute)": [[39, "bittensor.PrometheusInfo.ip_type"]], "is_blacklist (bittensor.synapse property)": [[39, "bittensor.Synapse.is_blacklist"]], "is_empty (bittensor.prioritythreadpoolexecutor property)": [[39, "bittensor.PriorityThreadPoolExecutor.is_empty"]], "is_encrypted() (bittensor.mockkeyfile method)": [[39, "bittensor.Mockkeyfile.is_encrypted"]], "is_encrypted() (bittensor.keyfile method)": [[39, "bittensor.keyfile.is_encrypted"]], "is_failure (bittensor.synapse property)": [[39, "bittensor.Synapse.is_failure"]], "is_hotkey_delegate() (bittensor.subtensor method)": [[39, "bittensor.subtensor.is_hotkey_delegate"]], "is_hotkey_registered() (bittensor.subtensor method)": [[39, "bittensor.subtensor.is_hotkey_registered"]], "is_hotkey_registered_any() (bittensor.subtensor method)": [[39, "bittensor.subtensor.is_hotkey_registered_any"]], "is_hotkey_registered_on_subnet() (bittensor.subtensor method)": [[39, "bittensor.subtensor.is_hotkey_registered_on_subnet"]], "is_null (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.is_null"]], "is_null (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.is_null"]], "is_readable() (bittensor.mockkeyfile method)": [[39, "bittensor.Mockkeyfile.is_readable"]], "is_readable() (bittensor.keyfile method)": [[39, "bittensor.keyfile.is_readable"]], "is_senate_member() (bittensor.subtensor method)": [[39, "bittensor.subtensor.is_senate_member"]], "is_serving (bittensor.axoninfo property)": [[39, "bittensor.AxonInfo.is_serving"]], "is_set() (bittensor.config method)": [[39, "bittensor.config.is_set"]], "is_success (bittensor.synapse property)": [[39, "bittensor.Synapse.is_success"]], "is_timeout (bittensor.synapse property)": [[39, "bittensor.Synapse.is_timeout"]], "is_writable() (bittensor.mockkeyfile method)": [[39, "bittensor.Mockkeyfile.is_writable"]], "is_writable() (bittensor.keyfile method)": [[39, "bittensor.keyfile.is_writable"]], "kappa (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.kappa"]], "kappa (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.kappa"]], "kappa() (bittensor.subtensor method)": [[39, "bittensor.subtensor.kappa"]], "keyfile (class in bittensor)": [[39, "bittensor.keyfile"]], "keyfile_data (bittensor.keyfile property)": [[39, "bittensor.keyfile.keyfile_data"]], "keyfile_data_encryption_method() (in module bittensor)": [[39, "bittensor.keyfile_data_encryption_method"]], "keyfile_data_is_encrypted() (in module bittensor)": [[39, "bittensor.keyfile_data_is_encrypted"]], "keyfile_data_is_encrypted_ansible() (in module bittensor)": [[39, "bittensor.keyfile_data_is_encrypted_ansible"]], "keyfile_data_is_encrypted_legacy() (in module bittensor)": [[39, "bittensor.keyfile_data_is_encrypted_legacy"]], "keyfile_data_is_encrypted_nacl() (in module bittensor)": [[39, "bittensor.keyfile_data_is_encrypted_nacl"]], "keypair (bittensor.mockkeyfile property)": [[39, "bittensor.Mockkeyfile.keypair"]], "keypair (bittensor.keyfile property)": [[39, "bittensor.keyfile.keypair"]], "last_update (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.last_update"]], "last_update (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.last_update"]], "leave_senate() (bittensor.subtensor method)": [[39, "bittensor.subtensor.leave_senate"]], "legacy_encrypt_keyfile_data() (in module bittensor)": [[39, "bittensor.legacy_encrypt_keyfile_data"]], "list_from_vec_u8() (bittensor.delegateinfo class method)": [[39, "bittensor.DelegateInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.ipinfo class method)": [[39, "bittensor.IPInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.neuroninfo class method)": [[39, "bittensor.NeuronInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.neuroninfolite class method)": [[39, "bittensor.NeuronInfoLite.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.stakeinfo class method)": [[39, "bittensor.StakeInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.subnethyperparameters class method)": [[39, "bittensor.SubnetHyperparameters.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.subnetinfo class method)": [[39, "bittensor.SubnetInfo.list_from_vec_u8"]], "list_of_tuple_from_vec_u8() (bittensor.stakeinfo class method)": [[39, "bittensor.StakeInfo.list_of_tuple_from_vec_u8"]], "logging (in module bittensor)": [[39, "bittensor.logging"]], "make_dirs() (bittensor.mockkeyfile method)": [[39, "bittensor.Mockkeyfile.make_dirs"]], "make_dirs() (bittensor.keyfile method)": [[39, "bittensor.keyfile.make_dirs"]], "max_allowed_validators (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.max_allowed_validators"]], "max_allowed_validators() (bittensor.subtensor method)": [[39, "bittensor.subtensor.max_allowed_validators"]], "max_burn (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.max_burn"]], "max_difficulty (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.max_difficulty"]], "max_n (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.max_n"]], "max_n() (bittensor.subtensor method)": [[39, "bittensor.subtensor.max_n"]], "max_regs_per_block (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.max_regs_per_block"]], "max_validators (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.max_validators"]], "max_weight_limit (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.max_weight_limit"]], "max_weight_limit (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.max_weight_limit"]], "max_weight_limit() (bittensor.subtensor method)": [[39, "bittensor.subtensor.max_weight_limit"]], "merge() (bittensor.config method)": [[39, "bittensor.config.merge"]], "merge_all() (bittensor.config class method)": [[39, "bittensor.config.merge_all"]], "metagraph (in module bittensor)": [[39, "bittensor.metagraph"]], "metagraph() (bittensor.subtensor method)": [[39, "bittensor.subtensor.metagraph"]], "min_allowed_weights (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.min_allowed_weights"]], "min_allowed_weights (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.min_allowed_weights"]], "min_allowed_weights() (bittensor.subtensor method)": [[39, "bittensor.subtensor.min_allowed_weights"]], "min_burn (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.min_burn"]], "min_difficulty (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.min_difficulty"]], "modality (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.modality"]], "model_config (bittensor.streamingsynapse attribute)": [[39, "bittensor.StreamingSynapse.model_config"]], "model_config (bittensor.synapse attribute)": [[39, "bittensor.Synapse.model_config"]], "model_config (bittensor.tensor attribute)": [[39, "bittensor.Tensor.model_config"]], "model_config (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo.model_config"]], "name (bittensor.synapse attribute)": [[39, "bittensor.Synapse.name"]], "nays (bittensor.proposalvotedata attribute)": [[39, "bittensor.ProposalVoteData.nays"]], "netuid (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.netuid"]], "netuid (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.netuid"]], "netuid (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.netuid"]], "neuron_for_uid() (bittensor.subtensor method)": [[39, "bittensor.subtensor.neuron_for_uid"]], "neuron_for_uid_lite() (bittensor.subtensor method)": [[39, "bittensor.subtensor.neuron_for_uid_lite"]], "neuron_for_wallet() (bittensor.subtensor method)": [[39, "bittensor.subtensor.neuron_for_wallet"]], "neuron_has_validator_permit() (bittensor.subtensor method)": [[39, "bittensor.subtensor.neuron_has_validator_permit"]], "neurons() (bittensor.subtensor method)": [[39, "bittensor.subtensor.neurons"]], "neurons_lite() (bittensor.subtensor method)": [[39, "bittensor.subtensor.neurons_lite"]], "new_coldkey() (bittensor.wallet method)": [[39, "bittensor.wallet.new_coldkey"]], "new_hotkey() (bittensor.wallet method)": [[39, "bittensor.wallet.new_hotkey"]], "nominate() (bittensor.subtensor method)": [[39, "bittensor.subtensor.nominate"]], "nominators (bittensor.delegateinfo attribute)": [[39, "bittensor.DelegateInfo.nominators"]], "nominators (bittensor.delegateinfolite attribute)": [[39, "bittensor.DelegateInfoLite.nominators"]], "nonce (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo.nonce"]], "numpy() (bittensor.tensor method)": [[39, "bittensor.Tensor.numpy"]], "owner_ss58 (bittensor.delegateinfo attribute)": [[39, "bittensor.DelegateInfo.owner_ss58"]], "owner_ss58 (bittensor.delegateinfolite attribute)": [[39, "bittensor.DelegateInfoLite.owner_ss58"]], "owner_ss58 (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.owner_ss58"]], "parse_headers_to_inputs() (bittensor.synapse class method)": [[39, "id11"]], "parse_headers_to_inputs() (bittensor.synapse method)": [[39, "bittensor.Synapse.parse_headers_to_inputs"]], "placeholder1 (bittensor.axoninfo attribute)": [[39, "bittensor.AxonInfo.placeholder1"]], "placeholder2 (bittensor.axoninfo attribute)": [[39, "bittensor.AxonInfo.placeholder2"]], "port (bittensor.axoninfo attribute)": [[39, "bittensor.AxonInfo.port"]], "port (bittensor.prometheusinfo attribute)": [[39, "bittensor.PrometheusInfo.port"]], "port (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo.port"]], "prepare_synapse() (bittensor.subnetsapi method)": [[39, "bittensor.SubnetsAPI.prepare_synapse"]], "preprocess_synapse_for_request() (bittensor.dendrite method)": [[39, "bittensor.dendrite.preprocess_synapse_for_request"]], "process_responses() (bittensor.subnetsapi method)": [[39, "bittensor.SubnetsAPI.process_responses"]], "process_server_response() (bittensor.dendrite method)": [[39, "bittensor.dendrite.process_server_response"]], "process_streaming_response() (bittensor.streamingsynapse method)": [[39, "bittensor.StreamingSynapse.process_streaming_response"]], "process_time (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo.process_time"]], "prometheus_info (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.prometheus_info"]], "prometheus_info (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.prometheus_info"]], "protocol (bittensor.axoninfo attribute)": [[39, "bittensor.AxonInfo.protocol"]], "protocol (bittensor.ipinfo attribute)": [[39, "bittensor.IPInfo.protocol"]], "pruning_score (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.pruning_score"]], "pruning_score (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.pruning_score"]], "query() (bittensor.dendrite method)": [[39, "bittensor.dendrite.query"]], "query_api() (bittensor.subnetsapi method)": [[39, "bittensor.SubnetsAPI.query_api"]], "query_constant() (bittensor.subtensor method)": [[39, "bittensor.subtensor.query_constant"]], "query_identity() (bittensor.subtensor method)": [[39, "bittensor.subtensor.query_identity"]], "query_map() (bittensor.subtensor method)": [[39, "bittensor.subtensor.query_map"]], "query_map_subtensor() (bittensor.subtensor method)": [[39, "bittensor.subtensor.query_map_subtensor"]], "query_module() (bittensor.subtensor method)": [[39, "bittensor.subtensor.query_module"]], "query_runtime_api() (bittensor.subtensor method)": [[39, "bittensor.subtensor.query_runtime_api"]], "query_subtensor() (bittensor.subtensor method)": [[39, "bittensor.subtensor.query_subtensor"]], "rank (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.rank"]], "rank (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.rank"]], "recreate() (bittensor.wallet method)": [[39, "bittensor.wallet.recreate"]], "recycle() (bittensor.subtensor method)": [[39, "bittensor.subtensor.recycle"]], "regen_coldkey (bittensor.wallet attribute)": [[39, "bittensor.wallet.regen_coldkey"]], "regen_coldkeypub (bittensor.wallet attribute)": [[39, "bittensor.wallet.regen_coldkeypub"]], "regen_hotkey (bittensor.wallet attribute)": [[39, "bittensor.wallet.regen_hotkey"]], "regenerate_coldkey() (bittensor.wallet method)": [[39, "bittensor.wallet.regenerate_coldkey"]], "regenerate_coldkeypub() (bittensor.wallet method)": [[39, "bittensor.wallet.regenerate_coldkeypub"]], "regenerate_hotkey() (bittensor.wallet method)": [[39, "bittensor.wallet.regenerate_hotkey"]], "register() (bittensor.subtensor method)": [[39, "bittensor.subtensor.register"]], "register_senate() (bittensor.subtensor method)": [[39, "bittensor.subtensor.register_senate"]], "register_subnetwork() (bittensor.subtensor method)": [[39, "bittensor.subtensor.register_subnetwork"]], "registration_allowed (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.registration_allowed"]], "registrations (bittensor.delegateinfo attribute)": [[39, "bittensor.DelegateInfo.registrations"]], "registrations (bittensor.delegateinfolite attribute)": [[39, "bittensor.DelegateInfoLite.registrations"]], "required_hash_fields (bittensor.synapse attribute)": [[39, "bittensor.Synapse.required_hash_fields"]], "return_per_1000 (bittensor.delegateinfo attribute)": [[39, "bittensor.DelegateInfo.return_per_1000"]], "return_per_1000 (bittensor.delegateinfolite attribute)": [[39, "bittensor.DelegateInfoLite.return_per_1000"]], "rho (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.rho"]], "rho (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.rho"]], "rho() (bittensor.subtensor method)": [[39, "bittensor.subtensor.rho"]], "root_register() (bittensor.subtensor method)": [[39, "bittensor.subtensor.root_register"]], "root_set_weights() (bittensor.subtensor method)": [[39, "bittensor.subtensor.root_set_weights"]], "run() (bittensor.cli method)": [[39, "bittensor.cli.run"]], "run_faucet() (bittensor.subtensor method)": [[39, "bittensor.subtensor.run_faucet"]], "scaling_law_power (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.scaling_law_power"]], "scaling_law_power() (bittensor.subtensor method)": [[39, "bittensor.subtensor.scaling_law_power"]], "send_extrinsic() (bittensor.subtensor method)": [[39, "bittensor.subtensor.send_extrinsic"]], "serialize() (bittensor.tensor static method)": [[39, "bittensor.Tensor.serialize"]], "serialized_keypair_to_keyfile_data() (in module bittensor)": [[39, "bittensor.serialized_keypair_to_keyfile_data"]], "serve() (bittensor.axon method)": [[39, "bittensor.axon.serve"]], "serve() (bittensor.subtensor method)": [[39, "bittensor.subtensor.serve"]], "serve_axon() (bittensor.subtensor method)": [[39, "bittensor.subtensor.serve_axon"]], "serve_prometheus() (bittensor.subtensor method)": [[39, "bittensor.subtensor.serve_prometheus"]], "serving_rate_limit (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.serving_rate_limit"]], "serving_rate_limit() (bittensor.subtensor method)": [[39, "bittensor.subtensor.serving_rate_limit"]], "set_coldkey() (bittensor.wallet method)": [[39, "bittensor.wallet.set_coldkey"]], "set_coldkeypub() (bittensor.wallet method)": [[39, "bittensor.wallet.set_coldkeypub"]], "set_hotkey() (bittensor.wallet method)": [[39, "bittensor.wallet.set_hotkey"]], "set_hyperparameter() (bittensor.subtensor method)": [[39, "bittensor.subtensor.set_hyperparameter"]], "set_keypair() (bittensor.mockkeyfile method)": [[39, "bittensor.Mockkeyfile.set_keypair"]], "set_keypair() (bittensor.keyfile method)": [[39, "bittensor.keyfile.set_keypair"]], "set_name_type() (bittensor.synapse method)": [[39, "bittensor.Synapse.set_name_type"]], "set_take() (bittensor.subtensor method)": [[39, "bittensor.subtensor.set_take"]], "set_weights() (bittensor.subtensor method)": [[39, "bittensor.subtensor.set_weights"]], "setup_config() (bittensor.subtensor static method)": [[39, "bittensor.subtensor.setup_config"]], "shape (bittensor.tensor attribute)": [[39, "bittensor.Tensor.shape"]], "shutdown() (bittensor.prioritythreadpoolexecutor method)": [[39, "bittensor.PriorityThreadPoolExecutor.shutdown"]], "signature (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo.signature"]], "stake (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.stake"]], "stake (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.stake"]], "stake (bittensor.stakeinfo attribute)": [[39, "bittensor.StakeInfo.stake"]], "stake_dict (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.stake_dict"]], "stake_dict (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.stake_dict"]], "start() (bittensor.axon method)": [[39, "bittensor.axon.start"]], "state_call() (bittensor.subtensor method)": [[39, "bittensor.subtensor.state_call"]], "status_code (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo.status_code"]], "status_message (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo.status_message"]], "stop() (bittensor.axon method)": [[39, "bittensor.axon.stop"]], "stream_response() (bittensor.streamingsynapse.btstreamingresponse method)": [[39, "bittensor.StreamingSynapse.BTStreamingResponse.stream_response"]], "submit() (bittensor.prioritythreadpoolexecutor method)": [[39, "bittensor.PriorityThreadPoolExecutor.submit"]], "subnet_exists() (bittensor.subtensor method)": [[39, "bittensor.subtensor.subnet_exists"]], "subnetwork_n (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.subnetwork_n"]], "subnetwork_n() (bittensor.subtensor method)": [[39, "bittensor.subtensor.subnetwork_n"]], "subtensor (class in bittensor)": [[39, "bittensor.subtensor"]], "swap_hotkey() (bittensor.subtensor method)": [[39, "bittensor.subtensor.swap_hotkey"]], "synergy_scaling_law_power() (bittensor.subtensor method)": [[39, "bittensor.subtensor.synergy_scaling_law_power"]], "take (bittensor.delegateinfo attribute)": [[39, "bittensor.DelegateInfo.take"]], "take (bittensor.delegateinfolite attribute)": [[39, "bittensor.DelegateInfoLite.take"]], "target_regs_per_interval (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.target_regs_per_interval"]], "tempo (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.tempo"]], "tempo (bittensor.subnetinfo attribute)": [[39, "bittensor.SubnetInfo.tempo"]], "tempo() (bittensor.subtensor method)": [[39, "bittensor.subtensor.tempo"]], "tensor() (bittensor.tensor method)": [[39, "bittensor.Tensor.tensor"]], "threshold (bittensor.proposalvotedata attribute)": [[39, "bittensor.ProposalVoteData.threshold"]], "timeout (bittensor.synapse attribute)": [[39, "bittensor.Synapse.timeout"]], "to_headers() (bittensor.synapse method)": [[39, "bittensor.Synapse.to_headers"], [39, "id12"]], "to_parameter_dict() (bittensor.axoninfo method)": [[39, "bittensor.AxonInfo.to_parameter_dict"]], "to_parameter_dict() (bittensor.ipinfo method)": [[39, "bittensor.IPInfo.to_parameter_dict"]], "to_parameter_dict() (bittensor.subnethyperparameters method)": [[39, "bittensor.SubnetHyperparameters.to_parameter_dict"]], "to_parameter_dict() (bittensor.subnetinfo method)": [[39, "bittensor.SubnetInfo.to_parameter_dict"]], "to_string() (bittensor.axoninfo method)": [[39, "bittensor.AxonInfo.to_string"]], "to_string() (bittensor.axon method)": [[39, "bittensor.axon.to_string"]], "to_string() (bittensor.config method)": [[39, "bittensor.config.to_string"]], "tolist() (bittensor.tensor method)": [[39, "bittensor.Tensor.tolist"]], "total_daily_return (bittensor.delegateinfo attribute)": [[39, "bittensor.DelegateInfo.total_daily_return"]], "total_daily_return (bittensor.delegateinfolite attribute)": [[39, "bittensor.DelegateInfoLite.total_daily_return"]], "total_issuance() (bittensor.subtensor method)": [[39, "bittensor.subtensor.total_issuance"]], "total_size (bittensor.synapse attribute)": [[39, "bittensor.Synapse.total_size"]], "total_stake (bittensor.delegateinfo attribute)": [[39, "bittensor.DelegateInfo.total_stake"]], "total_stake (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.total_stake"]], "total_stake (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.total_stake"]], "total_stake() (bittensor.subtensor method)": [[39, "bittensor.subtensor.total_stake"]], "trace() (in module bittensor)": [[39, "bittensor.trace"]], "transfer() (bittensor.subtensor method)": [[39, "bittensor.subtensor.transfer"]], "trust (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.trust"]], "trust (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.trust"]], "turn_console_off() (in module bittensor)": [[39, "bittensor.turn_console_off"]], "turn_console_on() (in module bittensor)": [[39, "bittensor.turn_console_on"]], "tx_rate_limit() (bittensor.subtensor method)": [[39, "bittensor.subtensor.tx_rate_limit"]], "uid (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.uid"]], "uid (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.uid"]], "undelegate() (bittensor.subtensor method)": [[39, "bittensor.subtensor.undelegate"]], "unstake() (bittensor.subtensor method)": [[39, "bittensor.subtensor.unstake"]], "unstake_multiple() (bittensor.subtensor method)": [[39, "bittensor.subtensor.unstake_multiple"]], "update_identity() (bittensor.subtensor method)": [[39, "bittensor.subtensor.update_identity"]], "update_with_kwargs() (bittensor.config method)": [[39, "bittensor.config.update_with_kwargs"]], "uuid (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo.uuid"]], "validate_password() (in module bittensor)": [[39, "bittensor.validate_password"]], "validator_batch_size() (bittensor.subtensor method)": [[39, "bittensor.subtensor.validator_batch_size"]], "validator_epoch_length() (bittensor.subtensor method)": [[39, "bittensor.subtensor.validator_epoch_length"]], "validator_epochs_per_reset() (bittensor.subtensor method)": [[39, "bittensor.subtensor.validator_epochs_per_reset"]], "validator_exclude_quantile() (bittensor.subtensor method)": [[39, "bittensor.subtensor.validator_exclude_quantile"]], "validator_logits_divergence() (bittensor.subtensor method)": [[39, "bittensor.subtensor.validator_logits_divergence"]], "validator_permit (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.validator_permit"]], "validator_permit (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.validator_permit"]], "validator_permits (bittensor.delegateinfo attribute)": [[39, "bittensor.DelegateInfo.validator_permits"]], "validator_permits (bittensor.delegateinfolite attribute)": [[39, "bittensor.DelegateInfoLite.validator_permits"]], "validator_prune_len() (bittensor.subtensor method)": [[39, "bittensor.subtensor.validator_prune_len"]], "validator_sequence_length() (bittensor.subtensor method)": [[39, "bittensor.subtensor.validator_sequence_length"]], "validator_trust (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.validator_trust"]], "validator_trust (bittensor.neuroninfolite attribute)": [[39, "bittensor.NeuronInfoLite.validator_trust"]], "verify_body_integrity() (bittensor.axon method)": [[39, "bittensor.axon.verify_body_integrity"]], "version (bittensor.axoninfo attribute)": [[39, "bittensor.AxonInfo.version"]], "version (bittensor.prometheusinfo attribute)": [[39, "bittensor.PrometheusInfo.version"]], "version (bittensor.terminalinfo attribute)": [[39, "bittensor.TerminalInfo.version"]], "version_split (in module bittensor)": [[39, "bittensor.version_split"]], "vote_senate() (bittensor.subtensor method)": [[39, "bittensor.subtensor.vote_senate"]], "wallet (class in bittensor)": [[39, "bittensor.wallet"]], "weights (bittensor.neuroninfo attribute)": [[39, "bittensor.NeuronInfo.weights"]], "weights() (bittensor.subtensor method)": [[39, "bittensor.subtensor.weights"]], "weights_rate_limit (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.weights_rate_limit"]], "weights_rate_limit() (bittensor.subtensor method)": [[39, "bittensor.subtensor.weights_rate_limit"]], "weights_version (bittensor.subnethyperparameters attribute)": [[39, "bittensor.SubnetHyperparameters.weights_version"]], "mockkeyfile (class in bittensor.keyfile)": [[40, "bittensor.keyfile.Mockkeyfile"]], "nacl_salt (in module bittensor.keyfile)": [[40, "bittensor.keyfile.NACL_SALT"]], "__repr__() (bittensor.keyfile.mockkeyfile method)": [[40, "bittensor.keyfile.Mockkeyfile.__repr__"]], "__repr__() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile.__repr__"]], "__str__() (bittensor.keyfile.mockkeyfile method)": [[40, "bittensor.keyfile.Mockkeyfile.__str__"]], "__str__() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile.__str__"]], "_may_overwrite() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile._may_overwrite"]], "_read_keyfile_data_from_file() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile._read_keyfile_data_from_file"]], "_write_keyfile_data_to_file() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile._write_keyfile_data_to_file"]], "ask_password_to_encrypt() (in module bittensor.keyfile)": [[40, "bittensor.keyfile.ask_password_to_encrypt"]], "bittensor.keyfile": [[40, "module-bittensor.keyfile"]], "check_and_update_encryption() (bittensor.keyfile.mockkeyfile method)": [[40, "bittensor.keyfile.Mockkeyfile.check_and_update_encryption"]], "check_and_update_encryption() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile.check_and_update_encryption"]], "data (bittensor.keyfile.mockkeyfile property)": [[40, "bittensor.keyfile.Mockkeyfile.data"]], "data (bittensor.keyfile.keyfile property)": [[40, "bittensor.keyfile.keyfile.data"]], "decrypt() (bittensor.keyfile.mockkeyfile method)": [[40, "bittensor.keyfile.Mockkeyfile.decrypt"]], "decrypt() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile.decrypt"]], "decrypt_keyfile_data() (in module bittensor.keyfile)": [[40, "bittensor.keyfile.decrypt_keyfile_data"]], "deserialize_keypair_from_keyfile_data() (in module bittensor.keyfile)": [[40, "bittensor.keyfile.deserialize_keypair_from_keyfile_data"]], "encrypt() (bittensor.keyfile.mockkeyfile method)": [[40, "bittensor.keyfile.Mockkeyfile.encrypt"]], "encrypt() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile.encrypt"]], "encrypt_keyfile_data() (in module bittensor.keyfile)": [[40, "bittensor.keyfile.encrypt_keyfile_data"]], "exists_on_device() (bittensor.keyfile.mockkeyfile method)": [[40, "bittensor.keyfile.Mockkeyfile.exists_on_device"]], "exists_on_device() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile.exists_on_device"]], "get_coldkey_password_from_environment() (in module bittensor.keyfile)": [[40, "bittensor.keyfile.get_coldkey_password_from_environment"]], "get_keypair() (bittensor.keyfile.mockkeyfile method)": [[40, "bittensor.keyfile.Mockkeyfile.get_keypair"]], "get_keypair() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile.get_keypair"]], "is_encrypted() (bittensor.keyfile.mockkeyfile method)": [[40, "bittensor.keyfile.Mockkeyfile.is_encrypted"]], "is_encrypted() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile.is_encrypted"]], "is_readable() (bittensor.keyfile.mockkeyfile method)": [[40, "bittensor.keyfile.Mockkeyfile.is_readable"]], "is_readable() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile.is_readable"]], "is_writable() (bittensor.keyfile.mockkeyfile method)": [[40, "bittensor.keyfile.Mockkeyfile.is_writable"]], "is_writable() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile.is_writable"]], "keyfile (class in bittensor.keyfile)": [[40, "bittensor.keyfile.keyfile"]], "keyfile_data (bittensor.keyfile.keyfile property)": [[40, "bittensor.keyfile.keyfile.keyfile_data"]], "keyfile_data_encryption_method() (in module bittensor.keyfile)": [[40, "bittensor.keyfile.keyfile_data_encryption_method"]], "keyfile_data_is_encrypted() (in module bittensor.keyfile)": [[40, "bittensor.keyfile.keyfile_data_is_encrypted"]], "keyfile_data_is_encrypted_ansible() (in module bittensor.keyfile)": [[40, "bittensor.keyfile.keyfile_data_is_encrypted_ansible"]], "keyfile_data_is_encrypted_legacy() (in module bittensor.keyfile)": [[40, "bittensor.keyfile.keyfile_data_is_encrypted_legacy"]], "keyfile_data_is_encrypted_nacl() (in module bittensor.keyfile)": [[40, "bittensor.keyfile.keyfile_data_is_encrypted_nacl"]], "keypair (bittensor.keyfile.mockkeyfile property)": [[40, "bittensor.keyfile.Mockkeyfile.keypair"]], "keypair (bittensor.keyfile.keyfile property)": [[40, "bittensor.keyfile.keyfile.keypair"]], "legacy_encrypt_keyfile_data() (in module bittensor.keyfile)": [[40, "bittensor.keyfile.legacy_encrypt_keyfile_data"]], "make_dirs() (bittensor.keyfile.mockkeyfile method)": [[40, "bittensor.keyfile.Mockkeyfile.make_dirs"]], "make_dirs() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile.make_dirs"]], "serialized_keypair_to_keyfile_data() (in module bittensor.keyfile)": [[40, "bittensor.keyfile.serialized_keypair_to_keyfile_data"]], "set_keypair() (bittensor.keyfile.mockkeyfile method)": [[40, "bittensor.keyfile.Mockkeyfile.set_keypair"]], "set_keypair() (bittensor.keyfile.keyfile method)": [[40, "bittensor.keyfile.keyfile.set_keypair"]], "validate_password() (in module bittensor.keyfile)": [[40, "bittensor.keyfile.validate_password"]], "b (bittensor.metagraph.metagraphmixin property)": [[41, "bittensor.metagraph.MetagraphMixin.B"]], "baseclass (in module bittensor.metagraph)": [[41, "bittensor.metagraph.BaseClass"]], "c (bittensor.metagraph.metagraphmixin property)": [[41, "bittensor.metagraph.MetagraphMixin.C"]], "d (bittensor.metagraph.metagraphmixin property)": [[41, "bittensor.metagraph.MetagraphMixin.D"]], "e (bittensor.metagraph.metagraphmixin property)": [[41, "bittensor.metagraph.MetagraphMixin.E"]], "i (bittensor.metagraph.metagraphmixin property)": [[41, "bittensor.metagraph.MetagraphMixin.I"]], "metagraph_state_dict_ndarray_keys (in module bittensor.metagraph)": [[41, "bittensor.metagraph.METAGRAPH_STATE_DICT_NDARRAY_KEYS"]], "metagraphmixin (class in bittensor.metagraph)": [[41, "bittensor.metagraph.MetagraphMixin"]], "nontorchmetagraph (class in bittensor.metagraph)": [[41, "bittensor.metagraph.NonTorchMetagraph"]], "r (bittensor.metagraph.metagraphmixin property)": [[41, "bittensor.metagraph.MetagraphMixin.R"]], "s (bittensor.metagraph.metagraphmixin property)": [[41, "bittensor.metagraph.MetagraphMixin.S"]], "t (bittensor.metagraph.metagraphmixin property)": [[41, "bittensor.metagraph.MetagraphMixin.T"]], "torchmetagraph (class in bittensor.metagraph)": [[41, "bittensor.metagraph.TorchMetaGraph"]], "tv (bittensor.metagraph.metagraphmixin property)": [[41, "bittensor.metagraph.MetagraphMixin.Tv"]], "w (bittensor.metagraph.metagraphmixin property)": [[41, "bittensor.metagraph.MetagraphMixin.W"]], "__repr__() (bittensor.metagraph.metagraphmixin method)": [[41, "bittensor.metagraph.MetagraphMixin.__repr__"]], "__str__() (bittensor.metagraph.metagraphmixin method)": [[41, "bittensor.metagraph.MetagraphMixin.__str__"]], "_assign_neurons() (bittensor.metagraph.metagraphmixin method)": [[41, "bittensor.metagraph.MetagraphMixin._assign_neurons"]], "_create_tensor() (bittensor.metagraph.metagraphmixin static method)": [[41, "bittensor.metagraph.MetagraphMixin._create_tensor"]], "_initialize_subtensor() (bittensor.metagraph.metagraphmixin method)": [[41, "bittensor.metagraph.MetagraphMixin._initialize_subtensor"]], "_process_root_weights() (bittensor.metagraph.metagraphmixin method)": [[41, "bittensor.metagraph.MetagraphMixin._process_root_weights"]], "_process_weights_or_bonds() (bittensor.metagraph.metagraphmixin method)": [[41, "bittensor.metagraph.MetagraphMixin._process_weights_or_bonds"]], "_set_metagraph_attributes() (bittensor.metagraph.metagraphmixin method)": [[41, "bittensor.metagraph.MetagraphMixin._set_metagraph_attributes"]], "_set_metagraph_attributes() (bittensor.metagraph.nontorchmetagraph method)": [[41, "bittensor.metagraph.NonTorchMetagraph._set_metagraph_attributes"]], "_set_metagraph_attributes() (bittensor.metagraph.torchmetagraph method)": [[41, "bittensor.metagraph.TorchMetaGraph._set_metagraph_attributes"]], "_set_weights_and_bonds() (bittensor.metagraph.metagraphmixin method)": [[41, "bittensor.metagraph.MetagraphMixin._set_weights_and_bonds"]], "active (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.active"]], "addresses (bittensor.metagraph.metagraphmixin property)": [[41, "bittensor.metagraph.MetagraphMixin.addresses"]], "axons (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.axons"]], "bittensor.metagraph": [[41, "module-bittensor.metagraph"]], "block (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.block"]], "bonds (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.bonds"]], "coldkeys (bittensor.metagraph.metagraphmixin property)": [[41, "bittensor.metagraph.MetagraphMixin.coldkeys"]], "consensus (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.consensus"]], "dividends (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.dividends"]], "emission (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.emission"]], "get_save_dir() (in module bittensor.metagraph)": [[41, "bittensor.metagraph.get_save_dir"]], "hotkeys (bittensor.metagraph.metagraphmixin property)": [[41, "bittensor.metagraph.MetagraphMixin.hotkeys"]], "incentive (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.incentive"]], "last_update (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.last_update"]], "latest_block_path() (in module bittensor.metagraph)": [[41, "bittensor.metagraph.latest_block_path"]], "load() (bittensor.metagraph.metagraphmixin method)": [[41, "bittensor.metagraph.MetagraphMixin.load"]], "load_from_path() (bittensor.metagraph.metagraphmixin method)": [[41, "bittensor.metagraph.MetagraphMixin.load_from_path"]], "load_from_path() (bittensor.metagraph.nontorchmetagraph method)": [[41, "bittensor.metagraph.NonTorchMetagraph.load_from_path"]], "load_from_path() (bittensor.metagraph.torchmetagraph method)": [[41, "bittensor.metagraph.TorchMetaGraph.load_from_path"]], "metadata() (bittensor.metagraph.metagraphmixin method)": [[41, "bittensor.metagraph.MetagraphMixin.metadata"]], "metagraph (in module bittensor.metagraph)": [[41, "bittensor.metagraph.metagraph"]], "n (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.n"]], "netuid (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.netuid"]], "network (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.network"]], "ranks (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.ranks"]], "save() (bittensor.metagraph.metagraphmixin method)": [[41, "bittensor.metagraph.MetagraphMixin.save"]], "stake (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.stake"]], "state_dict() (bittensor.metagraph.metagraphmixin method)": [[41, "bittensor.metagraph.MetagraphMixin.state_dict"]], "sync() (bittensor.metagraph.metagraphmixin method)": [[41, "bittensor.metagraph.MetagraphMixin.sync"]], "total_stake (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.total_stake"]], "trust (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.trust"]], "uids (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.uids"]], "validator_permit (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.validator_permit"]], "validator_trust (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.validator_trust"]], "version (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.version"]], "weights (bittensor.metagraph.metagraphmixin attribute)": [[41, "bittensor.metagraph.MetagraphMixin.weights"]], "btstreamingresponsemodel (class in bittensor.stream)": [[42, "bittensor.stream.BTStreamingResponseModel"]], "streamingsynapse (class in bittensor.stream)": [[42, "bittensor.stream.StreamingSynapse"]], "streamingsynapse.btstreamingresponse (class in bittensor.stream)": [[42, "bittensor.stream.StreamingSynapse.BTStreamingResponse"]], "__call__() (bittensor.stream.streamingsynapse.btstreamingresponse method)": [[42, "bittensor.stream.StreamingSynapse.BTStreamingResponse.__call__"]], "bittensor.stream": [[42, "module-bittensor.stream"]], "create_streaming_response() (bittensor.stream.streamingsynapse method)": [[42, "bittensor.stream.StreamingSynapse.create_streaming_response"]], "extract_response_json() (bittensor.stream.streamingsynapse method)": [[42, "bittensor.stream.StreamingSynapse.extract_response_json"]], "model_config (bittensor.stream.streamingsynapse attribute)": [[42, "bittensor.stream.StreamingSynapse.model_config"]], "process_streaming_response() (bittensor.stream.streamingsynapse method)": [[42, "bittensor.stream.StreamingSynapse.process_streaming_response"]], "stream_response() (bittensor.stream.streamingsynapse.btstreamingresponse method)": [[42, "bittensor.stream.StreamingSynapse.BTStreamingResponse.stream_response"]], "token_streamer (bittensor.stream.btstreamingresponsemodel attribute)": [[42, "bittensor.stream.BTStreamingResponseModel.token_streamer"], [42, "id0"]], "subnetsapi (class in bittensor.subnets)": [[43, "bittensor.subnets.SubnetsAPI"]], "__call__() (bittensor.subnets.subnetsapi method)": [[43, "bittensor.subnets.SubnetsAPI.__call__"]], "bittensor.subnets": [[43, "module-bittensor.subnets"]], "prepare_synapse() (bittensor.subnets.subnetsapi method)": [[43, "bittensor.subnets.SubnetsAPI.prepare_synapse"]], "process_responses() (bittensor.subnets.subnetsapi method)": [[43, "bittensor.subnets.SubnetsAPI.process_responses"]], "query_api() (bittensor.subnets.subnetsapi method)": [[43, "bittensor.subnets.SubnetsAPI.query_api"]], "key_nonce (in module bittensor.subtensor)": [[44, "bittensor.subtensor.KEY_NONCE"]], "paramwithtypes (class in bittensor.subtensor)": [[44, "bittensor.subtensor.ParamWithTypes"]], "__repr__() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.__repr__"]], "__str__() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.__str__"]], "_do_associate_ips() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_associate_ips"]], "_do_burned_register() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_burned_register"]], "_do_decrease_take() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_decrease_take"]], "_do_delegation() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_delegation"]], "_do_increase_take() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_increase_take"]], "_do_nominate() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_nominate"]], "_do_pow_register() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_pow_register"]], "_do_root_register() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_root_register"]], "_do_serve_axon() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_serve_axon"]], "_do_serve_prometheus() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_serve_prometheus"]], "_do_set_weights() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_set_weights"]], "_do_stake() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_stake"]], "_do_swap_hotkey() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_swap_hotkey"]], "_do_transfer() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_transfer"]], "_do_undelegation() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_undelegation"]], "_do_unstake() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._do_unstake"]], "_encode_params() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._encode_params"]], "_get_hyperparameter() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor._get_hyperparameter"]], "_null_neuron() (bittensor.subtensor.subtensor static method)": [[44, "bittensor.subtensor.subtensor._null_neuron"]], "add_args() (bittensor.subtensor.subtensor class method)": [[44, "bittensor.subtensor.subtensor.add_args"]], "add_stake() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.add_stake"]], "add_stake_multiple() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.add_stake_multiple"]], "adjustment_alpha() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.adjustment_alpha"]], "associated_validator_ip_info() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.associated_validator_ip_info"]], "bittensor.subtensor": [[44, "module-bittensor.subtensor"]], "block (bittensor.subtensor.subtensor property)": [[44, "bittensor.subtensor.subtensor.block"]], "blocks_since_epoch() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.blocks_since_epoch"]], "blocks_since_last_update() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.blocks_since_last_update"]], "bonds() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.bonds"]], "bonds_moving_avg() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.bonds_moving_avg"]], "burned_register() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.burned_register"]], "close() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.close"]], "commit() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.commit"]], "config() (bittensor.subtensor.subtensor static method)": [[44, "bittensor.subtensor.subtensor.config"]], "delegate() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.delegate"]], "determine_chain_endpoint_and_network() (bittensor.subtensor.subtensor static method)": [[44, "bittensor.subtensor.subtensor.determine_chain_endpoint_and_network"]], "difficulty() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.difficulty"]], "does_hotkey_exist() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.does_hotkey_exist"]], "get_all_neurons_for_pubkey() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_all_neurons_for_pubkey"]], "get_all_subnet_netuids() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_all_subnet_netuids"]], "get_all_subnets_info() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_all_subnets_info"]], "get_all_uids_for_hotkey() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_all_uids_for_hotkey"]], "get_axon_info() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_axon_info"]], "get_balance() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_balance"]], "get_balances() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_balances"]], "get_block_hash() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_block_hash"]], "get_commitment() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_commitment"]], "get_current_block() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_current_block"]], "get_delegate_by_hotkey() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_delegate_by_hotkey"]], "get_delegate_take() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_delegate_take"]], "get_delegated() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_delegated"]], "get_delegates() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_delegates"]], "get_delegates_lite() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_delegates_lite"]], "get_emission_value_by_subnet() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_emission_value_by_subnet"]], "get_error_info_by_index() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_error_info_by_index"]], "get_existential_deposit() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_existential_deposit"]], "get_hotkey_owner() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_hotkey_owner"]], "get_minimum_required_stake() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_minimum_required_stake"]], "get_netuids_for_hotkey() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_netuids_for_hotkey"]], "get_neuron_for_pubkey_and_subnet() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_neuron_for_pubkey_and_subnet"]], "get_nominators_for_hotkey() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_nominators_for_hotkey"]], "get_prometheus_info() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_prometheus_info"]], "get_proposal_call_data() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_proposal_call_data"]], "get_proposal_hashes() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_proposal_hashes"]], "get_proposal_vote_data (bittensor.subtensor.subtensor attribute)": [[44, "bittensor.subtensor.subtensor.get_proposal_vote_data"]], "get_proposals() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_proposals"]], "get_senate_members() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_senate_members"]], "get_stake() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_stake"]], "get_stake_for_coldkey_and_hotkey() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_stake_for_coldkey_and_hotkey"]], "get_stake_info_for_coldkey() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_stake_info_for_coldkey"]], "get_stake_info_for_coldkeys() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_stake_info_for_coldkeys"]], "get_subnet_burn_cost() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_subnet_burn_cost"]], "get_subnet_connection_requirement() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_subnet_connection_requirement"]], "get_subnet_connection_requirements() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_subnet_connection_requirements"]], "get_subnet_hyperparameters() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_subnet_hyperparameters"]], "get_subnet_info() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_subnet_info"]], "get_subnet_modality() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_subnet_modality"]], "get_subnet_owner() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_subnet_owner"]], "get_subnets() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_subnets"]], "get_total_stake_for_coldkey() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_total_stake_for_coldkey"]], "get_total_stake_for_hotkey() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_total_stake_for_hotkey"]], "get_total_subnets() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_total_subnets"]], "get_transfer_fee() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_transfer_fee"]], "get_uid_for_hotkey_on_subnet() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_uid_for_hotkey_on_subnet"]], "get_vote_data() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.get_vote_data"]], "help() (bittensor.subtensor.subtensor class method)": [[44, "bittensor.subtensor.subtensor.help"]], "immunity_period() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.immunity_period"]], "incentive() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.incentive"]], "is_hotkey_delegate() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.is_hotkey_delegate"]], "is_hotkey_registered() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.is_hotkey_registered"]], "is_hotkey_registered_any() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.is_hotkey_registered_any"]], "is_hotkey_registered_on_subnet() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.is_hotkey_registered_on_subnet"]], "is_senate_member() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.is_senate_member"]], "kappa() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.kappa"]], "leave_senate() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.leave_senate"]], "max_allowed_validators() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.max_allowed_validators"]], "max_n() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.max_n"]], "max_weight_limit() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.max_weight_limit"]], "metagraph() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.metagraph"]], "min_allowed_weights() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.min_allowed_weights"]], "name (bittensor.subtensor.paramwithtypes attribute)": [[44, "bittensor.subtensor.ParamWithTypes.name"]], "neuron_for_uid() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.neuron_for_uid"]], "neuron_for_uid_lite() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.neuron_for_uid_lite"]], "neuron_for_wallet() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.neuron_for_wallet"]], "neuron_has_validator_permit() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.neuron_has_validator_permit"]], "neurons() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.neurons"]], "neurons_lite() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.neurons_lite"]], "nominate() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.nominate"]], "original_convert_type_string (in module bittensor.subtensor)": [[44, "bittensor.subtensor.original_convert_type_string"]], "query_constant() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.query_constant"]], "query_identity() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.query_identity"]], "query_map() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.query_map"]], "query_map_subtensor() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.query_map_subtensor"]], "query_module() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.query_module"]], "query_runtime_api() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.query_runtime_api"]], "query_subtensor() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.query_subtensor"]], "recycle() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.recycle"]], "register() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.register"]], "register_senate() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.register_senate"]], "register_subnetwork() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.register_subnetwork"]], "rho() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.rho"]], "root_register() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.root_register"]], "root_set_weights() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.root_set_weights"]], "run_faucet() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.run_faucet"]], "scaling_law_power() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.scaling_law_power"]], "send_extrinsic() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.send_extrinsic"]], "serve() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.serve"]], "serve_axon() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.serve_axon"]], "serve_prometheus() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.serve_prometheus"]], "serving_rate_limit() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.serving_rate_limit"]], "set_hyperparameter() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.set_hyperparameter"]], "set_take() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.set_take"]], "set_weights() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.set_weights"]], "setup_config() (bittensor.subtensor.subtensor static method)": [[44, "bittensor.subtensor.subtensor.setup_config"]], "state_call() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.state_call"]], "subnet_exists() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.subnet_exists"]], "subnetwork_n() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.subnetwork_n"]], "subtensor (class in bittensor.subtensor)": [[44, "bittensor.subtensor.subtensor"]], "swap_hotkey() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.swap_hotkey"]], "synergy_scaling_law_power() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.synergy_scaling_law_power"]], "tempo() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.tempo"]], "total_issuance() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.total_issuance"]], "total_stake() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.total_stake"]], "transfer() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.transfer"]], "tx_rate_limit() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.tx_rate_limit"]], "type (bittensor.subtensor.paramwithtypes attribute)": [[44, "bittensor.subtensor.ParamWithTypes.type"]], "undelegate() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.undelegate"]], "unstake() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.unstake"]], "unstake_multiple() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.unstake_multiple"]], "update_identity() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.update_identity"]], "validator_batch_size() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.validator_batch_size"]], "validator_epoch_length() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.validator_epoch_length"]], "validator_epochs_per_reset() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.validator_epochs_per_reset"]], "validator_exclude_quantile() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.validator_exclude_quantile"]], "validator_logits_divergence() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.validator_logits_divergence"]], "validator_prune_len() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.validator_prune_len"]], "validator_sequence_length() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.validator_sequence_length"]], "vote_senate() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.vote_senate"]], "weights() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.weights"]], "weights_rate_limit() (bittensor.subtensor.subtensor method)": [[44, "bittensor.subtensor.subtensor.weights_rate_limit"]], "synapse (class in bittensor.synapse)": [[45, "bittensor.synapse.Synapse"]], "terminalinfo (class in bittensor.synapse)": [[45, "bittensor.synapse.TerminalInfo"]], "__setattr__() (bittensor.synapse.synapse method)": [[45, "bittensor.synapse.Synapse.__setattr__"], [45, "id1"]], "_extract_header_size (bittensor.synapse.synapse attribute)": [[45, "bittensor.synapse.Synapse._extract_header_size"]], "_extract_nonce (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo._extract_nonce"]], "_extract_port (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo._extract_port"]], "_extract_process_time (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo._extract_process_time"]], "_extract_status_code (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo._extract_status_code"]], "_extract_timeout (bittensor.synapse.synapse attribute)": [[45, "bittensor.synapse.Synapse._extract_timeout"]], "_extract_total_size (bittensor.synapse.synapse attribute)": [[45, "bittensor.synapse.Synapse._extract_total_size"]], "_extract_version (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo._extract_version"]], "axon (bittensor.synapse.synapse attribute)": [[45, "bittensor.synapse.Synapse.axon"]], "bittensor.synapse": [[45, "module-bittensor.synapse"]], "body_hash (bittensor.synapse.synapse property)": [[45, "id0"]], "body_hash() (bittensor.synapse.synapse method)": [[45, "bittensor.synapse.Synapse.body_hash"]], "cast_float() (in module bittensor.synapse)": [[45, "bittensor.synapse.cast_float"]], "cast_int() (in module bittensor.synapse)": [[45, "bittensor.synapse.cast_int"]], "computed_body_hash (bittensor.synapse.synapse attribute)": [[45, "bittensor.synapse.Synapse.computed_body_hash"]], "dendrite (bittensor.synapse.synapse attribute)": [[45, "bittensor.synapse.Synapse.dendrite"]], "deserialize() (bittensor.synapse.synapse method)": [[45, "bittensor.synapse.Synapse.deserialize"], [45, "id2"]], "failed_verification (bittensor.synapse.synapse property)": [[45, "bittensor.synapse.Synapse.failed_verification"]], "from_headers() (bittensor.synapse.synapse class method)": [[45, "id3"]], "from_headers() (bittensor.synapse.synapse method)": [[45, "bittensor.synapse.Synapse.from_headers"]], "get_required_fields() (bittensor.synapse.synapse method)": [[45, "bittensor.synapse.Synapse.get_required_fields"]], "get_size() (in module bittensor.synapse)": [[45, "bittensor.synapse.get_size"]], "get_total_size() (bittensor.synapse.synapse method)": [[45, "bittensor.synapse.Synapse.get_total_size"], [45, "id4"]], "header_size (bittensor.synapse.synapse attribute)": [[45, "bittensor.synapse.Synapse.header_size"]], "hotkey (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo.hotkey"]], "ip (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo.ip"]], "is_blacklist (bittensor.synapse.synapse property)": [[45, "bittensor.synapse.Synapse.is_blacklist"]], "is_failure (bittensor.synapse.synapse property)": [[45, "bittensor.synapse.Synapse.is_failure"]], "is_success (bittensor.synapse.synapse property)": [[45, "bittensor.synapse.Synapse.is_success"]], "is_timeout (bittensor.synapse.synapse property)": [[45, "bittensor.synapse.Synapse.is_timeout"]], "model_config (bittensor.synapse.synapse attribute)": [[45, "bittensor.synapse.Synapse.model_config"]], "model_config (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo.model_config"]], "name (bittensor.synapse.synapse attribute)": [[45, "bittensor.synapse.Synapse.name"]], "nonce (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo.nonce"]], "parse_headers_to_inputs() (bittensor.synapse.synapse class method)": [[45, "id5"]], "parse_headers_to_inputs() (bittensor.synapse.synapse method)": [[45, "bittensor.synapse.Synapse.parse_headers_to_inputs"]], "port (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo.port"]], "process_time (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo.process_time"]], "required_hash_fields (bittensor.synapse.synapse attribute)": [[45, "bittensor.synapse.Synapse.required_hash_fields"]], "set_name_type() (bittensor.synapse.synapse method)": [[45, "bittensor.synapse.Synapse.set_name_type"]], "signature (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo.signature"]], "status_code (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo.status_code"]], "status_message (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo.status_message"]], "timeout (bittensor.synapse.synapse attribute)": [[45, "bittensor.synapse.Synapse.timeout"]], "to_headers() (bittensor.synapse.synapse method)": [[45, "bittensor.synapse.Synapse.to_headers"], [45, "id6"]], "total_size (bittensor.synapse.synapse attribute)": [[45, "bittensor.synapse.Synapse.total_size"]], "uuid (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo.uuid"]], "version (bittensor.synapse.terminalinfo attribute)": [[45, "bittensor.synapse.TerminalInfo.version"]], "numpy_dtypes (in module bittensor.tensor)": [[46, "bittensor.tensor.NUMPY_DTYPES"]], "torch_dtypes (in module bittensor.tensor)": [[46, "bittensor.tensor.TORCH_DTYPES"]], "tensor (class in bittensor.tensor)": [[46, "bittensor.tensor.Tensor"], [46, "bittensor.tensor.tensor"]], "_extract_dtype (bittensor.tensor.tensor attribute)": [[46, "bittensor.tensor.Tensor._extract_dtype"]], "_extract_shape (bittensor.tensor.tensor attribute)": [[46, "bittensor.tensor.Tensor._extract_shape"]], "bittensor.tensor": [[46, "module-bittensor.tensor"]], "buffer (bittensor.tensor.tensor attribute)": [[46, "bittensor.tensor.Tensor.buffer"]], "cast_dtype() (in module bittensor.tensor)": [[46, "bittensor.tensor.cast_dtype"]], "cast_shape() (in module bittensor.tensor)": [[46, "bittensor.tensor.cast_shape"]], "deserialize() (bittensor.tensor.tensor method)": [[46, "bittensor.tensor.Tensor.deserialize"]], "dtype (bittensor.tensor.tensor attribute)": [[46, "bittensor.tensor.Tensor.dtype"]], "model_config (bittensor.tensor.tensor attribute)": [[46, "bittensor.tensor.Tensor.model_config"]], "numpy() (bittensor.tensor.tensor method)": [[46, "bittensor.tensor.Tensor.numpy"]], "serialize() (bittensor.tensor.tensor static method)": [[46, "bittensor.tensor.Tensor.serialize"]], "shape (bittensor.tensor.tensor attribute)": [[46, "bittensor.tensor.Tensor.shape"]], "tensor() (bittensor.tensor.tensor method)": [[46, "bittensor.tensor.Tensor.tensor"]], "tolist() (bittensor.tensor.tensor method)": [[46, "bittensor.tensor.Tensor.tolist"]], "brokenthreadpool": [[47, "bittensor.threadpool.BrokenThreadPool"]], "null_entry (in module bittensor.threadpool)": [[47, "bittensor.threadpool.NULL_ENTRY"]], "prioritythreadpoolexecutor (class in bittensor.threadpool)": [[47, "bittensor.threadpool.PriorityThreadPoolExecutor"]], "_workitem (class in bittensor.threadpool)": [[47, "bittensor.threadpool._WorkItem"]], "__author__ (in module bittensor.threadpool)": [[47, "bittensor.threadpool.__author__"]], "_adjust_thread_count() (bittensor.threadpool.prioritythreadpoolexecutor method)": [[47, "bittensor.threadpool.PriorityThreadPoolExecutor._adjust_thread_count"]], "_counter (bittensor.threadpool.prioritythreadpoolexecutor attribute)": [[47, "bittensor.threadpool.PriorityThreadPoolExecutor._counter"]], "_initializer_failed() (bittensor.threadpool.prioritythreadpoolexecutor method)": [[47, "bittensor.threadpool.PriorityThreadPoolExecutor._initializer_failed"]], "_shutdown (in module bittensor.threadpool)": [[47, "bittensor.threadpool._shutdown"]], "_threads_queues (in module bittensor.threadpool)": [[47, "bittensor.threadpool._threads_queues"]], "_worker() (in module bittensor.threadpool)": [[47, "bittensor.threadpool._worker"]], "add_args() (bittensor.threadpool.prioritythreadpoolexecutor class method)": [[47, "bittensor.threadpool.PriorityThreadPoolExecutor.add_args"]], "bittensor.threadpool": [[47, "module-bittensor.threadpool"]], "config() (bittensor.threadpool.prioritythreadpoolexecutor class method)": [[47, "bittensor.threadpool.PriorityThreadPoolExecutor.config"]], "is_empty (bittensor.threadpool.prioritythreadpoolexecutor property)": [[47, "bittensor.threadpool.PriorityThreadPoolExecutor.is_empty"]], "logger (in module bittensor.threadpool)": [[47, "bittensor.threadpool.logger"]], "run() (bittensor.threadpool._workitem method)": [[47, "bittensor.threadpool._WorkItem.run"]], "shutdown() (bittensor.threadpool.prioritythreadpoolexecutor method)": [[47, "bittensor.threadpool.PriorityThreadPoolExecutor.shutdown"]], "submit() (bittensor.threadpool.prioritythreadpoolexecutor method)": [[47, "bittensor.threadpool.PriorityThreadPoolExecutor.submit"]], "axonservecallparams (class in bittensor.types)": [[48, "bittensor.types.AxonServeCallParams"]], "prometheusservecallparams (class in bittensor.types)": [[48, "bittensor.types.PrometheusServeCallParams"]], "bittensor.types": [[48, "module-bittensor.types"]], "ip (bittensor.types.axonservecallparams attribute)": [[48, "bittensor.types.AxonServeCallParams.ip"]], "ip (bittensor.types.prometheusservecallparams attribute)": [[48, "bittensor.types.PrometheusServeCallParams.ip"]], "ip_type (bittensor.types.axonservecallparams attribute)": [[48, "bittensor.types.AxonServeCallParams.ip_type"]], "ip_type (bittensor.types.prometheusservecallparams attribute)": [[48, "bittensor.types.PrometheusServeCallParams.ip_type"]], "netuid (bittensor.types.axonservecallparams attribute)": [[48, "bittensor.types.AxonServeCallParams.netuid"]], "netuid (bittensor.types.prometheusservecallparams attribute)": [[48, "bittensor.types.PrometheusServeCallParams.netuid"]], "port (bittensor.types.axonservecallparams attribute)": [[48, "bittensor.types.AxonServeCallParams.port"]], "port (bittensor.types.prometheusservecallparams attribute)": [[48, "bittensor.types.PrometheusServeCallParams.port"]], "version (bittensor.types.axonservecallparams attribute)": [[48, "bittensor.types.AxonServeCallParams.version"]], "version (bittensor.types.prometheusservecallparams attribute)": [[48, "bittensor.types.PrometheusServeCallParams.version"]], "__repr__() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.__repr__"]], "__str__() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.__str__"]], "add_args() (bittensor.wallet.wallet class method)": [[49, "bittensor.wallet.wallet.add_args"]], "bittensor.wallet": [[49, "module-bittensor.wallet"]], "coldkey (bittensor.wallet.wallet property)": [[49, "bittensor.wallet.wallet.coldkey"]], "coldkey_file (bittensor.wallet.wallet property)": [[49, "bittensor.wallet.wallet.coldkey_file"]], "coldkeypub (bittensor.wallet.wallet property)": [[49, "bittensor.wallet.wallet.coldkeypub"]], "coldkeypub_file (bittensor.wallet.wallet property)": [[49, "bittensor.wallet.wallet.coldkeypub_file"]], "config() (bittensor.wallet.wallet class method)": [[49, "bittensor.wallet.wallet.config"]], "create() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.create"]], "create_coldkey_from_uri() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.create_coldkey_from_uri"]], "create_hotkey_from_uri() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.create_hotkey_from_uri"]], "create_if_non_existent() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.create_if_non_existent"]], "create_new_coldkey() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.create_new_coldkey"]], "create_new_hotkey() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.create_new_hotkey"]], "display_mnemonic_msg() (in module bittensor.wallet)": [[49, "bittensor.wallet.display_mnemonic_msg"]], "get_coldkey() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.get_coldkey"]], "get_coldkeypub() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.get_coldkeypub"]], "get_hotkey() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.get_hotkey"]], "help() (bittensor.wallet.wallet class method)": [[49, "bittensor.wallet.wallet.help"]], "hotkey (bittensor.wallet.wallet property)": [[49, "bittensor.wallet.wallet.hotkey"]], "hotkey_file (bittensor.wallet.wallet property)": [[49, "bittensor.wallet.wallet.hotkey_file"]], "new_coldkey() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.new_coldkey"]], "new_hotkey() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.new_hotkey"]], "recreate() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.recreate"]], "regen_coldkey (bittensor.wallet.wallet attribute)": [[49, "bittensor.wallet.wallet.regen_coldkey"]], "regen_coldkeypub (bittensor.wallet.wallet attribute)": [[49, "bittensor.wallet.wallet.regen_coldkeypub"]], "regen_hotkey (bittensor.wallet.wallet attribute)": [[49, "bittensor.wallet.wallet.regen_hotkey"]], "regenerate_coldkey() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.regenerate_coldkey"]], "regenerate_coldkeypub() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.regenerate_coldkeypub"]], "regenerate_hotkey() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.regenerate_hotkey"]], "set_coldkey() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.set_coldkey"]], "set_coldkeypub() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.set_coldkeypub"]], "set_hotkey() (bittensor.wallet.wallet method)": [[49, "bittensor.wallet.wallet.set_hotkey"]], "wallet (class in bittensor.wallet)": [[49, "bittensor.wallet.wallet"]]}})